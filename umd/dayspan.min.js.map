{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dayspan.min.js","webpack:///webpack/bootstrap 58290e48c767ad29835c","webpack:///./src/Constants.ts","webpack:///./src/Calendar.ts","webpack:///./src/Day.ts","webpack:///./src/DaySpan.ts","webpack:///./src/Duration.ts","webpack:///./src/Functions.ts","webpack:///./src/Month.ts","webpack:///./src/Schedule.ts","webpack:///./src/Parse.ts","webpack:///./src/Suffix.ts","webpack:///./src/Weekday.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","CalendarType","Constants","MILLIS_IN_SECOND","MILLIS_IN_MINUTE","MILLIS_IN_HOUR","MILLIS_IN_DAY","MILLIS_IN_WEEK","DAYS_IN_WEEK","MONTHS_IN_YEAR","HOURS_IN_DAY","MONTH_MIN","MONTH_MAX","DAY_MIN","DAY_MAX","HOUR_MIN","HOUR_MAX","MINUTE_MIN","MINUTE_MAX","SECOND_MIN","SECOND_MAX","MILLIS_MIN","MILLIS_MAX","WEEKDAY_MIN","WEEKDAY_MAX","START_NONE","END_NONE","DURATION_NONE","WEEK_OF_MONTH_MINIMUM_WEEKDAY","Day_Day","Day","date","time","getTime","timeless","Math","floor","hour","getHours","minute","getMinutes","dayOfWeek","getDay","dayOfMonth","getDate","dayOfYear","getDayOfYear","month","getMonth","weekOfYear","getWeekOfYear","weekOfMonth","getWeekOfMonth","year","getFullYear","seconds","getSeconds","millis","getMilliseconds","sameDay","day","sameMonth","sameWeek","sameYear","sameHour","sameMinute","timeBetween","unitMillis","partial","absolute","round","start","end","between","ceil","millisBetween","daysBetween","partialDays","weeksBetween","partialWeeks","startOfWeek","hoursBetween","partialHours","startOfHour","isBetween","inclusive","Date","relativeTimezoneOffset","offset","mutate","setTime","getTimezoneOffset","mutator","relative","relativeDays","days","prev","next","withDayOfMonth","setDate","withDayOfWeek","withDayOfYear","withMonth","setMonth","relativeMonths","months","prevMonth","nextMonth","withWeek","week","_this","relativeWeeks","weeks","prevWeek","nextWeek","withYear","setFullYear","relativeYears","years","prevYear","nextYear","withHour","setHours","relativeHours","hours","prevHour","nextHour","withTime","second","isStart","isEnd","isStartOfHour","endOfHour","isEndOfHour","isStartOfWeek","endOfWeek","isEndOfWeek","startOfMonth","isStartOfMonth","endOfMonth","daysInMonth","isEndOfMonth","startOfYear","isStartOfYear","endOfYear","isEndOfYear","daysInYear","now","today","tomorrow","utc","create","firstOfYear","dom","dow","sundayDate","diff","DaySpan_DaySpan","DaySpan","contains","matchesDay","matchesWeek","matchesMonth","matchesYear","intersects","span","intersection","max","min","point","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","CalendarDay","_super","apply","arguments","events","updateCurrent","current","currentDay","currentWeek","currentMonth","currentYear","updateSelected","selected","selectedDay","selectedWeek","selectedMonth","selectedYear","clearSelected","CalendarEvent","event","schedule","actualDay","fullDay","isPoint","covers","Calendar_Calendar","Calendar","type","size","mover","fill","repeatCovers","listTimes","eventsOutside","selection","schedules","refresh","set","fillStart","fillEnd","length","resetDays","refreshCurrent","refreshSelection","refreshEvents","total","inCalendar","iterateDays","eventsForDay","iterator","getTimes","allDay","_i","_a","entry","coversDay","times","getSpansOver","getSpansOn","_b","times_1","push","findSchedule","input","removeSchedules","delayRefresh","schedules_1","removeSchedule","found","splice","indexOf","addSchedule","allowDuplicates","addSchedules","schedules_2","select","unselect","move","jump","around","focus","amount","DAY","WEEK","MONTH","YEAR","Duration_Duration","Duration","x","minutes","Functions","isArray","isString","isNumber","isFinite","isObject","isDefined","isFrequencyValueEvery","every","isFrequencyValueOneOf","coalesce","a","Month","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","NAMES","CODES","Schedule_Schedule","Schedule","Parse_Parse","refreshHours","sort","matchesSpan","duration","matchesRange","before","durationInDays","lastHour","durationEnd","durationPast","nextDay","lookAhead","prevDay","lookBack","matchesTime","isFullDay","spans","behind","hourStart","hourEnd","hourSpan","check","Parse","frequency","otherwiseEvery","otherwiseOffset","offset_1","every_1","map_1","out","exclude","Suffix","_CACHE","_CACHE_SIZE","determine","MAP","append","suffix","Weekday","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"],"mappings":"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","file":"dayspan.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Dayspan\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Dayspan\"] = factory();\n\telse\n\t\troot[\"Dayspan\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Dayspan\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Dayspan\"] = factory();\n\telse\n\t\troot[\"Dayspan\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./src/Constants.ts\n\r\nvar Constants = (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.MILLIS_IN_SECOND = 1000;\r\n    Constants.MILLIS_IN_MINUTE = 1000 * 60;\r\n    Constants.MILLIS_IN_HOUR = 1000 * 60 * 60;\r\n    Constants.MILLIS_IN_DAY = 1000 * 60 * 60 * 24;\r\n    Constants.MILLIS_IN_WEEK = 1000 * 60 * 60 * 24 * 7;\r\n    Constants.DAYS_IN_WEEK = 7;\r\n    Constants.MONTHS_IN_YEAR = 12;\r\n    Constants.HOURS_IN_DAY = 24;\r\n    Constants.MONTH_MIN = 0;\r\n    Constants.MONTH_MAX = 11;\r\n    Constants.DAY_MIN = 1;\r\n    Constants.DAY_MAX = 31;\r\n    Constants.HOUR_MIN = 0;\r\n    Constants.HOUR_MAX = 23;\r\n    Constants.MINUTE_MIN = 0;\r\n    Constants.MINUTE_MAX = 59;\r\n    Constants.SECOND_MIN = 0;\r\n    Constants.SECOND_MAX = 59;\r\n    Constants.MILLIS_MIN = 0;\r\n    Constants.MILLIS_MAX = 999;\r\n    Constants.WEEKDAY_MIN = 0;\r\n    Constants.WEEKDAY_MAX = 6;\r\n    Constants.START_NONE = 0;\r\n    Constants.END_NONE = 0;\r\n    Constants.DURATION_NONE = 0;\r\n    Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY = 4; // Thursday by default\r\n    return Constants;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Day.ts\n\r\n\r\nvar Day_Day = (function () {\r\n    function Day(date) {\r\n        this.date = date;\r\n        this.time = date.getTime();\r\n        this.timeless = Math.floor(this.time / Constants.MILLIS_IN_DAY);\r\n        this.hour = date.getHours();\r\n        this.minute = date.getMinutes();\r\n        this.dayOfWeek = date.getDay();\r\n        this.dayOfMonth = date.getDate();\r\n        this.dayOfYear = Day.getDayOfYear(date);\r\n        this.month = date.getMonth();\r\n        this.weekOfYear = Day.getWeekOfYear(date);\r\n        this.weekOfMonth = Day.getWeekOfMonth(date);\r\n        this.year = date.getFullYear();\r\n        this.seconds = date.getSeconds();\r\n        this.millis = date.getMilliseconds();\r\n    }\r\n    // Same\r\n    Day.prototype.sameDay = function (day) {\r\n        return this.year === day.year && this.month === day.month && this.dayOfMonth === day.dayOfMonth;\r\n    };\r\n    Day.prototype.sameMonth = function (day) {\r\n        return this.year === day.year && this.month === day.month;\r\n    };\r\n    Day.prototype.sameWeek = function (day) {\r\n        return this.year === day.year && this.weekOfYear === day.weekOfYear;\r\n    };\r\n    Day.prototype.sameYear = function (day) {\r\n        return this.year === day.year;\r\n    };\r\n    Day.prototype.sameHour = function (day) {\r\n        return this.sameDay(day) && this.hour === day.hour;\r\n    };\r\n    Day.prototype.sameMinute = function (day) {\r\n        return this.sameDay(day) && this.hour === day.hour && this.minute === day.minute;\r\n    };\r\n    // Between\r\n    Day.prototype.timeBetween = function (day, unitMillis, floor, partial, absolute, round) {\r\n        if (partial === void 0) { partial = true; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        if (round === void 0) { round = true; }\r\n        var start = partial ? floor(this) : this;\r\n        var end = partial ? floor(day) : day;\r\n        var between = (end.time - start.time) / unitMillis;\r\n        if (absolute && between < 0) {\r\n            between = -between;\r\n        }\r\n        if (round) {\r\n            if (between < 0) {\r\n                between = Math.ceil(between);\r\n            }\r\n            else {\r\n                between = Math.floor(between);\r\n            }\r\n        }\r\n        return between;\r\n    };\r\n    Day.prototype.millisBetween = function (day, absolute) {\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.timeBetween(day, 1, function (d) { return d; }, false, absolute, false);\r\n    };\r\n    Day.prototype.daysBetween = function (day, partialDays, absolute, round) {\r\n        if (partialDays === void 0) { partialDays = true; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        if (round === void 0) { round = true; }\r\n        return this.timeBetween(day, Constants.MILLIS_IN_DAY, function (d) { return d.start(); }, partialDays, absolute, round);\r\n    };\r\n    Day.prototype.weeksBetween = function (day, partialWeeks, absolute, round) {\r\n        if (partialWeeks === void 0) { partialWeeks = true; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        if (round === void 0) { round = true; }\r\n        return this.timeBetween(day, Constants.MILLIS_IN_WEEK, function (d) { return d.startOfWeek(); }, partialWeeks, absolute, round);\r\n    };\r\n    Day.prototype.hoursBetween = function (day, partialHours, absolute, round) {\r\n        if (partialHours === void 0) { partialHours = true; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        if (round === void 0) { round = true; }\r\n        return this.timeBetween(day, Constants.MILLIS_IN_HOUR, function (d) { return d.startOfHour(); }, partialHours, absolute, round);\r\n    };\r\n    Day.prototype.isBetween = function (start, end, inclusive) {\r\n        if (inclusive === void 0) { inclusive = false; }\r\n        return this.time >= start.time && ((inclusive && this.time <= end.time) ||\r\n            (!inclusive && this.time < end.time));\r\n    };\r\n    Day.prototype.getDate = function () {\r\n        return new Date(this.time);\r\n    };\r\n    Day.prototype.relativeTimezoneOffset = function (offset) {\r\n        if (offset === void 0) { offset = 1; }\r\n        return this.mutate(function (d) {\r\n            d.setTime(d.getTime() + d.getTimezoneOffset() * Constants.MILLIS_IN_MINUTE);\r\n        });\r\n    };\r\n    Day.prototype.mutate = function (mutator) {\r\n        var d = this.getDate();\r\n        mutator(d);\r\n        return new Day(d);\r\n    };\r\n    Day.prototype.relative = function (millis) {\r\n        return this.mutate(function (d) {\r\n            d.setTime(d.getTime() + millis);\r\n        });\r\n    };\r\n    // Days\r\n    Day.prototype.relativeDays = function (days) {\r\n        return this.relative(days * Constants.MILLIS_IN_DAY);\r\n    };\r\n    Day.prototype.prev = function (days) {\r\n        if (days === void 0) { days = 1; }\r\n        return this.relativeDays(-days);\r\n    };\r\n    Day.prototype.next = function (days) {\r\n        if (days === void 0) { days = 1; }\r\n        return this.relativeDays(days);\r\n    };\r\n    Day.prototype.withDayOfMonth = function (day) {\r\n        return this.mutate(function (d) {\r\n            d.setDate(day);\r\n        });\r\n    };\r\n    Day.prototype.withDayOfWeek = function (dayOfWeek) {\r\n        return this.relativeDays(dayOfWeek - this.dayOfWeek);\r\n    };\r\n    Day.prototype.withDayOfYear = function (dayOfYear) {\r\n        return this.relativeDays(dayOfYear - this.dayOfYear);\r\n    };\r\n    // Month\r\n    Day.prototype.withMonth = function (month) {\r\n        return this.mutate(function (d) {\r\n            d.setMonth(month);\r\n        });\r\n    };\r\n    Day.prototype.relativeMonths = function (months) {\r\n        return this.withMonth(this.month + months);\r\n    };\r\n    Day.prototype.prevMonth = function (months) {\r\n        if (months === void 0) { months = 1; }\r\n        return this.relativeMonths(-months);\r\n    };\r\n    Day.prototype.nextMonth = function (months) {\r\n        if (months === void 0) { months = 1; }\r\n        return this.relativeMonths(months);\r\n    };\r\n    // Week Of Year\r\n    Day.prototype.withWeek = function (week) {\r\n        var _this = this;\r\n        return this.mutate(function (d) {\r\n            d.setDate((week - _this.weekOfYear) * Constants.DAYS_IN_WEEK);\r\n        });\r\n    };\r\n    Day.prototype.relativeWeeks = function (weeks) {\r\n        return this.relative(weeks * Constants.MILLIS_IN_WEEK);\r\n    };\r\n    Day.prototype.prevWeek = function (weeks) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        return this.relativeWeeks(-weeks);\r\n    };\r\n    Day.prototype.nextWeek = function (weeks) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        return this.relativeWeeks(weeks);\r\n    };\r\n    // Year\r\n    Day.prototype.withYear = function (year) {\r\n        return this.mutate(function (d) {\r\n            d.setFullYear(year);\r\n        });\r\n    };\r\n    Day.prototype.relativeYears = function (years) {\r\n        return this.withYear(this.year + years);\r\n    };\r\n    Day.prototype.prevYear = function (years) {\r\n        if (years === void 0) { years = 1; }\r\n        return this.relativeYears(-years);\r\n    };\r\n    Day.prototype.nextYear = function (years) {\r\n        if (years === void 0) { years = 1; }\r\n        return this.relativeYears(years);\r\n    };\r\n    // Hour\r\n    Day.prototype.withHour = function (hour) {\r\n        return this.mutate(function (d) {\r\n            d.setHours(hour);\r\n        });\r\n    };\r\n    Day.prototype.relativeHours = function (hours) {\r\n        return this.withHour(this.hour + hours);\r\n    };\r\n    Day.prototype.prevHour = function (hours) {\r\n        if (hours === void 0) { hours = 1; }\r\n        return this.relativeHours(-hours);\r\n    };\r\n    Day.prototype.nextHour = function (hours) {\r\n        if (hours === void 0) { hours = 1; }\r\n        return this.relativeHours(hours);\r\n    };\r\n    // Time\r\n    Day.prototype.withTime = function (hour, minute, second, millis) {\r\n        if (hour === void 0) { hour = Constants.HOUR_MIN; }\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millis === void 0) { millis = Constants.MILLIS_MIN; }\r\n        return this.mutate(function (d) {\r\n            d.setHours(hour, minute, second, millis);\r\n        });\r\n    };\r\n    // Start & End\r\n    // Time\r\n    Day.prototype.start = function () {\r\n        return this.withTime();\r\n    };\r\n    Day.prototype.isStart = function () {\r\n        return this.hour === Constants.HOUR_MIN &&\r\n            this.minute === Constants.MINUTE_MIN &&\r\n            this.seconds === Constants.SECOND_MIN &&\r\n            this.millis === Constants.MILLIS_MIN;\r\n    };\r\n    Day.prototype.end = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.withTime(Constants.HOUR_MAX, Constants.MINUTE_MAX, Constants.SECOND_MAX, Constants.MINUTE_MAX) :\r\n            this.next().start();\r\n    };\r\n    Day.prototype.isEnd = function () {\r\n        return this.hour === Constants.HOUR_MAX &&\r\n            this.minute === Constants.MINUTE_MAX &&\r\n            this.seconds === Constants.SECOND_MAX &&\r\n            this.millis === Constants.MILLIS_MAX;\r\n    };\r\n    // Hour\r\n    Day.prototype.startOfHour = function () {\r\n        return this.withTime(this.hour);\r\n    };\r\n    Day.prototype.isStartOfHour = function () {\r\n        return this.minute === Constants.MINUTE_MIN &&\r\n            this.seconds === Constants.SECOND_MIN &&\r\n            this.millis === Constants.MILLIS_MIN;\r\n    };\r\n    Day.prototype.endOfHour = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.withTime(this.hour, Constants.MINUTE_MAX, Constants.SECOND_MAX, Constants.MINUTE_MAX) :\r\n            this.withTime(this.hour + 1);\r\n    };\r\n    Day.prototype.isEndOfHour = function () {\r\n        return this.minute === Constants.MINUTE_MAX &&\r\n            this.seconds === Constants.SECOND_MAX &&\r\n            this.millis === Constants.MILLIS_MAX;\r\n    };\r\n    // Week\r\n    Day.prototype.startOfWeek = function () {\r\n        return this.relativeDays(-this.dayOfWeek);\r\n    };\r\n    Day.prototype.isStartOfWeek = function () {\r\n        return this.dayOfWeek === Constants.WEEKDAY_MIN;\r\n    };\r\n    Day.prototype.endOfWeek = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.relativeDays(Constants.DAYS_IN_WEEK - this.dayOfWeek - 1) :\r\n            this.startOfWeek().nextWeek();\r\n    };\r\n    Day.prototype.isEndOfWeek = function () {\r\n        return this.dayOfWeek === Constants.WEEKDAY_MAX;\r\n    };\r\n    // Month\r\n    Day.prototype.startOfMonth = function () {\r\n        return this.withDayOfMonth(Constants.DAY_MIN);\r\n    };\r\n    Day.prototype.isStartOfMonth = function () {\r\n        return this.dayOfMonth === Constants.DAY_MIN;\r\n    };\r\n    Day.prototype.endOfMonth = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.withDayOfMonth(this.daysInMonth()) :\r\n            this.startOfMonth().nextMonth();\r\n    };\r\n    Day.prototype.isEndOfMonth = function () {\r\n        return this.dayOfMonth === this.daysInMonth();\r\n    };\r\n    // Year\r\n    Day.prototype.startOfYear = function () {\r\n        return this.mutate(function (d) {\r\n            d.setMonth(Constants.MONTH_MIN, Constants.DAY_MIN);\r\n        });\r\n    };\r\n    Day.prototype.isStartOfYear = function () {\r\n        return this.month === Constants.MONTH_MIN && this.dayOfMonth === Constants.DAY_MIN;\r\n    };\r\n    Day.prototype.endOfYear = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return this.mutate(function (d) {\r\n            d.setMonth(Constants.MONTHS_IN_YEAR, inclusive ? 0 : 1);\r\n        });\r\n    };\r\n    Day.prototype.isEndOfYear = function () {\r\n        return this.month === Constants.MONTH_MAX && this.dayOfMonth === Constants.DAY_MAX;\r\n    };\r\n    // Days In X\r\n    Day.prototype.daysInMonth = function () {\r\n        var d = this.getDate();\r\n        d.setMonth(d.getMonth() + 1, 0);\r\n        return d.getDate();\r\n    };\r\n    Day.prototype.daysInYear = function () {\r\n        return Day.getDayOfYear(this.endOfYear().date);\r\n    };\r\n    Day.now = function () {\r\n        return new Day(new Date());\r\n    };\r\n    Day.today = function () {\r\n        return this.now().start();\r\n    };\r\n    Day.tomorrow = function () {\r\n        return this.today().next();\r\n    };\r\n    Day.utc = function (millis) {\r\n        return new Day(new Date(millis));\r\n    };\r\n    Day.create = function (year, month, date, hour, minute, second, millis) {\r\n        if (date === void 0) { date = Constants.DAY_MIN; }\r\n        if (hour === void 0) { hour = Constants.HOUR_MIN; }\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millis === void 0) { millis = Constants.MILLIS_MIN; }\r\n        return new Day(new Date(year, month, date, hour, minute, second, millis));\r\n    };\r\n    Day.getWeekOfYear = function (date) {\r\n        var d = new Date(date.getTime());\r\n        d.setHours(0, 0, 0);\r\n        d.setDate(d.getDate() + 4 - (d.getDay() || Constants.DAYS_IN_WEEK));\r\n        var firstOfYear = new Date(d.getFullYear(), 0, 1);\r\n        return Math.ceil((((d.getTime() - firstOfYear.getTime()) / Constants.MILLIS_IN_DAY) + 1) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getWeekOfMonth = function (date) {\r\n        var dom = date.getDate();\r\n        var dow = date.getDay();\r\n        var sundayDate = dom - dow;\r\n        return Math.floor((sundayDate + Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY + 5) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getDayOfYear = function (date) {\r\n        var start = new Date(date.getFullYear(), 0, 0);\r\n        var diff = date.getTime() - start.getTime();\r\n        var day = Math.floor(diff / Constants.MILLIS_IN_DAY);\r\n        return day;\r\n    };\r\n    return Day;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/DaySpan.ts\n\r\n\r\nvar DaySpan_DaySpan = (function () {\r\n    function DaySpan(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    Object.defineProperty(DaySpan.prototype, \"isPoint\", {\r\n        get: function () {\r\n            return this.start.time === this.end.time;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DaySpan.prototype.contains = function (day) {\r\n        return day.time >= this.start.time && day.time < this.end.time;\r\n    };\r\n    DaySpan.prototype.matchesDay = function (day) {\r\n        return this.contains(day) || day.sameDay(this.start) || day.sameDay(this.end);\r\n    };\r\n    DaySpan.prototype.matchesWeek = function (day) {\r\n        return this.contains(day) || day.sameWeek(this.start) || day.sameWeek(this.end);\r\n    };\r\n    DaySpan.prototype.matchesMonth = function (day) {\r\n        return this.contains(day) || day.sameMonth(this.start) || day.sameMonth(this.end);\r\n    };\r\n    DaySpan.prototype.matchesYear = function (day) {\r\n        return this.contains(day) || day.sameYear(this.start) || day.sameYear(this.end);\r\n    };\r\n    DaySpan.prototype.days = function (partialDays, absolute, round) {\r\n        if (partialDays === void 0) { partialDays = true; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        if (round === void 0) { round = true; }\r\n        return this.start.daysBetween(this.end, partialDays, absolute, round);\r\n    };\r\n    DaySpan.prototype.hours = function (partialHours, absolute, round) {\r\n        if (partialHours === void 0) { partialHours = true; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        if (round === void 0) { round = true; }\r\n        return this.start.hoursBetween(this.end, partialHours, absolute, round);\r\n    };\r\n    DaySpan.prototype.weeks = function (partialWeeks, absolute, round) {\r\n        if (partialWeeks === void 0) { partialWeeks = true; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        if (round === void 0) { round = true; }\r\n        return this.start.weeksBetween(this.end, partialWeeks, absolute, round);\r\n    };\r\n    DaySpan.prototype.intersects = function (span) {\r\n        return !(this.end.time < span.start.time ||\r\n            this.start.time >= span.end.time);\r\n    };\r\n    DaySpan.prototype.intersection = function (span) {\r\n        var start = Math.max(this.start.time, span.start.time);\r\n        var end = Math.min(this.end.time, span.end.time);\r\n        return start >= end ? null : new DaySpan(Day_Day.utc(start), Day_Day.utc(end));\r\n    };\r\n    DaySpan.point = function (day) {\r\n        return new DaySpan(day, day);\r\n    };\r\n    return DaySpan;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Calendar.ts\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"DAY\"] = 0] = \"DAY\";\r\n    CalendarType[CalendarType[\"WEEK\"] = 1] = \"WEEK\";\r\n    CalendarType[CalendarType[\"MONTH\"] = 2] = \"MONTH\";\r\n    CalendarType[CalendarType[\"YEAR\"] = 3] = \"YEAR\";\r\n})(CalendarType = CalendarType || (CalendarType = {}));\r\nvar CalendarDay = (function (_super) {\r\n    __extends(CalendarDay, _super);\r\n    function CalendarDay() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.events = [];\r\n        return _this;\r\n    }\r\n    CalendarDay.prototype.updateCurrent = function (current) {\r\n        this.currentDay = this.sameDay(current);\r\n        this.currentWeek = this.sameWeek(current);\r\n        this.currentMonth = this.sameMonth(current);\r\n        this.currentYear = this.sameYear(current);\r\n        return this;\r\n    };\r\n    CalendarDay.prototype.updateSelected = function (selected) {\r\n        this.selectedDay = selected.matchesDay(this);\r\n        this.selectedWeek = selected.matchesWeek(this);\r\n        this.selectedMonth = selected.matchesMonth(this);\r\n        this.selectedYear = selected.matchesYear(this);\r\n        return this;\r\n    };\r\n    CalendarDay.prototype.clearSelected = function () {\r\n        this.selectedDay = this.selectedWeek = this.selectedMonth = this.selectedYear = false;\r\n        return this;\r\n    };\r\n    return CalendarDay;\r\n}(Day_Day));\r\n\r\nvar CalendarEvent = (function () {\r\n    function CalendarEvent(event, schedule, time, actualDay) {\r\n        this.event = event;\r\n        this.schedule = schedule;\r\n        this.time = time;\r\n        this.fullDay = time.isPoint;\r\n        this.covers = time.start.sameDay(actualDay);\r\n    }\r\n    return CalendarEvent;\r\n}());\r\n\r\nvar Calendar_Calendar = (function () {\r\n    function Calendar(start, end, type, size, mover, fill) {\r\n        this.repeatCovers = true;\r\n        this.listTimes = false;\r\n        this.eventsOutside = false;\r\n        this.selection = null;\r\n        this.days = [];\r\n        this.schedules = [];\r\n        this.span = new DaySpan_DaySpan(start, end);\r\n        this.type = type;\r\n        this.size = size;\r\n        this.mover = mover;\r\n        this.fill = fill;\r\n        this.refresh();\r\n    }\r\n    Object.defineProperty(Calendar.prototype, \"start\", {\r\n        get: function () {\r\n            return this.span.start;\r\n        },\r\n        set: function (day) {\r\n            this.span.start = day;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Calendar.prototype, \"end\", {\r\n        get: function () {\r\n            return this.span.end;\r\n        },\r\n        set: function (day) {\r\n            this.span.end = day;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Calendar.prototype.fillStart = function () {\r\n        return this.fill ? this.start.startOfWeek() : this.start;\r\n    };\r\n    Calendar.prototype.fillEnd = function () {\r\n        return this.fill ? this.end.endOfWeek(false) : this.end;\r\n    };\r\n    Calendar.prototype.refresh = function (today) {\r\n        if (today === void 0) { today = Day_Day.today(); }\r\n        this.length = this.span.days();\r\n        this.resetDays();\r\n        this.refreshCurrent(today);\r\n        this.refreshSelection();\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Calendar.prototype.resetDays = function () {\r\n        var days = this.days;\r\n        var start = this.fillStart();\r\n        var end = this.fillEnd();\r\n        var total = start.daysBetween(end);\r\n        if (days.length !== total) {\r\n            days.length = total;\r\n        }\r\n        var time = start.time;\r\n        for (var i = 0; i < total; i++) {\r\n            var day = days[i];\r\n            if (!day || day.time !== time) {\r\n                day = new CalendarDay(new Date(time));\r\n                days[i] = day;\r\n            }\r\n            day.inCalendar = this.span.contains(day);\r\n            time += Constants.MILLIS_IN_DAY;\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.refreshCurrent = function (today) {\r\n        if (today === void 0) { today = Day_Day.today(); }\r\n        return this.iterateDays(function (d) {\r\n            d.updateCurrent(today);\r\n        });\r\n    };\r\n    Calendar.prototype.refreshSelection = function () {\r\n        var _this = this;\r\n        return this.iterateDays(function (d) {\r\n            if (_this.selection) {\r\n                d.updateSelected(_this.selection);\r\n            }\r\n            else {\r\n                d.clearSelected();\r\n            }\r\n        });\r\n    };\r\n    Calendar.prototype.refreshEvents = function () {\r\n        var _this = this;\r\n        return this.iterateDays(function (d) {\r\n            if (d.inCalendar || _this.eventsOutside) {\r\n                d.events = _this.eventsForDay(d, _this.listTimes, _this.repeatCovers);\r\n            }\r\n        });\r\n    };\r\n    Calendar.prototype.iterateDays = function (iterator) {\r\n        var days = this.days;\r\n        for (var i = 0; i < days.length; i++) {\r\n            iterator(days[i]);\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.eventsForDay = function (day, getTimes, covers) {\r\n        if (getTimes === void 0) { getTimes = true; }\r\n        if (covers === void 0) { covers = true; }\r\n        var events = [];\r\n        var allDay = DaySpan_DaySpan.point(day);\r\n        for (var _i = 0, _a = this.schedules; _i < _a.length; _i++) {\r\n            var entry = _a[_i];\r\n            if ((covers && entry.schedule.coversDay(day)) || (!covers && entry.schedule.matchesDay(day))) {\r\n                if (getTimes) {\r\n                    var times = covers ?\r\n                        entry.schedule.getSpansOver(day) :\r\n                        entry.schedule.getSpansOn(day);\r\n                    for (var _b = 0, times_1 = times; _b < times_1.length; _b++) {\r\n                        var time = times_1[_b];\r\n                        events.push(new CalendarEvent(entry.event, entry.schedule, time, day));\r\n                    }\r\n                }\r\n                else {\r\n                    events.push(new CalendarEvent(entry.event, entry.schedule, allDay, day));\r\n                }\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    Calendar.prototype.findSchedule = function (input) {\r\n        for (var _i = 0, _a = this.schedules; _i < _a.length; _i++) {\r\n            var schedule = _a[_i];\r\n            if (schedule === input || schedule.schedule === input || schedule.event === input) {\r\n                return schedule;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Calendar.prototype.removeSchedules = function (schedules, delayRefresh) {\r\n        if (schedules === void 0) { schedules = null; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        if (schedules) {\r\n            for (var _i = 0, schedules_1 = schedules; _i < schedules_1.length; _i++) {\r\n                var schedule = schedules_1[_i];\r\n                this.removeSchedule(schedule, true);\r\n            }\r\n        }\r\n        else {\r\n            this.schedules = [];\r\n        }\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.removeSchedule = function (schedule, delayRefresh) {\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        var found = this.findSchedule(schedule);\r\n        if (found) {\r\n            this.schedules.splice(this.schedules.indexOf(found), 1);\r\n            if (!delayRefresh) {\r\n                this.refreshEvents();\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.addSchedule = function (schedule, allowDuplicates, delayRefresh) {\r\n        if (allowDuplicates === void 0) { allowDuplicates = false; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        if (!allowDuplicates) {\r\n            var existing = this.findSchedule(schedule);\r\n            if (existing) {\r\n                return this;\r\n            }\r\n        }\r\n        this.schedules.push(schedule);\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.addSchedules = function (schedules, allowDuplicates, delayRefresh) {\r\n        if (allowDuplicates === void 0) { allowDuplicates = false; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        for (var _i = 0, schedules_2 = schedules; _i < schedules_2.length; _i++) {\r\n            var schedule = schedules_2[_i];\r\n            this.addSchedule(schedule, allowDuplicates, true);\r\n        }\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.select = function (start, end) {\r\n        this.selection = end ? new DaySpan_DaySpan(start, end) : DaySpan_DaySpan.point(start);\r\n        this.refreshSelection();\r\n        return this;\r\n    };\r\n    Calendar.prototype.unselect = function () {\r\n        this.selection = null;\r\n        this.refreshSelection();\r\n        return this;\r\n    };\r\n    Calendar.prototype.move = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        this.start = this.mover(this.start, jump);\r\n        this.end = this.mover(this.end, jump);\r\n        this.refresh();\r\n        return this;\r\n    };\r\n    Calendar.prototype.next = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        return this.move(jump);\r\n    };\r\n    Calendar.prototype.prev = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        return this.move(-jump);\r\n    };\r\n    Calendar.days = function (days, around, focus) {\r\n        if (days === void 0) { days = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        var start = around.start().relativeDays(-Math.floor(days * focus));\r\n        var end = start.relativeDays(days);\r\n        var mover = function (day, amount) { return day.relativeDays(amount); };\r\n        return new Calendar(start, end, CalendarType.DAY, days, mover, false);\r\n    };\r\n    Calendar.weeks = function (weeks, around, focus) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        var start = around.start().startOfWeek().relativeWeeks(-Math.floor(weeks * focus));\r\n        var end = start.relativeWeeks(weeks);\r\n        var mover = function (day, amount) { return day.relativeWeeks(amount); };\r\n        return new Calendar(start, end, CalendarType.WEEK, weeks, mover, false);\r\n    };\r\n    Calendar.months = function (months, around, focus, fill) {\r\n        if (months === void 0) { months = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        if (fill === void 0) { fill = true; }\r\n        var start = around.start().startOfMonth().relativeMonths(-Math.floor(months * focus));\r\n        var end = start.relativeMonths(months);\r\n        var mover = function (day, amount) { return day.relativeMonths(amount); };\r\n        return new Calendar(start, end, CalendarType.MONTH, months, mover, fill);\r\n    };\r\n    Calendar.years = function (years, around, focus, fill) {\r\n        if (years === void 0) { years = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        if (fill === void 0) { fill = true; }\r\n        var start = around.start().startOfMonth().relativeMonths(-Math.floor(years * focus));\r\n        var end = start.relativeMonths(years);\r\n        var mover = function (day, amount) { return day.relativeYears(amount); };\r\n        return new Calendar(start, end, CalendarType.YEAR, years, mover, fill);\r\n    };\r\n    return Calendar;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Duration.ts\n\r\n\r\nvar Duration_Duration = (function () {\r\n    function Duration() {\r\n    }\r\n    Duration.millis = function (x) {\r\n        return x;\r\n    };\r\n    Duration.seconds = function (x) {\r\n        return x * Constants.MILLIS_IN_SECOND;\r\n    };\r\n    Duration.minutes = function (x) {\r\n        return x * Constants.MILLIS_IN_MINUTE;\r\n    };\r\n    Duration.hours = function (x) {\r\n        return x * Constants.MILLIS_IN_HOUR;\r\n    };\r\n    Duration.days = function (x) {\r\n        return x * Constants.MILLIS_IN_DAY;\r\n    };\r\n    Duration.weeks = function (x) {\r\n        return x * Constants.MILLIS_IN_WEEK;\r\n    };\r\n    return Duration;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Functions.ts\n\r\n/**\r\n * The class which contains commonly used functions by the library. These\r\n * functions and variables exist in a class so they may be overridden if\r\n * desired.\r\n */\r\nvar Functions = (function () {\r\n    function Functions() {\r\n    }\r\n    /**\r\n     * Determines whether the given input is an array.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is an array, otherwise false.\r\n     */\r\n    Functions.isArray = function (input) {\r\n        return input instanceof Array;\r\n    };\r\n    /**\r\n     * Determines whether the given input is a string.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is a string, otherwise false.\r\n     */\r\n    Functions.isString = function (input) {\r\n        return typeof (input) === 'string';\r\n    };\r\n    Functions.isNumber = function (input) {\r\n        return isFinite(input);\r\n    };\r\n    Functions.isObject = function (input) {\r\n        return !this.isArray(input) && typeof (input) === 'object';\r\n    };\r\n    /**\r\n     * Determines whether the given input is defined.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is defined, otherwise false.\r\n     */\r\n    Functions.isDefined = function (input) {\r\n        return typeof (input) !== 'undefined';\r\n    };\r\n    Functions.isFrequencyValueEvery = function (input) {\r\n        return this.isObject(input) && this.isNumber(input.every);\r\n    };\r\n    Functions.isFrequencyValueOneOf = function (input) {\r\n        return this.isArray(input) && input.length > 0;\r\n    };\r\n    /**\r\n     * Returns the first argument which is defined.\r\n     *\r\n     * @param a The first argument to look at.\r\n     * @param b The second argument to look at.\r\n     * @return The first defined argument.\r\n     * @see [[Functions.isDefined]]\r\n     */\r\n    Functions.coalesce = function (a, b, c) {\r\n        return this.isDefined(a) ? a : (this.isDefined(b) ? b : c);\r\n    };\r\n    return Functions;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Month.ts\n\r\nvar Month = (function () {\r\n    function Month() {\r\n    }\r\n    Month.JANUARY = 0;\r\n    Month.FEBRUARY = 1;\r\n    Month.MARCH = 2;\r\n    Month.APRIL = 3;\r\n    Month.MAY = 4;\r\n    Month.JUNE = 5;\r\n    Month.JULY = 6;\r\n    Month.AUGUST = 7;\r\n    Month.SEPTEMBER = 8;\r\n    Month.OCTOBER = 9;\r\n    Month.NOVEMBER = 10;\r\n    Month.DECEMBER = 11;\r\n    Month.NAMES = [\r\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n    ];\r\n    Month.CODES = [\r\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n    ];\r\n    return Month;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Schedule.ts\n\r\n\r\n\r\n\r\n\r\nvar Schedule_Schedule = (function () {\r\n    function Schedule(input) {\r\n        if (Functions.isDefined(input)) {\r\n            this.set(input);\r\n        }\r\n    }\r\n    Schedule.prototype.set = function (input) {\r\n        Parse_Parse.schedule(input, this);\r\n        return this;\r\n    };\r\n    Schedule.prototype.refreshHours = function () {\r\n        var hours = [];\r\n        for (var i = Constants.HOUR_MIN; i <= Constants.HOUR_MAX; i++) {\r\n            if (this.hour(i)) {\r\n                hours.push(i);\r\n            }\r\n        }\r\n        hours.sort();\r\n        this.hours = hours;\r\n        return this;\r\n    };\r\n    Schedule.prototype.matchesSpan = function (day) {\r\n        return (this.start === Constants.START_NONE || day.time >= this.start) &&\r\n            (this.end === Constants.END_NONE || day.time < this.end + this.duration);\r\n    };\r\n    Schedule.prototype.matchesRange = function (start, end) {\r\n        return (this.start === Constants.START_NONE || start.time <= this.start) &&\r\n            (this.end === Constants.END_NONE || end.time < this.end + this.duration);\r\n    };\r\n    Schedule.prototype.matchesDay = function (day) {\r\n        return this.matchesSpan(day) &&\r\n            this.dayOfWeek(day.dayOfWeek) &&\r\n            this.dayOfMonth(day.dayOfMonth) &&\r\n            this.dayOfYear(day.dayOfYear) &&\r\n            this.month(day.month) &&\r\n            this.weekOfYear(day.weekOfYear) &&\r\n            this.weekOfMonth(day.weekOfMonth) &&\r\n            this.year(day.year);\r\n    };\r\n    /**\r\n     * Determines if the given day is covered by this schedule. A schedule can\r\n     * specify events that span multiple days - so even though the day does not\r\n     * match the starting day of a span - it can be a day that is within the\r\n     * schedule.\r\n     *\r\n     * @param day The day to test.\r\n     * @param\r\n     */\r\n    Schedule.prototype.coversDay = function (day) {\r\n        var before = this.durationInDays();\r\n        while (before >= 0) {\r\n            if (this.matchesDay(day)) {\r\n                return true;\r\n            }\r\n            day = day.prev();\r\n            before--;\r\n        }\r\n        return false;\r\n    };\r\n    Schedule.prototype.durationInDays = function () {\r\n        var lastHour = this.hours[this.hours.length - 1];\r\n        var durationEnd = lastHour * Constants.MILLIS_IN_HOUR + this.duration;\r\n        var durationPast = durationEnd - Constants.MILLIS_IN_DAY;\r\n        return Math.max(0, Math.ceil(durationPast / Constants.MILLIS_IN_DAY));\r\n    };\r\n    Schedule.prototype.nextDay = function (day, lookAhead) {\r\n        if (lookAhead === void 0) { lookAhead = 366; }\r\n        for (var days = 0; days < lookAhead; days++) {\r\n            day = day.next();\r\n            if (this.matchesDay(day)) {\r\n                return day;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Schedule.prototype.prevDay = function (day, lookBack) {\r\n        if (lookBack === void 0) { lookBack = 366; }\r\n        for (var days = 0; days < lookBack; days++) {\r\n            day = day.prev();\r\n            if (this.matchesDay(day)) {\r\n                return day;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Schedule.prototype.matchesTime = function (day) {\r\n        return this.matchesDay(day) &&\r\n            this.hour(day.hour) &&\r\n            day.minute === this.minute;\r\n    };\r\n    Schedule.prototype.isFullDay = function () {\r\n        return !this.hour.input || this.duration === Constants.DURATION_NONE;\r\n    };\r\n    Schedule.prototype.getSpansOver = function (day) {\r\n        var spans = [];\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            if (this.matchesDay(day)) {\r\n                spans.push(DaySpan_DaySpan.point(start));\r\n            }\r\n        }\r\n        else {\r\n            var behind = this.durationInDays();\r\n            while (behind >= 0) {\r\n                if (this.matchesDay(day)) {\r\n                    for (var _i = 0, _a = this.hours; _i < _a.length; _i++) {\r\n                        var hour = _a[_i];\r\n                        var hourStart = day.withTime(hour, this.minute);\r\n                        var hourEnd = hourStart.relative(this.duration);\r\n                        var hourSpan = new DaySpan_DaySpan(hourStart, hourEnd);\r\n                        if (hourSpan.matchesDay(start)) {\r\n                            spans.push(hourSpan);\r\n                        }\r\n                    }\r\n                }\r\n                day = day.prev();\r\n                behind--;\r\n            }\r\n        }\r\n        return spans;\r\n    };\r\n    Schedule.prototype.getSpansOn = function (day, check) {\r\n        if (check === void 0) { check = false; }\r\n        var spans = [];\r\n        if (check && !this.matchesDay(day)) {\r\n            return spans;\r\n        }\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            spans.push(DaySpan_DaySpan.point(start));\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = this.hours; _i < _a.length; _i++) {\r\n                var hour = _a[_i];\r\n                var hourStart = day.withTime(hour, this.minute);\r\n                var hourEnd = hourStart.relative(this.duration);\r\n                var hourSpan = new DaySpan_DaySpan(hourStart, hourEnd);\r\n                spans.push(hourSpan);\r\n            }\r\n        }\r\n        return spans;\r\n    };\r\n    return Schedule;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Parse.ts\n\r\n\r\n\r\n\r\n/**\r\n * The class which takes user input and parses it to specific structures.\r\n */\r\nvar Parse_Parse = (function () {\r\n    function Parse() {\r\n    }\r\n    Parse.frequency = function (input, otherwiseEvery, otherwiseOffset) {\r\n        if (otherwiseEvery === void 0) { otherwiseEvery = 1; }\r\n        if (otherwiseOffset === void 0) { otherwiseOffset = 0; }\r\n        var check = function (value) {\r\n            return value % otherwiseEvery === otherwiseOffset;\r\n        };\r\n        if (Functions.isFrequencyValueEvery(input)) {\r\n            var offset_1 = input.offset || 0;\r\n            var every_1 = input.every;\r\n            check = function (value) {\r\n                return value % every_1 === offset_1;\r\n            };\r\n        }\r\n        if (Functions.isFrequencyValueOneOf(input)) {\r\n            var map_1 = {};\r\n            for (var i = 0; i < input.length; i++) {\r\n                map_1[input[i]] = true;\r\n            }\r\n            check = function (value) {\r\n                return !!map_1[value];\r\n            };\r\n        }\r\n        check.input = input;\r\n        return check;\r\n    };\r\n    Parse.schedule = function (input, out) {\r\n        if (out === void 0) { out = new Schedule_Schedule(); }\r\n        out.start = Functions.coalesce(input.start, Constants.START_NONE);\r\n        out.end = Functions.coalesce(input.end, Constants.END_NONE);\r\n        out.duration = Functions.coalesce(input.duration, Constants.DURATION_NONE);\r\n        out.exclude = Functions.coalesce(input.exclude, []);\r\n        out.dayOfWeek = this.frequency(input.dayOfWeek);\r\n        out.dayOfMonth = this.frequency(input.dayOfMonth);\r\n        out.dayOfYear = this.frequency(input.dayOfYear);\r\n        out.month = this.frequency(input.month);\r\n        out.weekOfYear = this.frequency(input.weekOfYear);\r\n        out.weekOfMonth = this.frequency(input.weekOfMonth);\r\n        out.year = this.frequency(input.year);\r\n        out.hour = this.frequency(input.hour, Constants.HOURS_IN_DAY);\r\n        out.minute = Functions.coalesce(input.minute, Constants.MINUTE_MIN);\r\n        out.refreshHours();\r\n        return out;\r\n    };\r\n    return Parse;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Suffix.ts\n\r\nvar Suffix = (function () {\r\n    function Suffix() {\r\n    }\r\n    Object.defineProperty(Suffix, \"CACHE\", {\r\n        get: function () {\r\n            if (!this._CACHE) {\r\n                this._CACHE = [];\r\n                for (var i = 0; i < this._CACHE_SIZE; i++) {\r\n                    this._CACHE[i] = this.determine(i);\r\n                }\r\n            }\r\n            return this._CACHE;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Suffix.determine = function (value) {\r\n        return value >= 11 && value <= 13 ? 'th' : this.MAP[value % this.MAP.length];\r\n    };\r\n    Suffix.get = function (value, append) {\r\n        if (append === void 0) { append = false; }\r\n        var suffix = this.determine(value);\r\n        return append ? value + suffix : suffix;\r\n    };\r\n    Suffix.MAP = [\r\n        'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'\r\n    ];\r\n    Suffix._CACHE_SIZE = 366;\r\n    return Suffix;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Weekday.ts\n\r\nvar Weekday = (function () {\r\n    function Weekday() {\r\n    }\r\n    Weekday.SUNDAY = 0;\r\n    Weekday.MONDAY = 1;\r\n    Weekday.TUESDAY = 2;\r\n    Weekday.WEDNESDAY = 3;\r\n    Weekday.THURSDAY = 4;\r\n    Weekday.FRIDAY = 5;\r\n    Weekday.SATURDAY = 6;\r\n    Weekday.NAMES = [\r\n        'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n    ];\r\n    Weekday.CODES = [\r\n        'Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'\r\n    ];\r\n    return Weekday;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/index.ts\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"CalendarType\", function() { return CalendarType; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"CalendarDay\", function() { return CalendarDay; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"CalendarEvent\", function() { return CalendarEvent; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Calendar\", function() { return Calendar_Calendar; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Constants\", function() { return Constants; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Day\", function() { return Day_Day; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"DaySpan\", function() { return DaySpan_DaySpan; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Duration\", function() { return Duration_Duration; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Functions\", function() { return Functions; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Month\", function() { return Month; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Parse\", function() { return Parse_Parse; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Schedule\", function() { return Schedule_Schedule; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Suffix\", function() { return Suffix; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Weekday\", function() { return Weekday; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// dayspan.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 58290e48c767ad29835c","\n\nexport class Constants\n{\n  public static MILLIS_IN_SECOND: number = 1000;\n  public static MILLIS_IN_MINUTE: number = 1000 * 60;\n  public static MILLIS_IN_HOUR: number = 1000 * 60 * 60;\n  public static MILLIS_IN_DAY: number = 1000 * 60 * 60 * 24;\n  public static MILLIS_IN_WEEK: number = 1000 * 60 * 60 * 24 * 7;\n\n  public static DAYS_IN_WEEK: number = 7;\n  public static MONTHS_IN_YEAR: number = 12;\n  public static HOURS_IN_DAY: number = 24;\n\n  public static MONTH_MIN: number = 0;\n  public static MONTH_MAX: number = 11;\n  public static DAY_MIN: number = 1;\n  public static DAY_MAX: number = 31;\n  public static HOUR_MIN: number = 0;\n  public static HOUR_MAX: number = 23;\n  public static MINUTE_MIN: number = 0;\n  public static MINUTE_MAX: number = 59;\n  public static SECOND_MIN: number = 0;\n  public static SECOND_MAX: number = 59;\n  public static MILLIS_MIN: number = 0;\n  public static MILLIS_MAX: number = 999;\n  public static WEEKDAY_MIN: number = 0;\n  public static WEEKDAY_MAX: number = 6;\n\n  public static START_NONE: number = 0;\n  public static END_NONE: number = 0;\n  public static DURATION_NONE: number = 0;\n\n  public static WEEK_OF_MONTH_MINIMUM_WEEKDAY: number = 4; // Thursday by default\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","\nimport { Day } from './Day';\nimport { DaySpan } from './DaySpan';\nimport { Schedule } from './Schedule';\nimport { Constants } from './Constants';\n\n\nexport type CalendarMover = (day: Day, amount: number) => Day;\n\nexport enum CalendarType\n{\n  DAY,\n  WEEK,\n  MONTH,\n  YEAR\n}\n\nexport class CalendarDay<T> extends Day\n{\n\n  public currentDay: boolean;\n  public currentWeek: boolean;\n  public currentMonth: boolean;\n  public currentYear: boolean;\n  public selectedDay: boolean;\n  public selectedWeek: boolean;\n  public selectedMonth: boolean;\n  public selectedYear: boolean;\n  public inCalendar: boolean;\n  public events: CalendarEvent<T>[] = [];\n\n  public updateCurrent(current: Day): this\n  {\n    this.currentDay = this.sameDay(current);\n    this.currentWeek = this.sameWeek(current);\n    this.currentMonth = this.sameMonth(current);\n    this.currentYear = this.sameYear(current);\n\n    return this;\n  }\n\n  public updateSelected(selected: DaySpan): this\n  {\n    this.selectedDay = selected.matchesDay(this);\n    this.selectedWeek = selected.matchesWeek(this);\n    this.selectedMonth = selected.matchesMonth(this);\n    this.selectedYear = selected.matchesYear(this);\n\n    return this;\n  }\n\n  public clearSelected(): this\n  {\n    this.selectedDay = this.selectedWeek = this.selectedMonth = this.selectedYear = false;\n    return this;\n  }\n\n}\n\nexport class CalendarEvent<T>\n{\n\n  public event: T;\n  public schedule: Schedule;\n  public time: DaySpan;\n  public fullDay: boolean;\n  public covers: boolean;\n\n  public constructor(event: T, schedule: Schedule, time: DaySpan, actualDay: Day) {\n    this.event = event;\n    this.schedule = schedule;\n    this.time = time;\n    this.fullDay = time.isPoint;\n    this.covers = time.start.sameDay( actualDay );\n  }\n\n}\n\nexport interface CalendarSchedule<T>\n{\n  schedule: Schedule;\n  event: T;\n}\n\nexport type CalendarScheduleInput<T> = CalendarSchedule<T> | Schedule | T;\n\n\nexport class Calendar<T>\n{\n\n  public span: DaySpan;\n  public length: number;\n  public type: CalendarType;\n  public size: number;\n  public mover: CalendarMover;\n  public fill: boolean;\n\n  public repeatCovers: boolean = true;\n  public listTimes: boolean = false;\n  public eventsOutside: boolean = false;\n\n  public selection: DaySpan = null;\n  public days: CalendarDay<T>[] = [];\n  public schedules: CalendarSchedule<T>[] = [];\n\n  public constructor(start: Day, end: Day, type: CalendarType, size: number, mover: CalendarMover, fill: boolean)\n  {\n    this.span = new DaySpan(start, end);\n    this.type = type;\n    this.size = size;\n    this.mover = mover;\n    this.fill = fill;\n    this.refresh();\n  }\n\n  public get start(): Day\n  {\n    return this.span.start;\n  }\n\n  public set start(day: Day)\n  {\n    this.span.start = day;\n  }\n\n  public get end(): Day\n  {\n    return this.span.end;\n  }\n\n  public set end(day: Day)\n  {\n    this.span.end = day;\n  }\n\n  public fillStart(): Day\n  {\n    return this.fill ? this.start.startOfWeek() : this.start;\n  }\n\n  public fillEnd(): Day\n  {\n    return this.fill ? this.end.endOfWeek(false) : this.end;\n  }\n\n  public refresh(today: Day = Day.today()): this\n  {\n    this.length = this.span.days();\n    this.resetDays();\n    this.refreshCurrent(today);\n    this.refreshSelection();\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public resetDays(): this\n  {\n    let days: CalendarDay<T>[] = this.days;\n    let start: Day = this.fillStart();\n    let end: Day = this.fillEnd();\n    let total: number = start.daysBetween(end);\n\n    if (days.length !== total)\n    {\n      days.length = total;\n    }\n\n    let time: number = start.time;\n\n    for (let i = 0; i < total; i++)\n    {\n      let day: CalendarDay<T> = days[ i ];\n\n      if (!day || day.time !== time)\n      {\n        day = new CalendarDay<T>( new Date( time ) );\n        days[ i ] = day;\n      }\n\n      day.inCalendar = this.span.contains( day );\n\n      time += Constants.MILLIS_IN_DAY;\n    }\n\n    return this;\n  }\n\n  public refreshCurrent(today: Day = Day.today()): this\n  {\n    return this.iterateDays(d =>\n    {\n      d.updateCurrent(today);\n    });\n  }\n\n  public refreshSelection(): this\n  {\n    return this.iterateDays(d =>\n    {\n      if (this.selection)\n      {\n        d.updateSelected( this.selection );\n      }\n      else\n      {\n        d.clearSelected();\n      }\n    });\n  }\n\n  public refreshEvents(): this\n  {\n    return this.iterateDays(d =>\n    {\n      if (d.inCalendar || this.eventsOutside)\n      {\n        d.events = this.eventsForDay(d, this.listTimes, this.repeatCovers);\n      }\n    });\n  }\n\n  public iterateDays(iterator: (day: CalendarDay<T>) => any): this\n  {\n    let days: CalendarDay<T>[] = this.days;\n\n    for (let i = 0; i < days.length; i++)\n    {\n      iterator( days[ i ] );\n    }\n\n    return this;\n  }\n\n  public eventsForDay(day: Day, getTimes: boolean = true, covers: boolean = true): CalendarEvent<T>[]\n  {\n    let events: CalendarEvent<T>[] = [];\n    let allDay: DaySpan = DaySpan.point(day);\n\n    for (let entry of this.schedules)\n    {\n      if ((covers && entry.schedule.coversDay(day)) || (!covers && entry.schedule.matchesDay(day)))\n      {\n        if (getTimes)\n        {\n          let times: DaySpan[] = covers ?\n            entry.schedule.getSpansOver(day) :\n            entry.schedule.getSpansOn(day);\n\n          for (let time of times)\n          {\n            events.push(new CalendarEvent<T>(entry.event, entry.schedule, time, day));\n          }\n        }\n        else\n        {\n          events.push(new CalendarEvent<T>(entry.event, entry.schedule, allDay, day));\n        }\n      }\n    }\n\n    return events\n  }\n\n  public findSchedule(input: CalendarScheduleInput<T>): CalendarSchedule<T>\n  {\n    for (let schedule of this.schedules)\n    {\n      if (schedule === input || schedule.schedule === input || schedule.event === input)\n      {\n        return schedule;\n      }\n    }\n\n    return null;\n  }\n\n  public removeSchedules(schedules: CalendarScheduleInput<T>[] = null, delayRefresh: boolean = false): this\n  {\n    if (schedules)\n    {\n      for (let schedule of schedules)\n      {\n        this.removeSchedule( schedule, true );\n      }\n    }\n    else\n    {\n      this.schedules = [];\n    }\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n    return this;\n  }\n\n  public removeSchedule(schedule: CalendarScheduleInput<T>, delayRefresh: boolean = false): this\n  {\n    let found = this.findSchedule(schedule);\n\n    if (found)\n    {\n      this.schedules.splice( this.schedules.indexOf(found), 1 );\n\n      if (!delayRefresh)\n      {\n        this.refreshEvents();\n      }\n    }\n    return this;\n  }\n\n  public addSchedule(schedule: CalendarSchedule<T>, allowDuplicates: boolean = false, delayRefresh: boolean = false): this\n  {\n    if (!allowDuplicates)\n    {\n      let existing = this.findSchedule(schedule);\n\n      if (existing)\n      {\n        return this;\n      }\n    }\n\n    this.schedules.push(schedule);\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n\n    return this;\n  }\n\n  public addSchedules(schedules: CalendarSchedule<T>[], allowDuplicates: boolean = false, delayRefresh: boolean = false): this\n  {\n    for (let schedule of schedules)\n    {\n      this.addSchedule(schedule, allowDuplicates, true);\n    }\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n\n    return this;\n  }\n\n  public select(start: Day, end?: Day): this\n  {\n    this.selection = end ? new DaySpan( start, end ) : DaySpan.point( start );\n    this.refreshSelection();\n\n    return this;\n  }\n\n  public unselect(): this\n  {\n    this.selection = null;\n    this.refreshSelection();\n\n    return this;\n  }\n\n  public move(jump: number = this.size): this\n  {\n    this.start = this.mover( this.start, jump );\n    this.end = this.mover( this.end, jump );\n    this.refresh();\n\n    return this;\n  }\n\n  public next(jump: number = this.size): this\n  {\n    return this.move( jump );\n  }\n\n  public prev(jump: number = this.size): this\n  {\n    return this.move( -jump );\n  }\n\n  public static days<T>(days: number = 1, around: Day = Day.today(), focus: number = 0.4999): Calendar<T>\n  {\n    let start: Day = around.start().relativeDays( -Math.floor( days * focus ) );\n    let end: Day = start.relativeDays( days );\n    let mover: CalendarMover = (day, amount) => day.relativeDays(amount);\n\n    return new Calendar(start, end, CalendarType.DAY, days, mover, false);\n  }\n\n  public static weeks<T>(weeks: number = 1, around: Day = Day.today(), focus: number = 0.4999): Calendar<T>\n  {\n    let start: Day = around.start().startOfWeek().relativeWeeks( -Math.floor( weeks * focus ) );\n    let end: Day = start.relativeWeeks( weeks );\n    let mover: CalendarMover = (day, amount) => day.relativeWeeks(amount);\n\n    return new Calendar(start, end, CalendarType.WEEK, weeks, mover, false);\n  }\n\n  public static months<T>(months: number = 1, around: Day = Day.today(), focus: number = 0.4999, fill: boolean = true): Calendar<T>\n  {\n    let start: Day = around.start().startOfMonth().relativeMonths( -Math.floor( months * focus ) );\n    let end: Day = start.relativeMonths( months );\n    let mover: CalendarMover = (day, amount) => day.relativeMonths(amount);\n\n    return new Calendar(start, end, CalendarType.MONTH, months, mover, fill);\n  }\n\n  public static years<T>(years: number = 1, around: Day = Day.today(), focus: number = 0.4999, fill: boolean = true): Calendar<T>\n  {\n    let start: Day = around.start().startOfMonth().relativeMonths( -Math.floor( years * focus ) );\n    let end: Day = start.relativeMonths( years );\n    let mover: CalendarMover = (day, amount) => day.relativeYears(amount);\n\n    return new Calendar(start, end, CalendarType.YEAR, years, mover, fill);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Calendar.ts","\nimport { Constants } from './Constants';\n\n\n\nexport class Day\n{\n\n  public readonly date: Date;\n  public readonly time: number;\n  public readonly timeless: number;\n  public readonly dayOfWeek: number;\n  public readonly dayOfMonth: number;\n  public readonly dayOfYear: number;\n  public readonly month: number;\n  public readonly weekOfYear: number;\n  public readonly weekOfMonth: number;\n  public readonly year: number;\n  public readonly hour: number;\n  public readonly minute: number;\n  public readonly seconds: number;\n  public readonly millis: number;\n\n  public constructor(date: Date) {\n    this.date         = date;\n    this.time         = date.getTime();\n    this.timeless     = Math.floor( this.time / Constants.MILLIS_IN_DAY );\n    this.hour         = date.getHours();\n    this.minute       = date.getMinutes();\n    this.dayOfWeek    = date.getDay();\n    this.dayOfMonth   = date.getDate();\n    this.dayOfYear    = Day.getDayOfYear( date );\n    this.month        = date.getMonth();\n    this.weekOfYear   = Day.getWeekOfYear( date );\n    this.weekOfMonth  = Day.getWeekOfMonth( date );\n    this.year         = date.getFullYear();\n    this.seconds      = date.getSeconds();\n    this.millis       = date.getMilliseconds();\n  }\n\n  // Same\n\n  public sameDay(day: Day): boolean {\n    return this.year === day.year && this.month === day.month && this.dayOfMonth === day.dayOfMonth;\n  }\n\n  public sameMonth(day: Day): boolean {\n    return this.year === day.year && this.month === day.month;\n  }\n\n  public sameWeek(day: Day): boolean {\n    return this.year === day.year && this.weekOfYear === day.weekOfYear;\n  }\n\n  public sameYear(day: Day): boolean {\n    return this.year === day.year;\n  }\n\n  public sameHour(day: Day): boolean {\n    return this.sameDay( day ) && this.hour === day.hour;\n  }\n\n  public sameMinute(day: Day): boolean {\n    return this.sameDay( day ) && this.hour === day.hour && this.minute === day.minute;\n  }\n\n  // Between\n\n  public timeBetween(day: Day, unitMillis: number, floor: (day: Day) => Day, partial: boolean = true, absolute: boolean = true, round: boolean = true): number {\n    let start: Day = partial ? floor( this ) : this;\n    let end: Day = partial ? floor( day ) : day;\n    let between: number = (end.time - start.time) / unitMillis;\n\n    if (absolute && between < 0) {\n      between = -between;\n    }\n\n    if (round) {\n      if (between < 0) {\n        between = Math.ceil( between );\n      } else {\n        between = Math.floor( between );\n      }\n    }\n\n    return between;\n  }\n\n  public millisBetween(day: Day, absolute: boolean = true): number {\n    return this.timeBetween(day, 1, d => d, false, absolute, false);\n  }\n\n  public daysBetween(day: Day, partialDays: boolean = true, absolute: boolean = true, round: boolean = true): number {\n    return this.timeBetween(day, Constants.MILLIS_IN_DAY, d => d.start(), partialDays, absolute, round);\n  }\n\n  public weeksBetween(day: Day, partialWeeks: boolean = true, absolute: boolean = true, round: boolean = true): number {\n    return this.timeBetween(day, Constants.MILLIS_IN_WEEK, d => d.startOfWeek(), partialWeeks, absolute, round);\n  }\n\n  public hoursBetween(day: Day, partialHours: boolean = true, absolute: boolean = true, round: boolean = true): number {\n    return this.timeBetween(day, Constants.MILLIS_IN_HOUR, d => d.startOfHour(), partialHours, absolute, round);\n  }\n\n  public isBetween(start: Day, end: Day, inclusive: boolean = false): boolean {\n    return this.time >= start.time && (\n      (inclusive && this.time <= end.time) ||\n      (!inclusive && this.time < end.time)\n    );\n  }\n\n  public getDate(): Date {\n    return new Date( this.time );\n  }\n\n  public relativeTimezoneOffset(offset: number = 1): Day {\n    return this.mutate(d => {\n      d.setTime( d.getTime() + d.getTimezoneOffset() * Constants.MILLIS_IN_MINUTE );\n    });\n  }\n\n  public mutate(mutator: (date: Date) => void): Day {\n    var d = this.getDate();\n    mutator( d );\n    return new Day( d );\n  }\n\n  public relative(millis: number): Day {\n    return this.mutate(d => {\n      d.setTime( d.getTime() + millis );\n    });\n  }\n\n  // Days\n\n  public relativeDays(days: number): Day {\n    return this.relative( days * Constants.MILLIS_IN_DAY );\n  }\n\n  public prev(days: number = 1): Day {\n    return this.relativeDays( -days );\n  }\n\n  public next(days: number = 1): Day {\n    return this.relativeDays( days );\n  }\n\n  public withDayOfMonth(day: number): Day {\n    return this.mutate(d => {\n      d.setDate( day );\n    });\n  }\n\n  public withDayOfWeek(dayOfWeek: number): Day {\n    return this.relativeDays( dayOfWeek - this.dayOfWeek );\n  }\n\n  public withDayOfYear(dayOfYear: number): Day {\n    return this.relativeDays( dayOfYear - this.dayOfYear );\n  }\n\n  // Month\n\n  public withMonth(month: number): Day {\n    return this.mutate(d => {\n      d.setMonth( month );\n    });\n  }\n\n  public relativeMonths(months: number): Day {\n    return this.withMonth( this.month + months );\n  }\n\n  public prevMonth(months: number = 1): Day {\n    return this.relativeMonths( -months );\n  }\n\n  public nextMonth(months: number = 1): Day {\n    return this.relativeMonths( months );\n  }\n\n  // Week Of Year\n\n  public withWeek(week: number): Day {\n    return this.mutate(d => {\n      d.setDate( (week - this.weekOfYear) * Constants.DAYS_IN_WEEK );\n    });\n  }\n\n  public relativeWeeks(weeks: number): Day {\n    return this.relative( weeks * Constants.MILLIS_IN_WEEK );\n  }\n\n  public prevWeek(weeks: number = 1): Day {\n    return this.relativeWeeks( -weeks );\n  }\n\n  public nextWeek(weeks: number = 1): Day {\n    return this.relativeWeeks( weeks );\n  }\n\n  // Year\n\n  public withYear(year: number): Day {\n    return this.mutate(d => {\n      d.setFullYear(year);\n    });\n  }\n\n  public relativeYears(years: number): Day {\n    return this.withYear( this.year + years );\n  }\n\n  public prevYear(years: number = 1): Day {\n    return this.relativeYears( -years );\n  }\n\n  public nextYear(years: number = 1): Day {\n    return this.relativeYears( years );\n  }\n\n  // Hour\n\n  public withHour(hour: number): Day {\n    return this.mutate(d => {\n      d.setHours(hour);\n    });\n  }\n\n  public relativeHours(hours: number): Day {\n    return this.withHour( this.hour + hours );\n  }\n\n  public prevHour(hours: number = 1): Day {\n    return this.relativeHours( -hours );\n  }\n\n  public nextHour(hours: number = 1): Day {\n    return this.relativeHours( hours );\n  }\n\n  // Time\n\n  public withTime(\n      hour: number = Constants.HOUR_MIN,\n      minute: number = Constants.MINUTE_MIN,\n      second: number = Constants.SECOND_MIN,\n      millis: number = Constants.MILLIS_MIN): Day {\n    return this.mutate(d => {\n      d.setHours( hour, minute, second, millis );\n    });\n  }\n\n  // Start & End\n\n  // Time\n\n  public start(): Day {\n    return this.withTime();\n  }\n\n  public isStart(): boolean {\n    return this.hour === Constants.HOUR_MIN &&\n      this.minute === Constants.MINUTE_MIN &&\n      this.seconds === Constants.SECOND_MIN &&\n      this.millis === Constants.MILLIS_MIN;\n  }\n\n  public end(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.withTime(Constants.HOUR_MAX, Constants.MINUTE_MAX, Constants.SECOND_MAX, Constants.MINUTE_MAX) :\n      this.next().start();\n  }\n\n  public isEnd(): boolean {\n    return this.hour === Constants.HOUR_MAX &&\n      this.minute === Constants.MINUTE_MAX &&\n      this.seconds === Constants.SECOND_MAX &&\n      this.millis === Constants.MILLIS_MAX;\n  }\n\n  // Hour\n\n  public startOfHour(): Day {\n    return this.withTime(this.hour);\n  }\n\n  public isStartOfHour(): boolean {\n    return this.minute === Constants.MINUTE_MIN &&\n      this.seconds === Constants.SECOND_MIN &&\n      this.millis === Constants.MILLIS_MIN;\n  }\n\n  public endOfHour(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.withTime(this.hour, Constants.MINUTE_MAX, Constants.SECOND_MAX, Constants.MINUTE_MAX) :\n      this.withTime(this.hour + 1)\n  }\n\n  public isEndOfHour(): boolean {\n    return this.minute === Constants.MINUTE_MAX &&\n      this.seconds === Constants.SECOND_MAX &&\n      this.millis === Constants.MILLIS_MAX;\n  }\n\n  // Week\n\n  public startOfWeek(): Day {\n    return this.relativeDays( -this.dayOfWeek );\n  }\n\n  public isStartOfWeek(): boolean {\n    return this.dayOfWeek === Constants.WEEKDAY_MIN;\n  }\n\n  public endOfWeek(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.relativeDays( Constants.DAYS_IN_WEEK - this.dayOfWeek - 1 ) :\n      this.startOfWeek().nextWeek();\n  }\n\n  public isEndOfWeek(): boolean {\n    return this.dayOfWeek === Constants.WEEKDAY_MAX;\n  }\n\n  // Month\n\n  public startOfMonth(): Day {\n    return this.withDayOfMonth( Constants.DAY_MIN );\n  }\n\n  public isStartOfMonth(): boolean {\n    return this.dayOfMonth === Constants.DAY_MIN;\n  }\n\n  public endOfMonth(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.withDayOfMonth( this.daysInMonth() ) :\n      this.startOfMonth().nextMonth();\n  }\n\n  public isEndOfMonth(): boolean {\n    return this.dayOfMonth === this.daysInMonth();\n  }\n\n  // Year\n\n  public startOfYear(): Day {\n    return this.mutate(d => {\n      d.setMonth(Constants.MONTH_MIN, Constants.DAY_MIN);\n    });\n  }\n\n  public isStartOfYear(): boolean {\n    return this.month === Constants.MONTH_MIN && this.dayOfMonth === Constants.DAY_MIN;\n  }\n\n  public endOfYear(inclusive: boolean = true): Day {\n    return this.mutate(d => {\n      d.setMonth(Constants.MONTHS_IN_YEAR, inclusive ? 0 : 1);\n    });\n  }\n\n  public isEndOfYear(): boolean {\n    return this.month === Constants.MONTH_MAX && this.dayOfMonth === Constants.DAY_MAX;\n  }\n\n  // Days In X\n\n  public daysInMonth(): number {\n    var d = this.getDate();\n    d.setMonth(d.getMonth() + 1, 0);\n    return d.getDate();\n  }\n\n  public daysInYear(): number {\n    return Day.getDayOfYear( this.endOfYear().date );\n  }\n\n  public static now(): Day {\n    return new Day(new Date());\n  }\n\n  public static today(): Day {\n    return this.now().start();\n  }\n\n  public static tomorrow(): Day {\n    return this.today().next();\n  }\n\n  public static utc(millis: number): Day {\n    return new Day(new Date(millis));\n  }\n\n  public static create(year: number, month: number,\n    date: number = Constants.DAY_MIN,\n    hour: number = Constants.HOUR_MIN,\n    minute: number = Constants.MINUTE_MIN,\n    second: number = Constants.SECOND_MIN,\n    millis: number = Constants.MILLIS_MIN): Day\n  {\n    return new Day( new Date( year, month, date, hour, minute, second, millis ) );\n  }\n\n  public static getWeekOfYear(date: Date): number\n  {\n    var d = new Date( date.getTime() );\n    d.setHours( 0, 0, 0 );\n    d.setDate( d.getDate() + 4 - ( d.getDay() || Constants.DAYS_IN_WEEK ) );\n    var firstOfYear = new Date( d.getFullYear(), 0, 1 );\n    return Math.ceil( ( ( ( d.getTime() - firstOfYear.getTime() ) / Constants.MILLIS_IN_DAY ) + 1 ) / Constants.DAYS_IN_WEEK );\n  }\n\n  public static getWeekOfMonth(date: Date): number\n  {\n    var dom = date.getDate();\n    var dow = date.getDay();\n    var sundayDate = dom - dow;\n    return Math.floor( ( sundayDate + Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY + 5 ) / Constants.DAYS_IN_WEEK );\n  }\n\n  public static getDayOfYear(date: Date): number\n  {\n    var start = new Date( date.getFullYear(), 0, 0 );\n    var diff = date.getTime() - start.getTime();\n    var day = Math.floor( diff / Constants.MILLIS_IN_DAY );\n    return day;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Day.ts","\nimport { Day } from './Day';\n\n\nexport class DaySpan {\n\n  public start: Day;\n  public end: Day;\n\n  public constructor(start: Day, end: Day) {\n    this.start = start;\n    this.end = end;\n  }\n\n  public get isPoint(): boolean {\n    return this.start.time === this.end.time;\n  }\n\n  public contains(day: Day): boolean {\n    return day.time >= this.start.time && day.time < this.end.time;\n  }\n\n  public matchesDay(day: Day): boolean {\n    return this.contains( day ) || day.sameDay( this.start ) || day.sameDay( this.end );\n  }\n\n  public matchesWeek(day: Day): boolean {\n    return this.contains( day ) || day.sameWeek( this.start ) || day.sameWeek( this.end );\n  }\n\n  public matchesMonth(day: Day): boolean {\n    return this.contains( day ) || day.sameMonth( this.start ) || day.sameMonth( this.end );\n  }\n\n  public matchesYear(day: Day): boolean {\n    return this.contains( day ) || day.sameYear( this.start ) || day.sameYear( this.end );\n  }\n\n  public days(partialDays: boolean = true, absolute: boolean = true, round: boolean = true): number {\n    return this.start.daysBetween(this.end, partialDays, absolute, round);\n  }\n\n  public hours(partialHours: boolean = true, absolute: boolean = true, round: boolean = true): number {\n    return this.start.hoursBetween(this.end, partialHours, absolute, round);\n  }\n\n  public weeks(partialWeeks: boolean = true, absolute: boolean = true, round: boolean = true): number {\n    return this.start.weeksBetween(this.end, partialWeeks, absolute, round);\n  }\n\n  public intersects(span: DaySpan): boolean {\n    return !(\n      this.end.time < span.start.time ||\n      this.start.time >= span.end.time\n    );\n  }\n\n  public intersection(span: DaySpan): DaySpan {\n    let start: number = Math.max(this.start.time, span.start.time);\n    let end: number = Math.min(this.end.time, span.end.time);\n\n    return start >= end ? null : new DaySpan(Day.utc(start), Day.utc(end));\n  }\n\n  public static point(day: Day): DaySpan {\n    return new DaySpan( day, day );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DaySpan.ts","\nimport { Constants } from './Constants';\n\n\nexport class Duration\n{\n\n  public static millis(x: number): number\n  {\n    return x;\n  }\n\n  public static seconds(x: number): number\n  {\n    return x * Constants.MILLIS_IN_SECOND;\n  }\n\n  public static minutes(x: number): number\n  {\n    return x * Constants.MILLIS_IN_MINUTE;\n  }\n\n  public static hours(x: number): number\n  {\n    return x * Constants.MILLIS_IN_HOUR;\n  }\n\n  public static days(x: number): number\n  {\n    return x * Constants.MILLIS_IN_DAY;\n  }\n\n  public static weeks(x: number): number\n  {\n    return x * Constants.MILLIS_IN_WEEK;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Duration.ts","\n\n/**\n * The class which contains commonly used functions by the library. These\n * functions and variables exist in a class so they may be overridden if\n * desired.\n */\nexport class Functions\n{\n\n  /**\n   * Determines whether the given input is an array.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is an array, otherwise false.\n   */\n  public static isArray(input: any): boolean\n  {\n    return input instanceof Array;\n  }\n\n  /**\n   * Determines whether the given input is a string.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is a string, otherwise false.\n   */\n  public static isString(input: any): boolean\n  {\n    return typeof(input) === 'string';\n  }\n\n\n  public static isNumber(input: any): boolean\n  {\n    return isFinite(input);\n  }\n\n  public static isObject(input: any): boolean\n  {\n    return !this.isArray(input) && typeof(input) === 'object';\n  }\n\n  /**\n   * Determines whether the given input is defined.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is defined, otherwise false.\n   */\n  public static isDefined(input: any): boolean\n  {\n    return typeof(input) !== 'undefined';\n  }\n\n  public static isFrequencyValueEvery(input: any): boolean\n  {\n    return this.isObject( input ) && this.isNumber( input.every );\n  }\n\n  public static isFrequencyValueOneOf(input: any): boolean\n  {\n    return this.isArray( input ) && input.length > 0;\n  }\n\n\n\n  /**\n   * Returns the first argument which is defined.\n   *\n   * @param a The first argument to look at.\n   * @param b The second argument to look at.\n   * @return The first defined argument.\n   * @see [[Functions.isDefined]]\n   */\n  public static coalesce(a: any, b: any, c?: any): any\n  {\n    return this.isDefined( a ) ? a : (this.isDefined( b ) ? b : c);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Functions.ts","\nexport class Month\n{\n  \n  public static JANUARY: number = 0;\n  public static FEBRUARY: number = 1;\n  public static MARCH: number = 2;\n  public static APRIL: number = 3;\n  public static MAY: number = 4;\n  public static JUNE: number = 5;\n  public static JULY: number = 6;\n  public static AUGUST: number = 7;\n  public static SEPTEMBER: number = 8;\n  public static OCTOBER: number = 9;\n  public static NOVEMBER: number = 10;\n  public static DECEMBER: number = 11;\n\n  public static NAMES: string[] = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  public static CODES: string[] = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Month.ts","\nimport { Functions as fn } from './Functions';\nimport { FrequencyValue, FrequencyCheck } from './Types';\nimport { Day } from './Day';\nimport { DaySpan } from './DaySpan';\nimport { Constants } from './Constants';\nimport { Parse } from './Parse';\n\n\nexport interface ScheduleInput\n{\n  start?: number;\n  end?: number;\n  duration?: number;\n  exclude?: number[];\n  dayOfWeek?: FrequencyValue;\n  dayOfMonth?: FrequencyValue;\n  dayOfYear?: FrequencyValue;\n  month?: FrequencyValue;\n  weekOfYear?: FrequencyValue;\n  weekOfMonth?: FrequencyValue;\n  year?: FrequencyValue;\n  hour?: FrequencyValue;\n  minute?: FrequencyValue;\n}\n\n\nexport class Schedule\n{\n\n  public start: number;\n  public end: number;\n  public duration: number;\n  public exclude: number[];\n  public dayOfWeek: FrequencyCheck;\n  public dayOfMonth: FrequencyCheck;\n  public dayOfYear: FrequencyCheck;\n  public month: FrequencyCheck;\n  public weekOfYear: FrequencyCheck;\n  public weekOfMonth: FrequencyCheck;\n  public year: FrequencyCheck;\n  public hour: FrequencyCheck;\n  public minute: number;\n  public hours: number[];\n\n  public constructor(input?: ScheduleInput)\n  {\n    if (fn.isDefined(input))\n    {\n      this.set(input);\n    }\n  }\n\n  public set(input: ScheduleInput): this\n  {\n    Parse.schedule(input, this);\n\n    return this;\n  }\n\n  public refreshHours(): this\n  {\n    let hours: number[] = [];\n\n    for (let i = Constants.HOUR_MIN; i <= Constants.HOUR_MAX; i++)\n    {\n      if (this.hour( i ))\n      {\n        hours.push( i );\n      }\n    }\n\n    hours.sort();\n\n    this.hours = hours;\n\n    return this;\n  }\n\n  public matchesSpan(day: Day): boolean\n  {\n    return (this.start === Constants.START_NONE || day.time >= this.start) &&\n      (this.end === Constants.END_NONE || day.time < this.end + this.duration);\n  }\n\n  public matchesRange(start: Day, end: Day): boolean\n  {\n    return (this.start === Constants.START_NONE || start.time <= this.start) &&\n      (this.end === Constants.END_NONE || end.time < this.end + this.duration);\n  }\n\n  public matchesDay(day: Day): boolean\n  {\n    return this.matchesSpan( day ) &&\n      this.dayOfWeek( day.dayOfWeek ) &&\n      this.dayOfMonth( day.dayOfMonth ) &&\n      this.dayOfYear( day.dayOfYear ) &&\n      this.month( day.month ) &&\n      this.weekOfYear( day.weekOfYear ) &&\n      this.weekOfMonth( day.weekOfMonth ) &&\n      this.year( day.year );\n  }\n\n  /**\n   * Determines if the given day is covered by this schedule. A schedule can\n   * specify events that span multiple days - so even though the day does not\n   * match the starting day of a span - it can be a day that is within the\n   * schedule.\n   *\n   * @param day The day to test.\n   * @param\n   */\n  public coversDay(day: Day): boolean\n  {\n    let before: number = this.durationInDays();\n\n    while (before >= 0)\n    {\n      if (this.matchesDay(day))\n      {\n        return true;\n      }\n\n      day = day.prev();\n      before--;\n    }\n\n    return false;\n  }\n\n  public durationInDays(): number\n  {\n    let lastHour: number = this.hours[ this.hours.length - 1 ];\n    let durationEnd: number = lastHour * Constants.MILLIS_IN_HOUR + this.duration;\n    let durationPast: number = durationEnd - Constants.MILLIS_IN_DAY;\n\n    return Math.max( 0, Math.ceil( durationPast / Constants.MILLIS_IN_DAY ) );\n  }\n\n  public nextDay(day: Day, lookAhead: number = 366): Day\n  {\n    for (let days = 0; days < lookAhead; days++)\n    {\n      day = day.next();\n\n      if (this.matchesDay(day))\n      {\n        return day;\n      }\n    }\n\n    return null;\n  }\n\n  public prevDay(day: Day, lookBack: number = 366): Day\n  {\n    for (let days = 0; days < lookBack; days++)\n    {\n      day = day.prev();\n\n      if (this.matchesDay(day))\n      {\n        return day;\n      }\n    }\n\n    return null;\n  }\n\n  public matchesTime(day: Day): boolean\n  {\n    return this.matchesDay( day ) &&\n      this.hour( day.hour ) &&\n      day.minute === this.minute;\n  }\n\n  public isFullDay(): boolean\n  {\n    return !this.hour.input || this.duration === Constants.DURATION_NONE;\n  }\n\n  public getSpansOver(day: Day): DaySpan[]\n  {\n    let spans: DaySpan[] = [];\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      if (this.matchesDay(day))\n      {\n        spans.push(DaySpan.point(start));\n      }\n    }\n    else\n    {\n      let behind: number = this.durationInDays();\n\n      while (behind >= 0)\n      {\n        if (this.matchesDay(day))\n        {\n          for (let hour of this.hours)\n          {\n            let hourStart: Day = day.withTime(hour, this.minute);\n            let hourEnd: Day = hourStart.relative(this.duration);\n            let hourSpan: DaySpan = new DaySpan( hourStart, hourEnd );\n\n            if (hourSpan.matchesDay(start))\n            {\n              spans.push( hourSpan );\n            }\n          }\n        }\n\n        day = day.prev();\n        behind--;\n      }\n    }\n    return spans;\n  }\n\n  public getSpansOn(day: Day, check: boolean = false): DaySpan[]\n  {\n    let spans: DaySpan[] = [];\n\n    if (check && !this.matchesDay(day))\n    {\n      return spans;\n    }\n\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      spans.push(DaySpan.point(start));\n    }\n    else\n    {\n      for (let hour of this.hours)\n      {\n        let hourStart: Day = day.withTime(hour, this.minute);\n        let hourEnd: Day = hourStart.relative(this.duration);\n        let hourSpan: DaySpan = new DaySpan( hourStart, hourEnd );\n\n        spans.push(hourSpan);\n      }\n    }\n\n    return spans;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Schedule.ts","\nimport { Functions as fn } from './Functions';\nimport { FrequencyCheck } from './Types';\nimport { Schedule, ScheduleInput } from './Schedule';\nimport { Constants } from './Constants';\n\n\n/**\n * The class which takes user input and parses it to specific structures.\n */\nexport class Parse\n{\n\n  public static frequency(input: any, otherwiseEvery: number = 1, otherwiseOffset: number = 0): FrequencyCheck\n  {\n    let check: FrequencyCheck = (value: number) => {\n      return value % otherwiseEvery === otherwiseOffset;\n    };\n\n    if (fn.isFrequencyValueEvery(input))\n    {\n      let offset: number = input.offset || 0;\n      let every: number = input.every;\n\n      check = (value: number) => {\n        return value % every === offset;\n      };\n    }\n\n    if (fn.isFrequencyValueOneOf(input))\n    {\n      let map: object = {};\n\n      for (let i = 0; i < input.length; i++) {\n        map[ input[ i ] ] = true;\n      }\n\n      check = (value: number) => {\n        return !!map[ value ];\n      };\n    }\n\n    check.input = input;\n\n    return check;\n  }\n\n  public static schedule(input: ScheduleInput, out: Schedule = new Schedule()): Schedule\n  {\n    out.start = fn.coalesce( input.start, Constants.START_NONE );\n    out.end = fn.coalesce( input.end, Constants.END_NONE );\n    out.duration = fn.coalesce( input.duration, Constants.DURATION_NONE );\n    out.exclude = fn.coalesce( input.exclude, [] );\n    out.dayOfWeek = this.frequency( input.dayOfWeek );\n    out.dayOfMonth = this.frequency( input.dayOfMonth );\n    out.dayOfYear = this.frequency( input.dayOfYear );\n    out.month = this.frequency( input.month );\n    out.weekOfYear = this.frequency( input.weekOfYear );\n    out.weekOfMonth = this.frequency( input.weekOfMonth );\n    out.year = this.frequency( input.year );\n    out.hour = this.frequency( input.hour, Constants.HOURS_IN_DAY );\n    out.minute = fn.coalesce( input.minute, Constants.MINUTE_MIN );\n    out.refreshHours();\n\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Parse.ts","\nexport class Suffix\n{\n\n  public static MAP: string[] = [\n    'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'\n  ];\n\n  private static _CACHE: string[];\n  \n  private static _CACHE_SIZE: number = 366;\n\n  public static get CACHE(): string[]\n  {\n    if (!this._CACHE)\n    {\n      this._CACHE = [];\n\n      for (let i = 0; i < this._CACHE_SIZE; i++)\n      {\n        this._CACHE[ i ] = this.determine(i);\n      }\n    }\n\n    return this._CACHE;\n  }\n\n  public static determine(value: number): string\n  {\n    return value >= 11 && value <= 13 ? 'th' : this.MAP[ value % this.MAP.length ];\n  }\n\n  public static get(value: number, append: boolean = false): string\n  {\n    let suffix: string = this.determine(value);\n    return append ? value + suffix : suffix;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Suffix.ts","\n\nexport class Weekday\n{\n\n  public static SUNDAY: number = 0;\n  public static MONDAY: number = 1;\n  public static TUESDAY: number = 2;\n  public static WEDNESDAY: number = 3;\n  public static THURSDAY: number = 4;\n  public static FRIDAY: number = 5;\n  public static SATURDAY: number = 6;\n\n  public static NAMES: string[] = [\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n  ];\n\n  public static CODES: string[] = [\n    'Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'\n  ];\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Weekday.ts"],"sourceRoot":""}