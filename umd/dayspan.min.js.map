{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dayspan.min.js","webpack:///webpack/bootstrap 39d895aa36207e3a2d0f","webpack:///external {\"commonjs\":\"moment\",\"commonjs2\":\"moment\",\"amd\":\"moment\",\"root\":\"moment\"}","webpack:///./src/Op.ts","webpack:///./src/Functions.ts","webpack:///./src/Constants.ts","webpack:///./src/Units.ts","webpack:///./src/Pattern.ts","webpack:///./src/DaySpan.ts","webpack:///./src/Suffix.ts","webpack:///./src/Schedule.ts","webpack:///./src/Time.ts","webpack:///./src/Parse.ts","webpack:///./src/Day.ts","webpack:///./src/Calendar.ts","webpack:///./src/Month.ts","webpack:///./src/Weekday.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","operate","value","op","absolute","isFinite","Math","abs","Op","NONE","FLOOR","floor","CEIL","ceil","ROUND","round","TRUNCATE","DOWN","UP","Functions","isArray","input","Array","isArrayEquals","x","y","length","isString","isNumber","isObject","isDefined","isFrequencyValueEvery","every","isFrequencyValueOneOf","coalesce","a","b","pad","padding","before","padNumber","first","substring","Constants","MILLIS_IN_SECOND","MILLIS_IN_MINUTE","MILLIS_IN_HOUR","MILLIS_IN_DAY","MILLIS_IN_WEEK","DAYS_IN_WEEK","MONTHS_IN_YEAR","HOURS_IN_DAY","MONTH_MIN","MONTH_MAX","DAY_MIN","DAY_MAX","HOUR_MIN","HOUR_MAX","MINUTE_MIN","MINUTE_MAX","SECOND_MIN","SECOND_MAX","MILLIS_MIN","MILLIS_MAX","WEEKDAY_MIN","WEEKDAY_MAX","START_NONE","END_NONE","DURATION_NONE","DURATION_DEFAULT_UNIT","MAX_EVENTS_PER_DAY","WEEK_OF_MONTH_MINIMUM_WEEKDAY","Units","DaySpan__a","DaySpan_DaySpan","DaySpan","start","end","time","contains","day","matchesDay","sameDay","matchesWeek","sameWeek","matchesMonth","sameMonth","matchesYear","sameYear","millis","millisBetween","seconds","secondsBetween","minutes","minutesBetween","hours","hoursBetween","days","daysBetween","weeks","weeksBetween","months","monthsBetween","years","yearsBetween","summary","type","dayOfWeek","short","repeat","contextual","delimiter","formats","SUMMARY_FORMATS","today","Day_Day","showStartYear","showEndYear","format","intersects","span","intersection","max","min","unix","point","DAY","year","WEEK","MONTH","YEAR","Suffix","_CACHE","_CACHE_SIZE","determine","MAP","append","suffix","__WEBPACK_IMPORTED_MODULE_6_moment__","Schedule_Schedule","Schedule","set","times","Parse_Parse","schedule","updateDurationInDays","durationInDays","lastTime","toMilliseconds","add","duration","durationUnit","subtract","asDays","matchesSpan","isSameOrAfter","isBefore","endWithDuration","matchesRange","isSameOrBefore","isExcluded","exclude","dayIdentifier","isIncluded","dayOfMonth","dayOfYear","month","week","weekOfYear","weekspanOfYear","fullWeekOfYear","weekOfMonth","weekspanOfMonth","fullWeekOfMonth","coversDay","prev","nextDay","includeDay","lookAhead","next","iterateDays","nextDays","nexts","push","prevDay","lookBack","prevDays","prevs","onDay","lookup","iterated","matchesTime","_i","_a","sameTime","isFullDay","getSpansOver","spans","behind","hourStart","withTime","hourEnd","hourSpan","getSpanOver","getSpansOn","check","getExclusions","returnDays","exclusions","dayIdentifierKey","parseInt","fromDayIdentifier","toInput","returnTimes","timeFormat","out","toString","describe","thing","includeRange","includeTimes","includeDuration","includeExcludes","describeRule","CACHE","describeArray","excludes","unit","map","everyOffset","the","on","required","valueEvery","offset","valueOne","array","last","Time_Time","Time","hour","minute","second","millisecond","formatterEntries","FORMATTERS","handled","k","entry","part","size","formatter","charAt","toIdentifer","toObject","parse","fromString","matches","REGEX","exec","h","build","fromIdentifier","SSS","t","HH","hh","kk","mm","ss","SS","A","H","S","Parse","frequency","otherwiseEvery","otherwiseOffset","offset_1","every_1","map_1","utc","otherwise","fromArray","fromObject","input_1","timeInput","input_2","calendarSchedule","event","cron","pattern","__WEBPACK_IMPORTED_MODULE_3_moment__","Day","date","quarter","getWeekOfYear","getWeekspanOfYear","getFullWeekOfYear","getWeekOfMonth","getWeekspanOfMonth","getFullWeekOfMonth","getDayIdentifier","weekIdentifier","getWeekIdentifier","monthIdentifier","getMonthIdentifier","quarterIdentifier","getQuarterIdentifier","sameQuarter","sameHour","sameMinute","precision","isAfter","diff","isBetween","inclusive","mutate","mutator","toMoment","amount","relative","relativeDays","withDayOfMonth","withDayOfWeek","withDayOfYear","withMonth","relativeMonths","prevMonth","nextMonth","withWeek","relativeWeek","withWeekOfYear","withFullWeekOfYear","withWeekspanOfYear","withWeekOfMonth","withWeekspanOfMonth","withFullWeekOfMonth","relativeWeeks","prevWeek","nextWeek","withYear","relativeYears","prevYear","nextYear","withHour","relativeHours","prevHour","nextHour","withTimes","startOf","isStart","endOf","isEnd","startOfHour","isStartOfHour","endOfHour","isEndOfHour","startOfWeek","isStartOfWeek","endOfWeek","isEndOfWeek","startOfMonth","isStartOfMonth","endOfMonth","isEndOfMonth","daysInMonth","startOfYear","isStartOfYear","endOfYear","isEndOfYear","daysInYear","weeksInYear","keepLocalTime","clone","toDate","toArray","toJSON","toISOString","keepOffset","isDST","isLeapYear","now","tomorrow","fromMoment","moment","isValid","fromFormat","fromDate","id","firstOfYear","dom","dow","sundayDate","LOAD_TIME","__extends","extendStatics","setPrototypeOf","__proto__","__","constructor","create","Calendar_CalendarDay","_super","CalendarDay","_this","apply","arguments","currentDay","currentWeek","currentMonth","currentYear","currentOffset","selectedDay","selectedWeek","selectedMonth","selectedYear","inCalendar","events","updateCurrent","current","updateSelected","selected","clearSelected","Calendar_CalendarEvent","CalendarEvent","actualDay","fullDay","isPoint","starting","Calendar_Calendar","Calendar","moveStart","moveEnd","fill","minimumSize","repeatCovers","listTimes","eventsOutside","selection","schedules","filled","withInput","refresh","removeSchedules","addSchedules","withMinimumSize","withRepeatCovers","refreshEvents","withListTimes","withEventsOutside","split","by","resetDays","refreshCurrent","refreshSelection","resetFilled","total","splice","eventsForDay","iterator","getTimes","covers","entries","entryIndex","event_1","eventId","timeIndex","over","findSchedule","delayRefresh","schedules_1","removeSchedule","found","indexOf","addSchedule","allowDuplicates","parsed","schedules_2","select","unselect","move","jump","around","focus","mover","Month","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","LIST","Weekday","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","ENDS","Pattern_Pattern","Pattern","listed","rules","PROPS","prop","rule","isMatch","exactlyWith","exactly","curr","ruleOffset","withName","PatternMap","findMatch","listedOnly","Patterns_1","Patterns","Pattern__i","Patterns_2","Pattern_pattern"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,WACA,kBAAAC,gBAAAC,IACAD,OAAA,gBAAAJ,GACA,gBAAAC,SACAA,QAAA,GAAAD,EAAAG,QAAA,WAEAJ,EAAA,GAAAC,EAAAD,EAAA,SACCO,KAAA,SAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAZ,WAUA,OANAO,GAAAE,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAW,GAAA,EAGAX,EAAAD,QAvBA,GAAAU,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAxB,GACA,GAAAiB,GAAAjB,KAAAyB,WACA,WAA2B,MAAAzB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAO,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU/B,EAAQD,GE7ExBC,EAAAD,QAAAM,GFmFM,SAAUL,EAAQD,EAASQ,GAEjCP,EAAOD,QAAUQ,EAAoB,IAK/B,SAAUP,EAAQgC,EAAqBzB,GAE7C,YGhFM,SAAA0B,GAAkBC,EAAeC,EAAQC,GAE7C,OAF6C,KAAAA,OAAA,GAEzCC,SAASH,GAOX,OALIE,IAEFF,EAAQI,KAAKC,IAAKL,IAGZC,GAER,IAAKK,GAAGC,KACN,MAAOP,EACT,KAAKM,GAAGE,MACN,MAAOJ,MAAKK,MAAOT,EACrB,KAAKM,GAAGI,KACN,MAAON,MAAKO,KAAMX,EACpB,KAAKM,GAAGM,MACN,MAAOR,MAAKS,MAAOb,EACrB,KAAKM,GAAGQ,SACR,IAAKR,GAAGS,KACN,MAAOf,GAAQ,EAAII,KAAKO,KAAMX,GAAUI,KAAKK,MAAOT,EACtD,KAAKM,GAAGU,GACN,MAAOhB,GAAQ,EAAII,KAAKK,MAAOT,GAAUI,KAAKO,KAAMX,GAIxD,MAAOA,GHsDTf,OAAOC,eAAeY,EAAqB,cAAgBE,OAAO,GItFlE,IDNYM,GCMZW,EAAA,mBAAAA,MAuGA,MA9FgBA,GAAAC,QAAd,SAAsBC,GAEpB,MAAOA,aAAiBC,QAGZH,EAAAI,cAAd,SAA4BC,EAAUC,GAEpC,GAAID,IAAMC,EAAG,OAAO,CACpB,IAAID,EAAEE,SAAWD,EAAEC,OAAQ,OAAO,CAElC,KAAK,GAAIhD,GAAI,EAAGA,EAAI8C,EAAEE,OAAQhD,IAE5B,GAAI8C,EAAG9C,KAAQ+C,EAAG/C,GAEhB,OAAO,CAIX,QAAO,GASKyC,EAAAQ,SAAd,SAAuBN,GAErB,MAAyB,gBAAZ,IAIDF,EAAAS,SAAd,SAAuBP,GAErB,MAAOhB,UAASgB,IAGJF,EAAAU,SAAd,SAAuBR,GAErB,OAAQjD,KAAKgD,QAAQC,IAA4B,gBAAZ,IASzBF,EAAAW,UAAd,SAAwBT,GAEtB,WAAyB,KAAZ,GAGDF,EAAAY,sBAAd,SAAoCV,GAElC,MAAOjD,MAAKyD,SAAUR,IAAWjD,KAAKwD,SAAUP,EAAMW,QAG1Cb,EAAAc,sBAAd,SAAoCZ,GAElC,MAAOjD,MAAKgD,QAASC,IAAWA,EAAMK,OAAS,GAanCP,EAAAe,SAAd,SAAuBC,EAAQC,EAAQtD,GAErC,MAAOV,MAAK0D,UAAWK,GAAMA,EAAK/D,KAAK0D,UAAWM,GAAMA,EAAItD,GAGhDqC,EAAAkB,IAAd,SAAkBb,EAAWE,EAAgBY,EAAiBC,GAE5D,KAAOf,EAAEE,OAASA,GAEhBa,EAASf,EAAIc,EAAUd,EAAIA,GAAQc,CAGrC,OAAOd,IAGKL,EAAAqB,UAAd,SAAwBhB,EAAWE,EAAgBe,GAEjD,WAFiD,KAAAA,MAAAf,GAE1CtD,KAAKiE,IAAIb,EAAI,GAAIE,EAAQ,KAAK,GAAMgB,UAAW,EAAGD,IAG7DtB,KC5GAwB,EAAA,mBAAAA,MAmCA,MAjCgBA,GAAAC,iBAA2B,IAC3BD,EAAAE,iBAA2B,IAC3BF,EAAAG,eAAyB,KACzBH,EAAAI,cAAwB,MACxBJ,EAAAK,eAAyB,OAEzBL,EAAAM,aAAuB,EACvBN,EAAAO,eAAyB,GACzBP,EAAAQ,aAAuB,GAEvBR,EAAAS,UAAoB,EACpBT,EAAAU,UAAoB,GACpBV,EAAAW,QAAkB,EAClBX,EAAAY,QAAkB,GAClBZ,EAAAa,SAAmB,EACnBb,EAAAc,SAAmB,GACnBd,EAAAe,WAAqB,EACrBf,EAAAgB,WAAqB,GACrBhB,EAAAiB,WAAqB,EACrBjB,EAAAkB,WAAqB,GACrBlB,EAAAmB,WAAqB,EACrBnB,EAAAoB,WAAqB,IACrBpB,EAAAqB,YAAsB,EACtBrB,EAAAsB,YAAsB,EAEtBtB,EAAAuB,WAAqB,EACrBvB,EAAAwB,SAAmB,EACnBxB,EAAAyB,cAAwB,EACxBzB,EAAA0B,sBAAgC,UAEhC1B,EAAA2B,mBAA6B,GAE7B3B,EAAA4B,8BAAwC,EACxD5B,MFpCA,SAAYnC,GAEVA,IAAA,eACAA,IAAA,iBACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,uBACAA,IAAA,WACAA,IAAA,gBARUA,YGCZ,IAAYgE,IAAZ,SAAYA,GAEVA,IAAA,aACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,gBALUA,YCoSZ,KAAoB,GPiGhBC,GQjYJC,EAAA,WAKE,QAAAC,GAAmBC,EAAYC,GAC7BzG,KAAKwG,MAAQA,EACbxG,KAAKyG,IAAMA,EA2Hf,MAxHE1F,QAAAC,eAAWuF,EAAA/E,UAAA,WRoQLL,IQpQN,WACE,MAAOnB,MAAKwG,MAAME,OAAS1G,KAAKyG,IAAIC,MRsQhCxF,YAAY,EACZD,cAAc,IQpQbsF,EAAA/E,UAAAmF,SAAP,SAAgBC,GACd,MAAOA,GAAIF,MAAQ1G,KAAKwG,MAAME,MAAQE,EAAIF,MAAQ1G,KAAKyG,IAAIC,MAGtDH,EAAA/E,UAAAqF,WAAP,SAAkBD,GAChB,MAAO5G,MAAK2G,SAAUC,IAASA,EAAIE,QAAS9G,KAAKwG,QAAWI,EAAIE,QAAS9G,KAAKyG,MAGzEF,EAAA/E,UAAAuF,YAAP,SAAmBH,GACjB,MAAO5G,MAAK2G,SAAUC,IAASA,EAAII,SAAUhH,KAAKwG,QAAWI,EAAII,SAAUhH,KAAKyG,MAG3EF,EAAA/E,UAAAyF,aAAP,SAAoBL,GAClB,MAAO5G,MAAK2G,SAAUC,IAASA,EAAIM,UAAWlH,KAAKwG,QAAWI,EAAIM,UAAWlH,KAAKyG,MAG7EF,EAAA/E,UAAA2F,YAAP,SAAmBP,GACjB,MAAO5G,MAAK2G,SAAUC,IAASA,EAAIQ,SAAUpH,KAAKwG,QAAWI,EAAIQ,SAAUpH,KAAKyG,MAI3EF,EAAA/E,UAAA6F,OAAP,SAActF,EAAkBC,GAC9B,WADY,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACvBhC,KAAKwG,MAAMc,cAActH,KAAKyG,IAAK1E,EAAIC,IAGzCuE,EAAA/E,UAAA+F,QAAP,SAAexF,EAAkBC,GAC/B,WADa,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACxBhC,KAAKwG,MAAMgB,eAAexH,KAAKyG,IAAK1E,EAAIC,IAG1CuE,EAAA/E,UAAAiG,QAAP,SAAe1F,EAAkBC,GAC/B,WADa,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACxBhC,KAAKwG,MAAMkB,eAAe1H,KAAKyG,IAAK1E,EAAIC,IAG1CuE,EAAA/E,UAAAmG,MAAP,SAAa5F,EAAkBC,GAC7B,WADW,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACtBhC,KAAKwG,MAAMoB,aAAa5H,KAAKyG,IAAK1E,EAAIC,IAGxCuE,EAAA/E,UAAAqG,KAAP,SAAY9F,EAAkBC,GAC5B,WADU,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACrBhC,KAAKwG,MAAMsB,YAAY9H,KAAKyG,IAAK1E,EAAIC,IAGvCuE,EAAA/E,UAAAuG,MAAP,SAAahG,EAAkBC,GAC7B,WADW,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACtBhC,KAAKwG,MAAMwB,aAAahI,KAAKyG,IAAK1E,EAAIC,IAGxCuE,EAAA/E,UAAAyG,OAAP,SAAclG,EAAkBC,GAC9B,WADY,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACvBhC,KAAKwG,MAAM0B,cAAclI,KAAKyG,IAAK1E,EAAIC,IAGzCuE,EAAA/E,UAAA2G,MAAP,SAAapG,EAAkBC,GAC7B,WADW,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACtBhC,KAAKwG,MAAM4B,aAAapI,KAAKyG,IAAK1E,EAAIC,IAGxCuE,EAAA/E,UAAA6G,QAAP,SAAeC,EAAaC,EAA2BC,EAAwBC,EAAyBC,EAA4BC,OAAxG,KAAAJ,OAAA,OAA2B,KAAAC,OAAA,OAAwB,KAAAC,OAAA,OAAyB,KAAAC,OAAA,OAA4B,KAAAC,MAAA,MAElI,IAAIC,GAAUrC,EAAQsC,gBAAiBP,GACnCQ,EAAaC,EAAID,QACjBE,GAA0BN,IAAe1I,KAAKwG,MAAMY,SAAU0B,GAC9DG,GAAwBP,IAAe1I,KAAKyG,IAAIW,SAAU0B,GAC1DtC,EAAgBxG,KAAKwG,MAAM0C,OAAQN,EAAQJ,EAAOD,EAAWS,IAC7DvC,EAAczG,KAAKyG,IAAIyC,OAAQN,EAAQJ,EAAOD,EAAWU,IACzDZ,EAAkB7B,CAiBtB,OAfIA,KAAUC,GAEPgC,IAEHJ,EAAUrI,KAAKwG,MAAM0C,OAAQN,EAAQJ,EAAOD,GAAYvI,KAAKwG,MAAMY,SAASpH,KAAKyG,QAGnF4B,GAAWM,EACXN,GAAW5B,GAIX4B,EAAU7B,EAGL6B,GAGF9B,EAAA/E,UAAA2H,WAAP,SAAkBC,GAChB,QACEpJ,KAAKyG,IAAIC,KAAO0C,EAAK5C,MAAME,MAC3B1G,KAAKwG,MAAME,KAAO0C,EAAK3C,IAAIC,OAIxBH,EAAA/E,UAAA6H,aAAP,SAAoBD,GAClB,GAAI5C,GAAgBtE,KAAKoH,IAAItJ,KAAKwG,MAAME,KAAM0C,EAAK5C,MAAME,MACrDD,EAAcvE,KAAKqH,IAAIvJ,KAAKyG,IAAIC,KAAM0C,EAAK3C,IAAIC,KAEnD,OAAOF,IAASC,EAAM,KAAO,GAAIF,GAAQwC,EAAIS,KAAKhD,GAAQuC,EAAIS,KAAK/C,KAGvDF,EAAAkD,MAAd,SAAoB7C,GAClB,MAAO,IAAIL,GAASK,EAAKA,IAIbL,EAAAsC,iBAAexC,KAE3BA,EAACD,EAAMsD,KAAM,SAAClB,EAAgBD,EAAoBoB,GAChD,OAAQpB,EAAaC,EAAQ,QAAU,SAAY,KAAOA,EAAQ,OAAS,SAAW,MAAQmB,EAAO,QAAU,KAEjHtD,EAACD,EAAMwD,MAAO,SAACpB,EAAgBD,EAAoBoB,GACjD,OAAQpB,EAAaC,EAAQ,QAAU,SAAY,KAAOA,EAAQ,OAAS,SAAW,MAAQmB,EAAO,QAAU,KAEjHtD,EAACD,EAAMyD,OAAQ,SAACrB,EAAgBD,EAAoBoB,GAClD,OAAQnB,EAAQ,MAAQ,SAAWmB,EAAO,QAAU,KAEtDtD,EAACD,EAAM0D,MAAO,SAACtB,EAAgBD,EAAoBoB,GACjD,MAAQA,GAAO,OAAS,IR+PtBtD,GQ3PRE,KCvIAwD,EAAA,mBAAAA,MAqCA,MA1BEhJ,QAAAC,eAAkB+I,EAAA,STmYZ5I,ISnYN,WAEE,IAAKnB,KAAKgK,OACV,CACEhK,KAAKgK,SAEL,KAAK,GAAI1J,GAAI,EAAGA,EAAIN,KAAKiK,YAAa3J,IAEpCN,KAAKgK,OAAQ1J,GAAMN,KAAKmB,IAAKb,GAAG,GAIpC,MAAON,MAAKgK,QTgYR9I,YAAY,EACZD,cAAc,IS9XN8I,EAAAG,UAAd,SAAwBpI,GAEtB,MAAOA,IAAS,IAAMA,GAAS,GAAK,KAAO9B,KAAKmK,IAAKrI,EAAQ9B,KAAKmK,IAAI7G,SAG1DyG,EAAA5I,IAAd,SAAkBW,EAAesI,OAAA,KAAAA,OAAA,EAE/B,IAAIC,GAAiBrK,KAAKkK,UAAUpI,EACpC,OAAOsI,GAAStI,EAAQuI,EAASA,GA/BrBN,EAAAI,KACZ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAKzCJ,EAAAE,YAAsB,IA4BvCF,KTsYyBO,EAAuCnK,EAAoB,GUrYpFoK,GVsYwEpK,EAAoBiB,EAAEkJ,GUtY9F,WAwBE,QAAAE,GAAmBvH,GAEbF,EAAGW,UAAUT,IAEfjD,KAAKyK,IAAIxH,GA2cf,MAvcElC,QAAAC,eAAWwJ,EAAAhJ,UAAA,YVuXLL,IUvXN,WAEE,MAAOnB,MAAK0K,MAAO1K,KAAK0K,MAAMpH,OAAS,IVwXnCpC,YAAY,EACZD,cAAc,IUtXbuJ,EAAAhJ,UAAAiJ,IAAP,SAAWxH,GAIT,MAFA0H,GAAMC,SAAS3H,EAAOjD,MAEfA,MAGFwK,EAAAhJ,UAAAqJ,qBAAP,WAWE,MATA7K,MAAK8K,eAAkB9K,KAAK+K,SAAe7I,KAAKoH,IAAI,EAClDpH,KAAKO,KACH6H,EAAA,SAAgBtK,KAAK+K,SAASC,iBAAkB,gBAC7CC,IAAIjL,KAAKkL,SAAUlL,KAAKmL,cACxBC,SAAS,EAAG,OACZC,WALgC,EAShCrL,MAGFwK,EAAAhJ,UAAA8J,YAAP,SAAmB1E,GAEjB,OAAuB,OAAf5G,KAAKwG,OAAkBI,EAAI2E,cAAcvL,KAAKwG,UACtC,OAAbxG,KAAKyG,KAAgBG,EAAI4E,SAASxL,KAAKyL,mBAGrCjB,EAAAhJ,UAAAkK,aAAP,SAAoBlF,EAAYC,GAE9B,OAAuB,OAAfzG,KAAKwG,OAAkBA,EAAMmF,eAAe3L,KAAKwG,UACzC,OAAbxG,KAAKyG,KAAgBA,EAAI+E,SAASxL,KAAKyL,mBAGrCjB,EAAAhJ,UAAAoK,WAAP,SAAkBhF,GAEhB,QAAS5G,KAAK6L,QAASjF,EAAIkF,gBAGtBtB,EAAAhJ,UAAAuK,WAAP,SAAkBnF,GAEhB,OAAQ5G,KAAK6L,QAASjF,EAAIkF,gBAGrBtB,EAAAhJ,UAAAqF,WAAP,SAAkBD,GAEhB,MAAO5G,MAAK+L,WAAYnF,IACtB5G,KAAKsL,YAAa1E,IAClB5G,KAAKuI,UAAW3B,EAAI2B,YACpBvI,KAAKgM,WAAYpF,EAAIoF,aACrBhM,KAAKiM,UAAWrF,EAAIqF,YACpBjM,KAAK2J,KAAM/C,EAAI+C,OACf3J,KAAKkM,MAAOtF,EAAIsF,QAChBlM,KAAKmM,KAAMvF,EAAIuF,OACfnM,KAAKoM,WAAYxF,EAAIwF,aACrBpM,KAAKqM,eAAgBzF,EAAIyF,iBACzBrM,KAAKsM,eAAgB1F,EAAI0F,iBACzBtM,KAAKuM,YAAa3F,EAAI2F,cACtBvM,KAAKwM,gBAAiB5F,EAAI4F,kBAC1BxM,KAAKyM,gBAAiB7F,EAAI6F,kBAYvBjC,EAAAhJ,UAAAkL,UAAP,SAAiB9F,GAIf,IAFA,GAAIzC,GAAiBnE,KAAK8K,eAEnB3G,GAAU,GACjB,CACE,GAAInE,KAAK6G,WAAWD,GAElB,OAAO,CAGTA,GAAMA,EAAI+F,OACVxI,IAGF,OAAO,GAGFqG,EAAAhJ,UAAAoL,QAAP,SAAehG,EAAUiG,EAA6BC,OAA7B,KAAAD,OAAA,OAA6B,KAAAC,MAAA,IAEpD,IAAIC,GAAY,IAIhB,OAFA/M,MAAKgN,YAAYpG,EAAK,GAAG,EAAM,SAAAjG,GAAK,MAAAoM,GAAOpM,GAAGkM,EAAYC,GAEnDC,GAGFvC,EAAAhJ,UAAAyL,SAAP,SAAgBrG,EAAU0C,EAAauD,EAA6BC,OAA7B,KAAAD,OAAA,OAA6B,KAAAC,MAAA,IAElE,IAAII,KAIJ,OAFAlN,MAAKgN,YAAYpG,EAAK0C,GAAK,EAAM,SAAA3I,GAAK,MAAAuM,GAAMC,KAAKxM,IAAIkM,EAAYC,GAE1DI,GAGF1C,EAAAhJ,UAAA4L,QAAP,SAAexG,EAAUiG,EAA6BQ,OAA7B,KAAAR,OAAA,OAA6B,KAAAQ,MAAA,IAEpD,IAAIV,GAAY,IAIhB,OAFA3M,MAAKgN,YAAYpG,EAAK,GAAG,EAAO,SAAAjG,GAAK,MAAAgM,GAAOhM,GAAGkM,EAAYQ,GAEpDV,GAGFnC,EAAAhJ,UAAA8L,SAAP,SAAgB1G,EAAU0C,EAAauD,EAA6BQ,OAA7B,KAAAR,OAAA,OAA6B,KAAAQ,MAAA,IAElE,IAAIE,KAIJ,OAFAvN,MAAKgN,YAAYpG,EAAK0C,GAAK,EAAO,SAAA3I,GAAK,MAAA4M,GAAMJ,KAAKxM,IAAIkM,EAAYQ,GAE3DE,GAGF/C,EAAAhJ,UAAAwL,YAAP,SAAmBpG,EAAU0C,EAAayD,EAAeS,EAA0BX,EAA6BY,OAA7B,KAAAZ,OAAA,OAA6B,KAAAY,MAAA,IAI9G,KAAK,GAFDC,GAAmB,EAEd7F,EAAO,EAAGA,EAAO4F,EAAQ5F,IAOhC,KALKgF,GAAchF,EAAO,KAExBjB,EAAMmG,EAAOnG,EAAImG,OAASnG,EAAI+F,QAG5B3M,KAAK6G,WAAWD,GACpB,CACE,IAAqB,IAAjB4G,EAAO5G,GAET,KAGF,MAAM8G,GAAYpE,EAEhB,MAKN,MAAOtJ,OAGFwK,EAAAhJ,UAAAmM,YAAP,SAAmB/G,GAEjB,IAAK5G,KAAK6G,WAAYD,GAEpB,OAAO,CAGT,KAAiB,GAAAgH,GAAA,EAAAC,EAAA7N,KAAK0K,MAALkD,EAAAC,EAAAvK,OAAAsK,IAAU,CAAtB,GAAIlH,GAAImH,EAAAD,EAEX,IAAIhH,EAAIkH,SAASpH,GAEf,OAAO,EAIX,OAAO,GAGF8D,EAAAhJ,UAAAuM,UAAP,WAEE,MAA6B,KAAtB/N,KAAK0K,MAAMpH,QAAgBtD,KAAKkL,WAAa3G,EAAUyB,eAGzDwE,EAAAhJ,UAAAwM,aAAP,SAAoBpH,GAElB,GAAIqH,MACAzH,EAAaI,EAAIJ,OAErB,IAAIxG,KAAK+N,YAEH/N,KAAK6G,WAAWD,IAElBqH,EAAMd,KAAK7G,EAAQmD,MAAMjD,QAO3B,KAFA,GAAI0H,GAAiBlO,KAAK8K,eAEnBoD,GAAU,GACjB,CACE,GAAIlO,KAAK6G,WAAWD,GAElB,IAAiB,GAAAgH,GAAA,EAAAC,EAAA7N,KAAK0K,MAALkD,EAAAC,EAAAvK,OAAAsK,IAAU,CAAtB,GAAIlH,GAAImH,EAAAD,GAEPO,EAAiBvH,EAAIwH,SAAS1H,GAC9B2H,EAAeF,EAAUlD,IAAIjL,KAAKkL,SAAUlL,KAAKmL,cACjDmD,EAAoB,GAAIhI,GAAS6H,EAAWE,EAE5CC,GAASzH,WAAWL,IAEtByH,EAAMd,KAAMmB,GAKlB1H,EAAMA,EAAI+F,OACVuB,IAGJ,MAAOD,IAGFzD,EAAAhJ,UAAA+M,YAAP,SAAmB3H,GAEjB,GAAIJ,GAAaI,EAAIJ,OAErB,IAAIxG,KAAK+N,YAEP,MAAOzH,GAAQmD,MAAMjD,EAMrB,KAFA,GAAI0H,GAAiBlO,KAAK8K,eAEnBoD,GAAU,GACjB,CACE,GAAIlO,KAAK6G,WAAWD,GAElB,MAAON,GAAQmD,MAAM7C,EAGvBA,GAAMA,EAAI+F,OACVuB,IAIJ,MAAO,OAGF1D,EAAAhJ,UAAAgN,WAAP,SAAkB5H,EAAU6H,OAAA,KAAAA,OAAA,EAE1B,IAAIR,KAEJ,IAAIQ,IAAUzO,KAAK6G,WAAWD,GAE5B,MAAOqH,EAGT,IAAIzH,GAAaI,EAAIJ,OAErB,IAAIxG,KAAK+N,YAEPE,EAAMd,KAAK7G,EAAQmD,MAAMjD,QAIzB,KAAiB,GAAAoH,GAAA,EAAAC,EAAA7N,KAAK0K,MAALkD,EAAAC,EAAAvK,OAAAsK,IAAU,CAAtB,GAAIlH,GAAImH,EAAAD,GAEPO,EAAiBvH,EAAIwH,SAAS1H,GAC9B2H,EAAeF,EAAUlD,IAAIjL,KAAKkL,SAAUlL,KAAKmL,cACjDmD,EAAoB,GAAIhI,GAAS6H,EAAWE,EAEhDJ,GAAMd,KAAKmB,GAIf,MAAOL,IAGFzD,EAAAhJ,UAAAkN,cAAP,SAAqBC,OAAA,KAAAA,OAAA,EAEnB,IAAIC,KAEJ,KAAK,GAAIC,KAAoB7O,MAAK6L,QAClC,CACE,GAAIC,GAAwBgD,SAASD,EAErCD,GAAWzB,KAAMwB,EAAa5F,EAAIgG,kBAAkBjD,GAAkBA,GAGxE,MAAO8C,IAGFpE,EAAAhJ,UAAAwN,QAAP,SAAeL,EAA6BM,EAA8BC,OAA3D,KAAAP,OAAA,OAA6B,KAAAM,OAAA,OAA8B,KAAAC,MAAA,GAMxE,KAAiB,GAJbC,MACAP,EAAyB5O,KAAK0O,cAAeC,GAC7CjE,KAEakD,EAAA,EAAAC,EAAA7N,KAAK0K,MAALkD,EAAAC,EAAAvK,OAAAsK,IAAU,CAAtB,GAAIlH,GAAImH,EAAAD,EAEXlD,GAAMyC,KAAM8B,EAAcvI,EAAQwI,EAAaxI,EAAKwC,OAAQgG,GAAexI,EAAK0I,YAsBlF,MAnBIpP,MAAKwG,QAAO2I,EAAI3I,MAAQmI,EAAa3O,KAAKwG,MAAQxG,KAAKwG,MAAME,MAC7D1G,KAAKyG,MAAK0I,EAAI1I,IAAMkI,EAAa3O,KAAKyG,IAAMzG,KAAKyG,IAAIC,MACrD1G,KAAKkL,WAAa3G,EAAUyB,gBAAemJ,EAAIjE,SAAWlL,KAAKkL,UAC/DlL,KAAKmL,eAAiB5G,EAAU0B,wBAAuBkJ,EAAIhE,aAAenL,KAAKmL,cAC/EnL,KAAKuI,UAAUtF,QAAOkM,EAAI5G,UAAYvI,KAAKuI,UAAUtF,OACrDjD,KAAKgM,WAAW/I,QAAOkM,EAAInD,WAAahM,KAAKgM,WAAW/I,OACxDjD,KAAKiM,UAAUhJ,QAAOkM,EAAIlD,UAAYjM,KAAKiM,UAAUhJ,OACrDjD,KAAKkM,MAAMjJ,QAAOkM,EAAIjD,MAAQlM,KAAKkM,MAAMjJ,OACzCjD,KAAKmM,KAAKlJ,QAAOkM,EAAIhD,KAAOnM,KAAKmM,KAAKlJ,OACtCjD,KAAKoM,WAAWnJ,QAAOkM,EAAI/C,WAAapM,KAAKoM,WAAWnJ,OACxDjD,KAAKqM,eAAepJ,QAAOkM,EAAI9C,eAAiBrM,KAAKqM,eAAepJ,OACpEjD,KAAKsM,eAAerJ,QAAOkM,EAAI7C,eAAiBtM,KAAKsM,eAAerJ,OACpEjD,KAAKuM,YAAYtJ,QAAOkM,EAAI5C,YAAcvM,KAAKuM,YAAYtJ,OAC3DjD,KAAKwM,gBAAgBvJ,QAAOkM,EAAI3C,gBAAkBxM,KAAKwM,gBAAgBvJ,OACvEjD,KAAKyM,gBAAgBxJ,QAAOkM,EAAI1C,gBAAkBzM,KAAKyM,gBAAgBxJ,OACvEjD,KAAK2J,KAAK1G,QAAOkM,EAAIxF,KAAO3J,KAAK2J,KAAK1G,OACtCyH,EAAMpH,SAAQ6L,EAAIzE,MAAQA,GAC1BkE,EAAWtL,SAAQ6L,EAAItD,QAAU+C,GAE9BO,GAGF3E,EAAAhJ,UAAA6N,SAAP,SAAgBC,EACdC,EACAC,EACAC,EACAC,OAJc,KAAAJ,MAAA,aACd,KAAAC,OAAA,OACA,KAAAC,OAAA,OACA,KAAAC,OAAA,OACA,KAAAC,OAAA,EAEA,IAAIP,GAAc,EAwDlB,IAtDII,IAEEvP,KAAKwG,OAEP2I,GAAO,eAAiBnP,KAAKwG,MAAM0C,OAAO,iBAEtClJ,KAAKyG,MAEP0I,GAAO,kBAAoBnP,KAAKyG,IAAIyC,OAAO,mBAGtClJ,KAAKyG,MAEZ0I,GAAO,YAAcnP,KAAKyG,IAAIyC,OAAO,mBAMvCiG,GAFEA,EAEK,QAAUG,EAAQ,cAIlB,OAASA,EAAQ,cAG1BH,GAAOnP,KAAK2P,aAAc3P,KAAKuI,UAAUtF,MAAO,kBAAmB,SAAAG,GAAK,MAAAkH,GAAA,WAAkBlH,IAAI,GAAG,GACjG+L,GAAOnP,KAAK2P,aAAc3P,KAAKgM,WAAW/I,MAAO,mBAAoB,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,KACvF+L,GAAOnP,KAAK2P,aAAc3P,KAAKiM,UAAUhJ,MAAO,kBAAmB,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,IAAI,GACzF+L,GAAOnP,KAAK2P,aAAc3P,KAAKkM,MAAMjJ,MAAO,QAAS,SAAAG,GAAK,MAAAkH,GAAA,SAAgBlH,IAAI,GAAG,EAAO,QACxF+L,GAAOnP,KAAK2P,aAAc3P,KAAKoM,WAAWnJ,MAAO,mBAAoB,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,KACvF+L,GAAOnP,KAAK2P,aAAc3P,KAAKqM,eAAepJ,MAAO,uBAAwB,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,EAAI,IAAI,GACvG+L,GAAOnP,KAAK2P,aAAc3P,KAAKsM,eAAerJ,MAAO,wBAAyB,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,KAChG+L,GAAOnP,KAAK2P,aAAc3P,KAAKuM,YAAYtJ,MAAO,oBAAqB,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,KACzF+L,GAAOnP,KAAK2P,aAAc3P,KAAKyM,gBAAgBxJ,MAAO,yBAA0B,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,KAClG+L,GAAOnP,KAAK2P,aAAc3P,KAAKwM,gBAAgBvJ,MAAO,wBAAyB,SAAAG,GAAK,MAAA2G,GAAO6F,MAAMxM,EAAI,IAAI,GACzG+L,GAAOnP,KAAK2P,aAAc3P,KAAK2J,KAAK1G,MAAO,OAAQ,SAAAG,GAAK,MAAAA,IAAG,GAAG,EAAO,QAEjEoM,GAAgBxP,KAAK0K,MAAMpH,SAE7B6L,GAAO,OACPA,GAAOnP,KAAK6P,cAAe7P,KAAK0K,MAAO,SAAAtH,GAAK,MAAAA,GAAE8F,OAAO,cAGnDuG,GAAmBzP,KAAKkL,WAAa3G,EAAUyB,gBAEjDmJ,GAAO,YAAcnP,KAAKkL,SAAW,IAEjClL,KAAKmL,eAEPgE,GAAOnP,KAAKmL,aAAe,MAI3BuE,EACJ,CACE,GAAII,GAAyB9P,KAAK0O,eAAe,EAE7CoB,GAASxM,SAEX6L,GAAO,cACPA,GAAOnP,KAAK6P,cAAeC,EAAU,SAAA1M,GAAK,MAAAA,GAAE8F,OAAO,iBAIvD,MAAOiG,IAGD3E,EAAAhJ,UAAAmO,aAAR,SAAqB7N,EAAuBiO,EAAcC,EAAyBC,EAAyBC,EAAqBC,EAAqBC,OAAnE,KAAAH,MAAA,OAAyB,KAAAC,OAAA,OAAqB,KAAAC,MAAA,YAAqB,KAAAC,OAAA,EAEpJ,IAAIjB,GAAc,GACd9E,EAAiB6F,EAAM,IAAMH,EAAO,EAExC,IAAIhN,EAAGY,sBAAsB7B,GAC7B,CACE,GAAIuO,GAAuDvO,CAE3DqN,IAAO,UAAYpF,EAAO6F,MAAOS,EAAWzM,OAAU,IAAMmM,EAExDM,EAAWC,SAEbnB,GAAO,gBAAkBa,EAAKK,EAAWC,OAASL,GAAgB5F,OAGjE,IAAItH,EAAGc,sBAAsB/B,GAClC,CACE,GAAIyO,GAAqDzO,CAErDyO,GAASjN,SAEX6L,GAAOgB,GAAMD,EAAM,OAAS,IAC5Bf,GAAOnP,KAAK6P,cAAeU,EAAUP,GACrCb,GAAO9E,OAGF+F,KAEPjB,GAAQgB,EAAK,OAASJ,EAGxB,OAAOZ,IAGD3E,EAAAhJ,UAAAqO,cAAR,SAAyBW,EAAYR,GAEnC,GAAIb,GAAc,GACdsB,EAAeD,EAAMlN,OAAS,CAElC6L,IAAOa,EAAKQ,EAAO,GAEnB,KAAK,GAAIlQ,GAAI,EAAGA,EAAImQ,EAAMnQ,IAExB6O,GAAO,KAAOa,EAAKQ,EAAOlQ,GAQ5B,OALImQ,GAAO,IAETtB,GAAO,QAAUa,EAAKQ,EAAOC,KAGxBtB,GAGX3E,MCtgBAkG,EAAA,WAUE,QAAAC,GAAmBC,EAAcC,EAAuCC,EAAuCC,OAA9E,KAAAF,MAAiBtM,EAAUe,gBAAY,KAAAwL,MAAiBvM,EAAUiB,gBAAY,KAAAuL,MAAsBxM,EAAUmB,YAE7I1F,KAAK4Q,KAAOA,EACZ5Q,KAAK6Q,OAASA,EACd7Q,KAAK8Q,OAASA,EACd9Q,KAAK+Q,YAAcA,EAmJvB,MAhJSJ,GAAAnP,UAAA0H,OAAP,SAAcA,GAKZ,IAAK,GAHD8H,GAAmBL,EAAKM,WACxB9B,EAAc,GAET7O,EAAI,EAAGA,EAAI4I,EAAO5F,OAAQhD,IACnC,CAGE,IAAK,GAFD4Q,IAAmB,EAEdC,EAAI,EAAGA,EAAIH,EAAiB1N,SAAW4N,EAASC,IACzD,CACE,GAAIC,GAAQJ,EAAkBG,GAC1BE,EAAenI,EAAO5E,UAAWhE,EAAGA,EAAI8Q,EAAME,KAElD,IAAID,EAAK/N,SAAW8N,EAAME,KAC1B,CACE,GAAIC,GAAYH,EAAMxI,QAASyI,EAE3BE,KAEFpC,GAAOoC,EAAUvR,MACjBM,GAAK8Q,EAAME,KAAO,EAClBJ,GAAU,IAKXA,IAEH/B,GAAOjG,EAAOsI,OAAOlR,IAIzB,MAAO6O,IAGFwB,EAAAnP,UAAAwJ,eAAP,WAEE,MAAOhL,MAAK4Q,KAAOrM,EAAUG,eAC3B1E,KAAK6Q,OAAStM,EAAUE,iBACxBzE,KAAK8Q,OAASvM,EAAUC,iBACxBxE,KAAK+Q,aAGFJ,EAAAnP,UAAA4N,SAAP,WAEE,MAAIpP,MAAK+Q,YAAoB/Q,KAAKkJ,OAAO,gBACrClJ,KAAK8Q,OAAe9Q,KAAKkJ,OAAO,YAChClJ,KAAK6Q,OAAe7Q,KAAKkJ,OAAO,SAE7BlJ,KAAKkJ,OAAO,OAGdyH,EAAAnP,UAAAiQ,YAAP,WAEE,MAAOzR,MAAK4Q,KACI,IAAd5Q,KAAK6Q,OACS,IAAd7Q,KAAK8Q,OACc,IAAnB9Q,KAAK+Q,aAGFJ,EAAAnP,UAAAkQ,SAAP,WAEE,GAAIvC,IACFyB,KAAM5Q,KAAK4Q,KAOb,OAJI5Q,MAAK6Q,SAAQ1B,EAAI0B,OAAS7Q,KAAK6Q,QAC/B7Q,KAAK8Q,SAAQ3B,EAAI2B,OAAS9Q,KAAK8Q,QAC/B9Q,KAAK+Q,cAAa5B,EAAI4B,YAAc/Q,KAAK+Q,aAEtC5B,GAGKwB,EAAAgB,MAAd,SAAoB1O,GAElB,MAAO0H,GAAMjE,KAAKzD,IAGN0N,EAAAiB,WAAd,SAAyBlL,GAEvB,GAAImL,GAAoB7R,KAAK8R,MAAMC,KAAMrL,EAEzC,KAAKmL,EAEH,MAAO,KAGT,IAAIG,GAAYlD,SAAS+C,EAAQ,KAAO,EACpCpR,EAAYqO,SAAS+C,EAAQ,KAAO,EACpClQ,EAAYmN,SAAS+C,EAAQ,KAAO,EACpCtR,EAAYuO,SAAS+C,EAAQ,KAAO,CAExC,OAAO7R,MAAKiS,MAAMD,EAAGvR,EAAGkB,EAAGpB,IAGfoQ,EAAAuB,eAAd,SAA6BxL,GAE3B,GAAIsL,GAAYtL,EAAO,IACnBjG,EAAYyB,KAAKK,MAAMmE,EAAO,KAAO,IACrC/E,EAAYO,KAAKK,MAAMmE,EAAO,KAAS,IACvCnG,EAAY2B,KAAKK,MAAMmE,EAAO,KAAY,GAE9C,OAAO1G,MAAKiS,MAAMD,EAAGvR,EAAGkB,EAAGpB,IAGfoQ,EAAAsB,MAAd,SAAoBrB,EAAcC,EAAuCC,EAAuCC,GAE9G,WAFgC,KAAAF,MAAiBtM,EAAUe,gBAAY,KAAAwL,MAAiBvM,EAAUiB,gBAAY,KAAAuL,MAAsBxM,EAAUmB,YAEvI,GAAIiL,GAAKC,EAAMC,EAAQC,EAAQC,IA3H1BJ,EAAAmB,MAAQ,0CA8HRnB,EAAAM,aAEVK,KAAM,EACN1I,SACEuJ,IAAK,SAACC,GAAY,MAAArP,GAAGqB,UAAUgO,EAAErB,YAAa,OAIhDO,KAAM,EACN1I,SACEyJ,GAAI,SAACD,GAAY,MAAArP,GAAGqB,UAAUgO,EAAExB,KAAM,IACtC0B,GAAI,SAACF,GAAY,MAAArP,GAAGqB,UAAWgO,EAAExB,KAAO,IAAO,GAAI,IACnD2B,GAAI,SAACH,GAAY,MAAArP,GAAGqB,UAAUgO,EAAExB,KAAO,EAAG,IAC1C4B,GAAI,SAACJ,GAAY,MAAArP,GAAGqB,UAAUgO,EAAEvB,OAAQ,IACxC4B,GAAI,SAACL,GAAY,MAAArP,GAAGqB,UAAUgO,EAAEtB,OAAQ,IACxC4B,GAAI,SAACN,GAAY,MAAArP,GAAGqB,UAAUgO,EAAErB,YAAa,EAAG,OAIlDO,KAAM,EACN1I,SACE+J,EAAG,SAACP,GAAY,MAAAA,GAAExB,KAAO,GAAK,KAAO,MACrC7M,EAAG,SAACqO,GAAY,MAAAA,GAAExB,KAAO,GAAK,KAAO,MACrCgC,EAAG,SAACR,GAAY,MAAAA,GAAExB,KAAO,IACzBoB,EAAG,SAACI,GAAY,OAAEA,EAAExB,KAAO,IAAO,IAAM,IACxCO,EAAG,SAACiB,GAAY,MAACA,GAAExB,KAAO,EAAK,IAC/BnQ,EAAG,SAAC2R,GAAY,MAAAA,GAAEvB,OAAS,IAC3BlP,EAAG,SAACyQ,GAAY,MAAAA,GAAEtB,OAAS,IAC3B+B,EAAG,SAACT,GAAY,MAAArP,GAAGqB,UAAUgO,EAAErB,YAAa,EAAG,OAKvDJ,KC7JAhG,EAAA,mBAAAmI,MA8MA,MA3MgBA,GAAAC,UAAd,SAAwB9P,EAAY+P,EAA4BC,OAA5B,KAAAD,MAAA,OAA4B,KAAAC,MAAA,EAE9D,IAAIxE,GAAwB,SAAC3M,GAC3B,MAAOA,GAAQkR,IAAmBC,EAGpC,IAAIlQ,EAAGY,sBAAsBV,GAC7B,CACE,GAAIiQ,GAAiBjQ,EAAMqN,QAAU,EACjC6C,EAAgBlQ,EAAMW,KAE1B6K,GAAQ,SAAC3M,GACP,MAAOA,GAAQqR,IAAUD,GAI7B,GAAInQ,EAAGc,sBAAsBZ,GAC7B,CAGE,IAAK,GAFDmQ,MAEK9S,EAAI,EAAGA,EAAI2C,EAAMK,OAAQhD,IAChC8S,EAAKnQ,EAAO3C,KAAQ,CAGtBmO,GAAQ,SAAC3M,GACP,QAASsR,EAAKtR,IAMlB,MAFA2M,GAAMxL,MAAQA,EAEPwL,GAGKqE,EAAAO,IAAd,SAAkBpQ,EAAYqQ,GAE5B,MAAIvQ,GAAGS,SAASP,GAEPA,EAGLA,YAAiB8F,GAEZ9F,EAAMyD,KAGR4M,GAGKR,EAAAlM,IAAd,SAAkB3D,GAEhB,MAAIF,GAAGS,SAASP,GAEP8F,EAAIS,KAAcvG,GAElBF,EAAGQ,SAASN,GAEZ8F,EAAI4I,MAAO1O,GAEXA,YAAiB8F,GAEjB9F,EAEAF,EAAGC,QAASC,GAEZ8F,EAAIwK,UAAqBtQ,GAEzBF,EAAGU,SAAUR,GAEb8F,EAAIyK,WAAoBvQ,IAEd,IAAVA,EAEA8F,EAAID,QAGN,MAGKgK,EAAApM,KAAd,SAAmBzD,GAEjB,MAAIA,aAAiByN,GAEZzN,EAELF,EAAGS,SAASP,GAEPyN,EAAKwB,eAAwBjP,GAElCF,EAAGQ,SAASN,GAEPyN,EAAKkB,WAAoB3O,GAE9BF,EAAGU,SAASR,IAAUF,EAAGS,SAASP,EAAM2N,MAEnC,GAAIF,GAAKzN,EAAM2N,KAAM3N,EAAM4N,OAAQ5N,EAAM6N,OAAQ7N,EAAM8N,aAGzD,MAGK+B,EAAApI,MAAd,SAAoBzH,GAElB,GAAIyH,KAEJ,IAAI3H,EAAGC,QAAQC,GAEb,IAAsB,GAAA2K,GAAA,EAAA6F,EAAAxQ,EAAA2K,EAAA6F,EAAAnQ,OAAAsK,IAAK,CAAtB,GAAI8F,GAASD,EAAA7F,GAEZlH,EAAO1G,KAAK0G,KAAMgN,EAElBhN,IAEFgE,EAAMyC,KAAMzG,GAKlB,MAAOgE,IAGKoI,EAAAlE,WAAd,SAAyB3L,GAEvB,GAAI2L,KAEJ,IAAI7L,EAAGC,QAAQC,GAEb,IAA0B,GAAA2K,GAAA,EAAA+F,EAAA1Q,EAAA2K,EAAA+F,EAAArQ,OAAAsK,IAAK,CAA1B,GAAI9B,GAAa6H,EAAA/F,EAEpB,IAAI7K,EAAGS,SAASsI,GAEd8C,EAAY9C,IAAkB,MAGhC,CACE,GAAIlF,GAAW5G,KAAK4G,IAAKkF,EAErBlF,KAEFgI,EAAYhI,EAAIkF,gBAAkB,IAM1C,MAAO8C,IAGKkE,EAAAlI,SAAd,SAAuB3H,EAAsBkM,OAAA,KAAAA,MAAA,GAAoB5E,GAE/D,IAAI4F,GAAKnQ,KAAK4G,IAAK3D,EAAMkN,GAgCzB,OA9BIA,KAEFlN,EAAMuD,MAAQ2J,EAAG3J,QACjBvD,EAAMwD,IAAM0J,EAAG1J,MACfxD,EAAM0G,MAAQwG,EAAGxG,MACjB1G,EAAMiJ,OAASiE,EAAGjE,OAClBjJ,EAAM+I,YAAcmE,EAAGnE,aAGzBmD,EAAIjE,SAAWnI,EAAGe,SAAUb,EAAMiI,SAAU3G,EAAUyB,eACtDmJ,EAAIhE,aAA8BpI,EAAGe,SAAUb,EAAMkI,aAAc5G,EAAU0B,uBAC7EkJ,EAAI3I,MAAQxG,KAAK4G,IAAK3D,EAAMuD,OAC5B2I,EAAI1I,IAAMzG,KAAK4G,IAAK3D,EAAMwD,KAC1B0I,EAAI1D,gBAAkB0D,EAAI1I,IAAM0I,EAAI1I,IAAIwE,IAAIkE,EAAIjE,SAAUiE,EAAIhE,cAAgB,KAC9EgE,EAAI5G,UAAYvI,KAAK+S,UAAW9P,EAAMsF,WACtC4G,EAAInD,WAAahM,KAAK+S,UAAW9P,EAAM+I,YACvCmD,EAAIlD,UAAYjM,KAAK+S,UAAW9P,EAAMgJ,WACtCkD,EAAIjD,MAAQlM,KAAK+S,UAAW9P,EAAMiJ,OAClCiD,EAAIhD,KAAOnM,KAAK+S,UAAW9P,EAAMkJ,MACjCgD,EAAI/C,WAAapM,KAAK+S,UAAW9P,EAAMmJ,YACvC+C,EAAI9C,eAAiBrM,KAAK+S,UAAW9P,EAAMoJ,gBAC3C8C,EAAI7C,eAAiBtM,KAAK+S,UAAW9P,EAAMqJ,gBAC3C6C,EAAI5C,YAAcvM,KAAK+S,UAAW9P,EAAMsJ,aACxC4C,EAAI3C,gBAAkBxM,KAAK+S,UAAW9P,EAAMuJ,iBAC5C2C,EAAI1C,gBAAkBzM,KAAK+S,UAAW9P,EAAMwJ,iBAC5C0C,EAAIxF,KAAO3J,KAAK+S,UAAW9P,EAAM0G,MACjCwF,EAAIzE,MAAQ1K,KAAK0K,MAAOzH,EAAMyH,OAC9ByE,EAAItD,QAAU7L,KAAK4O,WAAY3L,EAAM4I,SACrCsD,EAAItE,uBAEGsE,GAGK2D,EAAAc,iBAAd,SAAkC3Q,GAEhC,MAAIA,GAAM2H,mBAAoBL,GAEAtH,GAI5B2H,SAAU5K,KAAK4K,SAAU3H,EAAM2H,UAC/BiJ,MAAO5Q,EAAM4Q,QAIHf,EAAAgB,KAAd,SAAmBC,EAAiB5E,GAElC,WAFkC,KAAAA,MAAA,GAAoB5E,IAE/C4E,GAGX2D,KZ42ByBkB,EAAuC7T,EAAoB,Ga1jCpF4I,Gb2jCwE5I,EAAoBiB,EAAE4S,Ga3jC9F,WAmCE,QAAAC,GAAmBC,GACjBlU,KAAKkU,KAAmBA,EACxBlU,KAAK0G,KAAmBwN,EAAK1K,OAC7BxJ,KAAKqH,OAAmB6M,EAAKnD,cAC7B/Q,KAAKuH,QAAmB2M,EAAKpD,SAC7B9Q,KAAK6Q,OAAmBqD,EAAKrD,SAC7B7Q,KAAK4Q,KAAmBsD,EAAKtD,OAC7B5Q,KAAKkM,MAAmBgI,EAAKhI,QAC7BlM,KAAK2J,KAAmBuK,EAAKvK,OAC7B3J,KAAKmU,QAAmBD,EAAKC,UAC7BnU,KAAKuI,UAAmB2L,EAAKtN,MAC7B5G,KAAKgM,WAAmBkI,EAAKA,OAC7BlU,KAAKiM,UAAmBiI,EAAKjI,YAC7BjM,KAAKmM,KAAmB+H,EAAK/H,OAE7BnM,KAAKoM,WAAmB6H,EAAIG,cAAeF,GAC3ClU,KAAKqM,eAAmB4H,EAAII,kBAAmBH,GAC/ClU,KAAKsM,eAAmB2H,EAAIK,kBAAmBJ,GAC/ClU,KAAKuM,YAAmB0H,EAAIM,eAAgBL,GAC5ClU,KAAKwM,gBAAmByH,EAAIO,mBAAoBN,GAChDlU,KAAKyM,gBAAmBwH,EAAIQ,mBAAoBP,GAEhDlU,KAAK8L,cAAmBmI,EAAIS,iBAAkBR,GAC9ClU,KAAK2U,eAAmBV,EAAIW,kBAAmBV,GAC/ClU,KAAK6U,gBAAmBZ,EAAIa,mBAAoBZ,GAChDlU,KAAK+U,kBAAoBd,EAAIe,qBAAsBd,GA4iBvD,MAviBSD,GAAAzS,UAAAsF,QAAP,SAAeF,GACb,MAAO5G,MAAK8L,gBAAkBlF,EAAIkF,eAG7BmI,EAAAzS,UAAA0F,UAAP,SAAiBN,GACf,MAAO5G,MAAK6U,kBAAoBjO,EAAIiO,iBAG/BZ,EAAAzS,UAAAwF,SAAP,SAAgBJ,GACd,MAAO5G,MAAK2U,iBAAmB/N,EAAI+N,gBAG9BV,EAAAzS,UAAA4F,SAAP,SAAgBR,GACd,MAAO5G,MAAK2J,OAAS/C,EAAI+C,MAGpBsK,EAAAzS,UAAAyT,YAAP,SAAmBrO,GACjB,MAAO5G,MAAK+U,oBAAsBnO,EAAImO,mBAGjCd,EAAAzS,UAAA0T,SAAP,SAAgBtO,GACd,MAAO5G,MAAK8L,gBAAkBlF,EAAIkF,eAAiB9L,KAAK4Q,OAAShK,EAAIgK,MAGhEqD,EAAAzS,UAAA2T,WAAP,SAAkBvO,GAChB,MAAO5G,MAAK8L,gBAAkBlF,EAAIkF,eAAiB9L,KAAK4Q,OAAShK,EAAIgK,MAAQ5Q,KAAK6Q,SAAWjK,EAAIiK,QAG5FoD,EAAAzS,UAAAsM,SAAP,SAAgBpH,GACd,MAAO1G,MAAK4Q,OAASlK,EAAKkK,MAAQ5Q,KAAK6Q,SAAWnK,EAAKmK,QAAU7Q,KAAKuH,UAAYb,EAAKoK,QAAU9Q,KAAKqH,SAAWX,EAAKqK,aAKjHkD,EAAAzS,UAAAgK,SAAP,SAAgB5E,EAAUwO,GACxB,MAAOpV,MAAKkU,KAAK1I,SAAU5E,EAAIsN,KAAMkB,IAGhCnB,EAAAzS,UAAAmK,eAAP,SAAsB/E,EAAUwO,GAC9B,MAAOpV,MAAKkU,KAAKvI,eAAgB/E,EAAIsN,KAAMkB,IAGtCnB,EAAAzS,UAAA6T,QAAP,SAAezO,EAAUwO,GACvB,MAAOpV,MAAKkU,KAAKmB,QAASzO,EAAIsN,KAAMkB,IAG/BnB,EAAAzS,UAAA+J,cAAP,SAAqB3E,EAAUwO,GAC7B,MAAOpV,MAAKkU,KAAK3I,cAAe3E,EAAIsN,KAAMkB,IAGrCnB,EAAAzS,UAAA8H,IAAP,SAAW1C,GACT,MAAO5G,MAAKkU,KAAKmB,QAASzO,EAAIsN,MAASlU,KAAO4G,GAGzCqN,EAAAzS,UAAA+H,IAAP,SAAW3C,GACT,MAAO5G,MAAKkU,KAAK1I,SAAU5E,EAAIsN,MAASlU,KAAO4G,GAK1CqN,EAAAzS,UAAA8F,cAAP,SAAqBV,EAAU7E,EAAkBC,GAC/C,WAD6B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACxCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,gBAAgB,GAAQnS,EAAIC,IAGjEiS,EAAAzS,UAAAgG,eAAP,SAAsBZ,EAAU7E,EAAkBC,GAChD,WAD8B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACzCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,WAAW,GAAQnS,EAAIC,IAG5DiS,EAAAzS,UAAAkG,eAAP,SAAsBd,EAAU7E,EAAkBC,GAChD,WAD8B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACzCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,WAAW,GAAQnS,EAAIC,IAG5DiS,EAAAzS,UAAAoG,aAAP,SAAoBhB,EAAU7E,EAAkBC,GAC9C,WAD4B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACvCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,SAAS,GAAQnS,EAAIC,IAG1DiS,EAAAzS,UAAAsG,YAAP,SAAmBlB,EAAU7E,EAAkBC,GAC7C,WAD2B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACtCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,QAAQ,GAAQnS,EAAIC,IAGzDiS,EAAAzS,UAAAwG,aAAP,SAAoBpB,EAAU7E,EAAkBC,GAC9C,WAD4B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACvCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,SAAS,GAAQnS,EAAIC,IAG1DiS,EAAAzS,UAAA0G,cAAP,SAAqBtB,EAAU7E,EAAkBC,GAC/C,WAD6B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACxCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,UAAU,GAAQnS,EAAIC,IAG3DiS,EAAAzS,UAAA4G,aAAP,SAAoBxB,EAAU7E,EAAkBC,GAC9C,WAD4B,KAAAD,MAASK,EAAGS,UAAM,KAAAb,OAAA,GACvCH,EAAS7B,KAAKkU,KAAKoB,KAAM1O,EAAIsN,KAAM,SAAS,GAAQnS,EAAIC,IAG1DiS,EAAAzS,UAAA+T,UAAP,SAAiB/O,EAAYC,EAAU+O,GACrC,WADqC,KAAAA,OAAA,GAC9BxV,KAAKkU,KAAKqB,UAAU/O,EAAM0N,KAAMzN,EAAIyN,KAAM,KAAMsB,EAAY,KAAO,OAGrEvB,EAAAzS,UAAAiU,OAAP,SAAcC,GACZ,GAAI/U,GAAIX,KAAK2V,UAEb,OADAD,GAAS/U,GACF,GAAIsT,GAAKtT,IAGXsT,EAAAzS,UAAAyJ,IAAP,SAAW2K,EAAgB7F,GACzB,MAAO/P,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,IAAI2K,EAAuB7F,MAGhDkE,EAAAzS,UAAAqU,SAAP,SAAgBxO,GACd,MAAOrH,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,IAAI5D,EAAQ,mBAKjC4M,EAAAzS,UAAAsU,aAAP,SAAoBjO,GAClB,MAAO7H,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,IAAIpD,EAAM,WAG/BoM,EAAAzS,UAAAmL,KAAP,SAAY9E,GACV,WADU,KAAAA,MAAA,GACH7H,KAAK8V,cAAejO,IAGtBoM,EAAAzS,UAAAuL,KAAP,SAAYlF,GACV,WADU,KAAAA,MAAA,GACH7H,KAAK8V,aAAcjO,IAGrBoM,EAAAzS,UAAAuU,eAAP,SAAsBnP,GACpB,MAAO5G,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEuT,KAAKtN,MAG1BqN,EAAAzS,UAAAwU,cAAP,SAAqBzN,GACnB,MAAOvI,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEiG,IAAI2B,MAGzB0L,EAAAzS,UAAAyU,cAAP,SAAqBhK,GACnB,MAAOjM,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsL,UAAUA,MAK/BgI,EAAAzS,UAAA0U,UAAP,SAAiBhK,GACf,MAAOlM,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEuL,MAAMA,MAG3B+H,EAAAzS,UAAA2U,eAAP,SAAsBlO,GACpB,MAAOjI,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,IAAIhD,EAAQ,aAGjCgM,EAAAzS,UAAA4U,UAAP,SAAiBnO,GACf,WADe,KAAAA,MAAA,GACRjI,KAAKmW,gBAAiBlO,IAGxBgM,EAAAzS,UAAA6U,UAAP,SAAiBpO,GACf,WADe,KAAAA,MAAA,GACRjI,KAAKmW,eAAgBlO,IAKvBgM,EAAAzS,UAAA8U,SAAP,SAAgBnK,EAAcoK,GAC5B,WAD4B,KAAAA,MAAuBvW,KAAKmM,MACjDnM,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,KAAKkB,EAAOoK,GAAgBhS,EAAUM,aAAc,WAGzEoP,EAAAzS,UAAAgV,eAAP,SAAsBrK,GACpB,MAAOnM,MAAKsW,SAASnK,EAAMnM,KAAKoM,aAG3B6H,EAAAzS,UAAAiV,mBAAP,SAA0BtK,GACxB,MAAOnM,MAAKsW,SAASnK,EAAMnM,KAAKsM,iBAG3B2H,EAAAzS,UAAAkV,mBAAP,SAA0BvK,GACxB,MAAOnM,MAAKsW,SAASnK,EAAMnM,KAAKqM,iBAG3B4H,EAAAzS,UAAAmV,gBAAP,SAAuBxK,GACrB,MAAOnM,MAAKsW,SAASnK,EAAMnM,KAAKuM,cAG3B0H,EAAAzS,UAAAoV,oBAAP,SAA2BzK,GACzB,MAAOnM,MAAKsW,SAASnK,EAAMnM,KAAKwM,kBAG3ByH,EAAAzS,UAAAqV,oBAAP,SAA2B1K,GACzB,MAAOnM,MAAKsW,SAASnK,EAAMnM,KAAKyM,kBAG3BwH,EAAAzS,UAAAsV,cAAP,SAAqB/O,GACnB,MAAO/H,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,IAAIlD,EAAO,YAGhCkM,EAAAzS,UAAAuV,SAAP,SAAgBhP,GACd,WADc,KAAAA,MAAA,GACP/H,KAAK8W,eAAgB/O,IAGvBkM,EAAAzS,UAAAwV,SAAP,SAAgBjP,GACd,WADc,KAAAA,MAAA,GACP/H,KAAK8W,cAAe/O,IAKtBkM,EAAAzS,UAAAyV,SAAP,SAAgBtN,GACd,MAAO3J,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEgJ,KAAKA,MAG1BsK,EAAAzS,UAAA0V,cAAP,SAAqB/O,GACnB,MAAOnI,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,IAAI9C,EAAO,WAGhC8L,EAAAzS,UAAA2V,SAAP,SAAgBhP,GACd,WADc,KAAAA,MAAA,GACPnI,KAAKkX,eAAgB/O,IAGvB8L,EAAAzS,UAAA4V,SAAP,SAAgBjP,GACd,WADc,KAAAA,MAAA,GACPnI,KAAKkX,cAAe/O,IAKtB8L,EAAAzS,UAAA6V,SAAP,SAAgBzG,GACd,MAAO5Q,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEiQ,KAAKA,MAG1BqD,EAAAzS,UAAA8V,cAAP,SAAqB3P,GACnB,MAAO3H,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEsK,IAAItD,EAAO,YAGhCsM,EAAAzS,UAAA+V,SAAP,SAAgB5P,GACd,WADc,KAAAA,MAAA,GACP3H,KAAKsX,eAAgB3P,IAGvBsM,EAAAzS,UAAAgW,SAAP,SAAgB7P,GACd,WADc,KAAAA,MAAA,GACP3H,KAAKsX,cAAe3P,IAKtBsM,EAAAzS,UAAAiW,UAAP,SACI7G,EACAC,EACAC,EACAC,GACF,WAJE,KAAAH,MAAerM,EAAUa,cACzB,KAAAyL,MAAiBtM,EAAUe,gBAC3B,KAAAwL,MAAiBvM,EAAUiB,gBAC3B,KAAAuL,MAAsBxM,EAAUmB,YAC3B1F,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE8J,KAAKmG,KAAIA,EAAEC,OAAMA,EAAEC,OAAMA,EAAEC,YAAWA,OAG3DkD,EAAAzS,UAAA4M,SAAP,SAAgB1H,GACd,MAAO1G,MAAKyX,UAAU/Q,EAAKkK,KAAMlK,EAAKmK,OAAQnK,EAAKoK,OAAQpK,EAAKqK,cAO3DkD,EAAAzS,UAAAgF,MAAP,WACE,MAAOxG,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,UAG7BzD,EAAAzS,UAAAmW,QAAP,WACE,MAAO3X,MAAK4Q,OAASrM,EAAUa,UAC7BpF,KAAK6Q,SAAWtM,EAAUe,YAC1BtF,KAAKuH,UAAYhD,EAAUiB,YAC3BxF,KAAKqH,SAAW9C,EAAUmB,YAGvBuO,EAAAzS,UAAAiF,IAAP,SAAW+O,GACT,WADS,KAAAA,OAAA,GACFA,EACLxV,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEiX,MAAM,SACzB5X,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,OAAOzM,IAAI,EAAG,UAGtCgJ,EAAAzS,UAAAqW,MAAP,WACE,MAAO7X,MAAK4Q,OAASrM,EAAUc,UAC7BrF,KAAK6Q,SAAWtM,EAAUgB,YAC1BvF,KAAKuH,UAAYhD,EAAUkB,YAC3BzF,KAAKqH,SAAW9C,EAAUoB,YAKvBsO,EAAAzS,UAAAsW,YAAP,WACE,MAAO9X,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,WAG7BzD,EAAAzS,UAAAuW,cAAP,WACE,MAAO/X,MAAK6Q,SAAWtM,EAAUe,YAC/BtF,KAAKuH,UAAYhD,EAAUiB,YAC3BxF,KAAKqH,SAAW9C,EAAUmB,YAGvBuO,EAAAzS,UAAAwW,UAAP,SAAiBxC,GACf,WADe,KAAAA,OAAA,GACRA,EACLxV,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEiX,MAAM,UACzB5X,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,QAAQzM,IAAI,EAAG,WAGvCgJ,EAAAzS,UAAAyW,YAAP,WACE,MAAOjY,MAAK6Q,SAAWtM,EAAUgB,YAC/BvF,KAAKuH,UAAYhD,EAAUkB,YAC3BzF,KAAKqH,SAAW9C,EAAUoB,YAKvBsO,EAAAzS,UAAA0W,YAAP,WACE,MAAOlY,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,WAG7BzD,EAAAzS,UAAA2W,cAAP,WACE,MAAOnY,MAAKuI,YAAchE,EAAUqB,aAG/BqO,EAAAzS,UAAA4W,UAAP,SAAiB5C,GACf,WADe,KAAAA,OAAA,GACRA,EACLxV,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEiX,MAAM,UACzB5X,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,QAAQzM,IAAI,EAAG,WAGvCgJ,EAAAzS,UAAA6W,YAAP,WACE,MAAOrY,MAAKuI,YAAchE,EAAUsB,aAK/BoO,EAAAzS,UAAA8W,aAAP,WACE,MAAOtY,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,YAG7BzD,EAAAzS,UAAA+W,eAAP,WACE,MAAOvY,MAAKgM,aAAezH,EAAUW,SAGhC+O,EAAAzS,UAAAgX,WAAP,SAAkBhD,GAChB,WADgB,KAAAA,OAAA,GACTA,EACLxV,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEiX,MAAM,WACzB5X,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,SAASzM,IAAI,EAAG,YAGxCgJ,EAAAzS,UAAAiX,aAAP,WACE,MAAOzY,MAAKgM,aAAehM,KAAK0Y,eAK3BzE,EAAAzS,UAAAmX,YAAP,WACE,MAAO3Y,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,WAG7BzD,EAAAzS,UAAAoX,cAAP,WACE,MAAO5Y,MAAKkM,QAAU3H,EAAUS,WAAahF,KAAKgM,aAAezH,EAAUW,SAGtE+O,EAAAzS,UAAAqX,UAAP,SAAiBrD,GACf,WADe,KAAAA,OAAA,GACRA,EACLxV,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAEiX,MAAM,UACzB5X,KAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE+W,QAAQ,QAAQzM,IAAI,EAAG,WAGvCgJ,EAAAzS,UAAAsX,YAAP,WACE,MAAO9Y,MAAKkM,QAAU3H,EAAUU,WAAajF,KAAKgM,aAAezH,EAAUY,SAKtE8O,EAAAzS,UAAAkX,YAAP,WACE,MAAO1Y,MAAKkU,KAAKwE,eAGZzE,EAAAzS,UAAAuX,WAAP,WACE,MAAO/Y,MAAK6Y,YAAY5M,WAGnBgI,EAAAzS,UAAAwX,YAAP,WACE,MAAOhZ,MAAKkU,KAAK8E,eAKZ/E,EAAAzS,UAAA0H,OAAP,SAAcA,GACZ,MAAOlJ,MAAKkU,KAAKhL,OAAQA,IAGpB+K,EAAAzS,UAAA6R,IAAP,SAAW4F,GACT,MAAOjZ,MAAKyV,OAAO,SAAA9U,GAAK,MAAAA,GAAE0S,IAAI4F,MAGzBhF,EAAAzS,UAAAmU,SAAP,WACE,MAAO3V,MAAKkU,KAAKgF,SAGZjF,EAAAzS,UAAA2X,OAAP,WACE,MAAOnZ,MAAKkU,KAAKiF,UAGZlF,EAAAzS,UAAA4X,QAAP,WACE,MAAOpZ,MAAKkU,KAAKkF,WAGZnF,EAAAzS,UAAA6X,OAAP,WACE,MAAOrZ,MAAKkU,KAAKmF,UAGZpF,EAAAzS,UAAA8X,YAAP,SAAmBC,GACjB,WADiB,KAAAA,OAAA,GACVvZ,KAAKkU,KAAKoF,YAAaC,IAGzBtF,EAAAzS,UAAAkQ,SAAP,WACE,MAAO1R,MAAKkU,KAAKxC,YAGZuC,EAAAzS,UAAA4N,SAAP,WACE,MAAOpP,MAAKkU,KAAK9E,YAKZ6E,EAAAzS,UAAAgY,MAAP,WACE,MAAOxZ,MAAKkU,KAAKsF,SAGZvF,EAAAzS,UAAAiY,WAAP,WACE,MAAOzZ,MAAKkU,KAAKuF,cAKLxF,EAAAyF,IAAd,WACE,MAAO,IAAIzF,GAAID,MAGHC,EAAAnL,MAAd,WACE,MAAO9I,MAAK0Z,MAAMlT,SAGNyN,EAAA0F,SAAd,WACE,MAAO3Z,MAAK8I,QAAQiE,QAGRkH,EAAA2F,WAAd,SAAyBC,GACvB,MAAOA,IAAUA,EAAOC,UAAY,GAAI7F,GAAK4F,GAAW,MAG5C5F,EAAAzK,KAAd,SAAmBnC,GACjB,MAAOrH,MAAK4Z,WAAW5F,EAAO3M,KAGlB4M,EAAAtC,MAAd,SAAoB1O,GAClB,MAAO0H,GAAM/D,IAAI3D,IAGLgR,EAAArC,WAAd,SAAyB3O,GACvB,MAAOjD,MAAK4Z,WAAW5F,EAAO/Q,KAGlBgR,EAAA8F,WAAd,SAAyB9W,EAAe2F,GACtC,MAAO5I,MAAK4Z,WAAW5F,EAAO/Q,EAAO2F,KAGzBqL,EAAAT,WAAd,SAAyBvQ,GACvB,MAAOjD,MAAK4Z,WAAW5F,EAAO/Q,KAGlBgR,EAAA+F,SAAd,SAAuB/W,GACrB,MAAOjD,MAAK4Z,WAAW5F,EAAO/Q,KAGlBgR,EAAAV,UAAd,SAAwBtQ,GACtB,MAAOjD,MAAK4Z,WAAW5F,EAAO/Q,KAGlBgR,EAAAlF,kBAAd,SAAgCkL,GAC9B,GAAI/F,GAAe+F,EAAK,IACpB/N,EAAiBhK,KAAKK,MAAM0X,EAAK,KAAO,IAAO,EAC/CtQ,EAAezH,KAAKK,MAAM0X,EAAK,IAEnC,OAAOja,MAAKiS,MAAMtI,EAAMuC,EAAOgI,IAGnBD,EAAAhC,MAAd,SAAoBtI,EAAcuC,EAChCgI,EACAtD,EACAC,EACAC,EACAC,GAEA,WANA,KAAAmD,MAAe3P,EAAUW,aACzB,KAAA0L,MAAerM,EAAUa,cACzB,KAAAyL,MAAiBtM,EAAUe,gBAC3B,KAAAwL,MAAiBvM,EAAUiB,gBAC3B,KAAAuL,MAAsBxM,EAAUmB,YAEzB,GAAIuO,GAAKD,GAAQrK,KAAIA,EAAEuC,MAAKA,EAAEgI,KAAIA,EAAEtD,KAAIA,EAAEC,OAAMA,EAAEC,OAAMA,EAAEC,YAAWA,MAUhEkD,EAAAI,kBAAd,SAAgCH,GAE9B,MAAOhS,MAAKK,OAAQ2R,EAAKjI,YAAc,GAAK1H,EAAUM,eAG1CoP,EAAAG,cAAd,SAA4BF,GAE1B,GAAIgG,GAAchG,EAAKgF,QAAQxB,QAAQ,QACnC3P,EAAgBmM,EAAK/H,MAEzB,OAAO+N,GAAYtT,MAAQrC,EAAU4B,8BAAgC4B,EAAQ,EAAIA,GAGrEkM,EAAAK,kBAAd,SAAgCJ,GAE9B,GAAIgG,GAAchG,EAAKgF,QAAQxB,QAAQ,QACnC3P,EAAgBmM,EAAK/H,MAEzB,OAAO+N,GAAYtT,QAAUrC,EAAUqB,YAAcmC,EAAQA,EAAQ,GAGzDkM,EAAAO,mBAAd,SAAiCN,GAE/B,MAAOhS,MAAKK,OAAO2R,EAAKA,OAAS,GAAK3P,EAAUM,eAGpCoP,EAAAQ,mBAAd,SAAiCP,GAE/B,MAAOhS,MAAKK,OAAO2R,EAAKA,OAAS,EAAIA,EAAKtN,MAAQrC,EAAUM,cAAgBN,EAAUM,eAG1EoP,EAAAM,eAAd,SAA6BL,GAE3B,GAAIiG,GAAMjG,EAAKA,OACXkG,EAAMlG,EAAKtN,MACXyT,EAAaF,EAAMC,CAEvB,OAAOlY,MAAKK,OAAS8X,EAAa9V,EAAU4B,8BAAgC,GAAM5B,EAAUM,eAGhFoP,EAAAW,kBAAd,SAAgCV,GAE9B,MAAOA,GAAK/H,OAAuB,IAAd+H,EAAKvK,QAGdsK,EAAAa,mBAAd,SAAiCZ,GAE/B,MAAQA,GAAKhI,QAAU,EAAmB,IAAdgI,EAAKvK,QAGrBsK,EAAAS,iBAAd,SAA+BR,GAE7B,MAAOA,GAAKA,OAA8B,KAApBA,EAAKhI,QAAU,GAAyB,IAAdgI,EAAKvK,QAGzCsK,EAAAe,qBAAd,SAAmCd,GAEjC,MAAOA,GAAKC,UAA0B,GAAdD,EAAKvK,QAlmBRsK,EAAAqG,UAAiBrG,EAAIyF,MAqmB9CzF,Mb46BIsG,EAAava,MAAQA,KAAKua,WAAc,WACxC,GAAIC,GAAgBzZ,OAAO0Z,iBACpBC,uBAA2BxX,QAAS,SAAUvC,EAAGqD,GAAKrD,EAAE+Z,UAAY1W,IACvE,SAAUrD,EAAGqD,GAAK,IAAK,GAAItC,KAAKsC,GAAOA,EAAEvC,eAAeC,KAAIf,EAAEe,GAAKsC,EAAEtC,IACzE,OAAO,UAAUf,EAAGqD,GAEhB,QAAS2W,KAAO3a,KAAK4a,YAAcja,EADnC6Z,EAAc7Z,EAAGqD,GAEjBrD,EAAEa,UAAkB,OAANwC,EAAajD,OAAO8Z,OAAO7W,IAAM2W,EAAGnZ,UAAYwC,EAAExC,UAAW,GAAImZ,Qc3hDvFG,EAAA,SAAAC,GAAA,QAAAC,KAAA,GAAAC,GAAA,OAAAF,KAAAG,MAAAlb,KAAAmb,YAAAnb,IdojDQ,OcjjDCib,GAAAG,YAAsB,EACtBH,EAAAI,aAAuB,EACvBJ,EAAAK,cAAwB,EACxBL,EAAAM,aAAuB,EACvBN,EAAAO,cAAwB,EACxBP,EAAAQ,aAAuB,EACvBR,EAAAS,cAAwB,EACxBT,EAAAU,eAAyB,EACzBV,EAAAW,cAAwB,EACxBX,EAAAY,YAAsB,EACtBZ,EAAAa,UduiDMb,Ec1gDf,MA1CoCV,GAAAS,EAAAD,GAe3BC,EAAAxZ,UAAAua,cAAP,SAAqBC,GAQnB,MANAhc,MAAKob,WAAapb,KAAK8G,QAAQkV,GAC/Bhc,KAAKqb,YAAcrb,KAAKgH,SAASgV,GACjChc,KAAKsb,aAAetb,KAAKkH,UAAU8U,GACnChc,KAAKub,YAAcvb,KAAKoH,SAAS4U,GACjChc,KAAKwb,cAAgBxb,KAAK8H,YAAYkU,EAAS5Z,EAAGS,MAAM,GAEjD7C,MAGFgb,EAAAxZ,UAAAya,eAAP,SAAsBC,GAOpB,MALAlc,MAAKyb,YAAcS,EAASrV,WAAW7G,MACvCA,KAAK0b,aAAeQ,EAASnV,YAAY/G,MACzCA,KAAK2b,cAAgBO,EAASjV,aAAajH,MAC3CA,KAAK4b,aAAeM,EAAS/U,YAAYnH,MAElCA,MAGFgb,EAAAxZ,UAAA2a,cAAP,WAGE,MADAnc,MAAKyb,YAAczb,KAAK0b,aAAe1b,KAAK2b,cAAgB3b,KAAK4b,cAAe,EACzE5b,MAGXgb,GA1CoCjS,GA4CpCqT,EAAA,WAUE,QAAAC,GAAmBpC,EAAYpG,EAAUjJ,EAAoBlE,EAAe4V,GAC1Etc,KAAKia,GAAKA,EACVja,KAAK6T,MAAQA,EACb7T,KAAK4K,SAAWA,EAChB5K,KAAK0G,KAAOA,EACZ1G,KAAKuc,QAAU7V,EAAK8V,QACpBxc,KAAKyc,SAAW/V,EAAKF,MAAMM,QAASwV,GAOxC,MAJEvb,QAAAC,eAAWqb,EAAA7a,UAAA,cduhDLL,IcvhDN,WACE,MAAOe,MAAKK,MAAOvC,KAAKia,GAAK1V,EAAU2B,qBdyhDnChF,YAAY,EACZD,cAAc,IcvhDtBob,KAsBAK,EAAA,WAqBE,QAAAC,GAAmBnW,EAAYC,EAAU6B,EAAagJ,EAAcsL,EAA0BC,EAAwB5Z,GAV/GjD,KAAA8c,MAAgB,EAChB9c,KAAA+c,YAAsB,EACtB/c,KAAAgd,cAAwB,EACxBhd,KAAAid,WAAqB,EACrBjd,KAAAkd,eAAyB,EAEzBld,KAAAmd,UAAqB,KACrBnd,KAAA6H,QACA7H,KAAAod,aAILpd,KAAKoJ,KAAO,GAAI9C,GAAQE,EAAOC,GAC/BzG,KAAKqd,OAAS,GAAI/W,GAAQE,EAAOC,GACjCzG,KAAKsI,KAAOA,EACZtI,KAAKsR,KAAOA,EACZtR,KAAK4c,UAAYA,EACjB5c,KAAK6c,QAAUA,EAEX9Z,EAAGW,UAAUT,IAEfjD,KAAKsd,UAAUra,GAAO,GAGxBjD,KAAKud,UAsZT,MAnZSZ,GAAAnb,UAAA8b,UAAP,SAAiBra,EAAyBsa,GAmBxC,WAnBwC,KAAAA,OAAA,GAExCvd,KAAK8c,KAAO/Z,EAAGe,SAAUb,EAAM6Z,KAAM9c,KAAK8c,MAC1C9c,KAAK+c,YAAcha,EAAGe,SAAUb,EAAM8Z,YAAa/c,KAAK+c,aACxD/c,KAAKgd,aAAeja,EAAGe,SAAUb,EAAM+Z,aAAchd,KAAKgd,cAC1Dhd,KAAKid,UAAYla,EAAGe,SAAUb,EAAMga,UAAWjd,KAAKid,WACpDjd,KAAKkd,cAAgBna,EAAGe,SAAUb,EAAMia,cAAeld,KAAKkd,eAExDna,EAAGC,QAAQC,EAAMma,aAEnBpd,KAAKwd,kBACLxd,KAAKyd,aAAaxa,EAAMma,WAAW,GAAQG,IAGzCA,GAEFvd,KAAKud,UAGAvd,MAGF2c,EAAAnb,UAAAkc,gBAAP,SAAuBX,GAKrB,MAHA/c,MAAK+c,YAAcA,EACnB/c,KAAKud,UAEEvd,MAGF2c,EAAAnb,UAAAmc,iBAAP,SAAwBX,GAKtB,MAHAhd,MAAKgd,aAAeA,EACpBhd,KAAK4d,gBAEE5d,MAGF2c,EAAAnb,UAAAqc,cAAP,SAAqBZ,GAKnB,MAHAjd,MAAKid,UAAYA,EACjBjd,KAAK4d,gBAEE5d,MAGF2c,EAAAnb,UAAAsc,kBAAP,SAAyBZ,GAKvB,MAHAld,MAAKkd,cAAgBA,EACrBld,KAAK4d,gBAEE5d,MAGTe,OAAAC,eAAW2b,EAAAnb,UAAA,Sdo+CLL,Icp+CN,WAEE,MAAOnB,MAAKoJ,KAAK5C,Odq+CbiE,Icl+CN,SAAiB7D,GAEf5G,KAAKoJ,KAAK5C,MAAQI,Gdm+Cd1F,YAAY,EACZD,cAAc,Icj+CpBF,OAAAC,eAAW2b,EAAAnb,UAAA,Odo+CLL,Icp+CN,WAEE,MAAOnB,MAAKoJ,KAAK3C,Kdq+CbgE,Icl+CN,SAAe7D,GAEb5G,KAAKoJ,KAAK3C,IAAMG,Gdm+CZ1F,YAAY,EACZD,cAAc,Icj+Cb0b,EAAAnb,UAAA6G,QAAP,SAAeE,EAA2BC,EAAwBC,EAAyBC,EAA4BC,GAErH,WAFa,KAAAJ,OAAA,OAA2B,KAAAC,OAAA,OAAwB,KAAAC,OAAA,OAAyB,KAAAC,OAAA,OAA4B,KAAAC,MAAA,OAE9G3I,KAAKoJ,KAAKf,QAASrI,KAAKsI,KAAMC,EAAWC,EAAOC,EAAQC,EAAYC,IAGtEgU,EAAAnb,UAAAuc,MAAP,SAAaC,OAAA,KAAAA,MAAA,EAMX,KAAK,GAJDD,MACAvX,EAAaxG,KAAKwG,MAClBC,EAAWzG,KAAK6c,QAAS7c,KAAKyG,IAAKuX,EAAKhe,KAAKsR,MAExChR,EAAI,EAAGA,EAAIN,KAAKsR,KAAMhR,IAE7Byd,EAAM5Q,KAAK,GAAIwP,GAAYnW,EAAOC,EAAKzG,KAAKsI,KAAM0V,EAAIhe,KAAK4c,UAAW5c,KAAK6c,QAAS7c,OACpFwG,EAAQxG,KAAK4c,UAAWpW,EAAOwX,GAC/BvX,EAAMzG,KAAK6c,QAASpW,EAAKuX,EAG3B,OAAOD,IAGFpB,EAAAnb,UAAA+b,QAAP,SAAezU,GAQb,WARa,KAAAA,MAAaC,EAAID,SAE9B9I,KAAKsD,OAAStD,KAAKoJ,KAAKvB,KAAKzF,EAAGU,IAAI,GACpC9C,KAAKie,YACLje,KAAKke,eAAepV,GACpB9I,KAAKme,mBACLne,KAAK4d,gBAEE5d,MAGF2c,EAAAnb,UAAA4c,YAAP,WAKE,MAHApe,MAAKqd,OAAO7W,MAAQxG,KAAK8c,KAAO9c,KAAKwG,MAAM0R,cAAgBlY,KAAKwG,MAChExG,KAAKqd,OAAO5W,IAAMzG,KAAK8c,KAAO9c,KAAKyG,IAAI2R,YAAcpY,KAAKyG,IAEnDzG,MAGF2c,EAAAnb,UAAAyc,UAAP,WAEEje,KAAKoe,aAQL,KAAK,GANDvW,GAAyB7H,KAAK6H,KAC9BwV,EAAkBrd,KAAKqd,OACvBrB,EAAeqB,EAAO7W,MACtBsB,EAAsBuV,EAAOxV,KAAKzF,EAAGU,IACrCub,EAAgBnc,KAAKoH,IAAKtJ,KAAK+c,YAAajV,GAEvCxH,EAAI,EAAGA,EAAI+d,EAAO/d,IAC3B,CACE,GAAIsG,GAAsBiB,EAAMvH,EAE3BsG,IAAQA,EAAIE,QAASkV,KAExBpV,EAAM,GAAIkU,GAAgBkB,EAAQ9H,MAE9B5T,EAAIuH,EAAKvE,OAEXuE,EAAKyW,OAAQhe,EAAG,EAAGsG,GAInBiB,EAAKsF,KAAMvG,IAIfA,EAAIiV,WAAa7b,KAAKoJ,KAAKzC,SAAUC,GAErCoV,EAAUA,EAAQjP,OAQpB,MALIlF,GAAKvE,OAAS+a,GAEhBxW,EAAKyW,OAAQD,EAAOxW,EAAKvE,OAAS+a,GAG7Bre,MAGF2c,EAAAnb,UAAA0c,eAAP,SAAsBpV,GAEpB,WAFoB,KAAAA,MAAaC,EAAID,SAE9B9I,KAAKgN,YAAY,SAAArM,GAEtBA,EAAEob,cAAcjT,MAIb6T,EAAAnb,UAAA2c,iBAAP,cAAAlD,GAAAjb,IAEE,OAAOA,MAAKgN,YAAY,SAAArM,GAElBsa,EAAKkC,UAEPxc,EAAEsb,eAAgBhB,EAAKkC,WAIvBxc,EAAEwb,mBAKDQ,EAAAnb,UAAAoc,cAAP,cAAA3C,GAAAjb,IAEE,OAAOA,MAAKgN,YAAY,SAAArM,IAElBA,EAAEkb,YAAcZ,EAAKiC,iBAEvBvc,EAAEmb,OAASb,EAAKsD,aAAa5d,EAAGsa,EAAKgC,UAAWhC,EAAK+B,kBAKpDL,EAAAnb,UAAAwL,YAAP,SAAmBwR,GAIjB,IAAK,GAFD3W,GAAyB7H,KAAK6H,KAEzBvH,EAAI,EAAGA,EAAIuH,EAAKvE,OAAQhD,IAE/Bke,EAAU3W,EAAMvH,GAGlB,OAAON,OAGF2c,EAAAnb,UAAA+c,aAAP,SAAoB3X,EAAU6X,EAA0BC,OAA1B,KAAAD,OAAA,OAA0B,KAAAC,OAAA,EAKtD,KAAK,GAHD5C,MACA6C,EAAiC3e,KAAKod,UAEjCwB,EAAa,EAAGA,EAAaD,EAAQrb,OAAQsb,IACtD,CACE,GAAIxN,GAA6BuN,EAASC,GACtChU,EAAqBwG,EAAMxG,SAC3BiU,EAAWzN,EAAMyC,MACjBiL,EAAkBF,EAAara,EAAU2B,kBAE7C,IAAKwY,GAAU9T,EAAS8B,UAAU9F,KAAW8X,GAAU9T,EAAS/D,WAAWD,GAEzE,GAAI6X,EAMF,IAAK,GAJD/T,GAAmBgU,EACrBtN,EAAMxG,SAASoD,aAAapH,GAC5BwK,EAAMxG,SAAS4D,WAAW5H,GAEnBmY,EAAY,EAAGA,EAAYrU,EAAMpH,OAAQyb,IAEhDjD,EAAO3O,KAAK,GAAIiP,GAAiB0C,EAAUC,EAAWF,EAAOjU,EAAUF,EAAOqU,GAAanY,QAI/F,CACE,GAAIoY,GAAgB5N,EAAMxG,SAAS2D,YAAY3H,EAE3CoY,IAEFlD,EAAO3O,KAAK,GAAIiP,GAAiB0C,EAASD,EAAOjU,EAAUoU,EAAMpY,KAMzE,MAAOkV,IAGFa,EAAAnb,UAAAyd,aAAP,SAAoBhc,GAElB,IAAqB,GAAA2K,GAAA,EAAAC,EAAA7N,KAAKod,UAALxP,EAAAC,EAAAvK,OAAAsK,IAAc,CAA9B,GAAIhD,GAAQiD,EAAAD,EAEf,IAAIhD,IAAa3H,GAAS2H,EAASA,WAAa3H,GAAS2H,EAASiJ,QAAU5Q,EAE1E,MAAO2H,GAIX,MAAO,OAGF+R,EAAAnb,UAAAgc,gBAAP,SAAuBJ,EAAmD8B,GAExE,OAFqB,KAAA9B,MAAA,UAAmD,KAAA8B,OAAA,GAEpE9B,EAEF,IAAqB,GAAAxP,GAAA,EAAAuR,EAAA/B,EAAAxP,EAAAuR,EAAA7b,OAAAsK,IAAS,CAAzB,GAAIhD,GAAQuU,EAAAvR,EAEf5N,MAAKof,eAAgBxU,GAAU,OAKjC5K,MAAKod,YAOP,OAJK8B,IAEHlf,KAAK4d,gBAEA5d,MAGF2c,EAAAnb,UAAA4d,eAAP,SAAsBxU,EAAyCsU,OAAA,KAAAA,OAAA,EAE7D,IAAIG,GAAQrf,KAAKif,aAAarU,EAW9B,OATIyU,KAEFrf,KAAKod,UAAUkB,OAAQte,KAAKod,UAAUkC,QAAQD,GAAQ,GAEjDH,GAEHlf,KAAK4d,iBAGF5d,MAGF2c,EAAAnb,UAAA+d,YAAP,SAAmB3U,EAAoC4U,EAAkCN,OAAlC,KAAAM,OAAA,OAAkC,KAAAN,OAAA,EAEvF,IAAIO,GAAS9U,EAAMiJ,iBAAiBhJ,EAEpC,KAAK4U,EACL,CAGE,GAFexf,KAAKif,aAAaQ,GAI/B,MAAOzf,MAWX,MAPAA,MAAKod,UAAUjQ,KAAKsS,GAEfP,GAEHlf,KAAK4d,gBAGA5d,MAGF2c,EAAAnb,UAAAic,aAAP,SAAoBL,EAAuCoC,EAAkCN,OAAlC,KAAAM,OAAA,OAAkC,KAAAN,OAAA,EAE3F,KAAqB,GAAAtR,GAAA,EAAA8R,EAAAtC,EAAAxP,EAAA8R,EAAApc,OAAAsK,IAAS,CAAzB,GAAIhD,GAAQ8U,EAAA9R,EAEf5N,MAAKuf,YAAY3U,EAAU4U,GAAiB,GAQ9C,MALKN,IAEHlf,KAAK4d,gBAGA5d,MAGF2c,EAAAnb,UAAAme,OAAP,SAAcnZ,EAAYC,GAKxB,MAHAzG,MAAKmd,UAAY1W,EAAM,GAAIH,GAASE,EAAOC,GAAQH,EAAQmD,MAAOjD,GAClExG,KAAKme,mBAEEne,MAGF2c,EAAAnb,UAAAoe,SAAP,WAKE,MAHA5f,MAAKmd,UAAY,KACjBnd,KAAKme,mBAEEne,MAGF2c,EAAAnb,UAAAqe,KAAP,SAAYC,GAMV,WANU,KAAAA,MAAe9f,KAAKsR,MAE9BtR,KAAKwG,MAAQxG,KAAK4c,UAAW5c,KAAKwG,MAAOsZ,GACzC9f,KAAKyG,IAAMzG,KAAK6c,QAAS7c,KAAKyG,IAAKqZ,GACnC9f,KAAKud,UAEEvd,MAGF2c,EAAAnb,UAAAuL,KAAP,SAAY+S,GAEV,WAFU,KAAAA,MAAe9f,KAAKsR,MAEvBtR,KAAK6f,KAAMC,IAGbnD,EAAAnb,UAAAmL,KAAP,SAAYmT,GAEV,WAFU,KAAAA,MAAe9f,KAAKsR,MAEvBtR,KAAK6f,MAAOC,IAGPnD,EAAA9U,KAAd,SAAsBA,EAAkBkY,EAA2BC,EAAwB/c,OAArE,KAAA4E,MAAA,OAAkB,KAAAkY,MAAchX,EAAID,aAAS,KAAAkX,MAAA,MAEjE,IAAIxZ,GAAauZ,EAAOvZ,QAAQsP,cAAe5T,KAAKK,MAAOsF,EAAOmY,IAC9DvZ,EAAWD,EAAMsP,aAAcjO,EAAO,GAAIpB,MAC1CwZ,EAAuB,SAACrZ,EAAKgP,GAAW,MAAAhP,GAAIkP,aAAaF,GAE7D,OAAO,IAAI+G,GAASnW,EAAOC,EAAKL,EAAMsD,IAAK7B,EAAMoY,EAAOA,EAAOhd,IAGnD0Z,EAAA5U,MAAd,SAAuBA,EAAmBgY,EAA2BC,EAAwB/c,OAAtE,KAAA8E,MAAA,OAAmB,KAAAgY,MAAchX,EAAID,aAAS,KAAAkX,MAAA,MAEnE,IAAIxZ,GAAauZ,EAAOvZ,QAAQ0R,cAAcpB,eAAgB5U,KAAKK,MAAOwF,EAAQiY,IAC9EvZ,EAAWD,EAAMsQ,cAAe/O,EAAQ,GAAIqQ,YAC5C6H,EAAuB,SAACrZ,EAAKgP,GAAW,MAAAhP,GAAIkQ,cAAclB,GAE9D,OAAO,IAAI+G,GAASnW,EAAOC,EAAKL,EAAMwD,KAAM7B,EAAOkY,EAAOA,EAAOhd,IAGrD0Z,EAAA1U,OAAd,SAAwBA,EAAoB8X,EAA2BC,EAAwB/c,OAAvE,KAAAgF,MAAA,OAAoB,KAAA8X,MAAchX,EAAID,aAAS,KAAAkX,MAAA,WAAwB,KAAA/c,OAA2B6Z,MAAM,GAE9H,IAAItW,GAAauZ,EAAOvZ,QAAQ8R,eAAenC,gBAAiBjU,KAAKK,MAAO0F,EAAS+X,IACjFvZ,EAAWD,EAAM2P,eAAgBlO,EAAS,GAAIuQ,aAC9CoE,EAA2B,SAAChW,EAAKgP,GAAW,MAAAhP,GAAIuP,eAAeP,IAC/DiH,EAAyB,SAACjW,EAAKgP,GAAW,MAAAhP,GAAI0R,eAAenC,eAAeP,GAAQ4C,aAExF,OAAO,IAAImE,GAASnW,EAAOC,EAAKL,EAAMyD,MAAO5B,EAAQ2U,EAAWC,EAAS5Z,IAG7D0Z,EAAAxU,MAAd,SAAuBA,EAAmB4X,EAA2BC,EAAwB/c,OAAtE,KAAAkF,MAAA,OAAmB,KAAA4X,MAAchX,EAAID,aAAS,KAAAkX,MAAA,WAAwB,KAAA/c,OAA2B6Z,MAAM,GAE5H,IAAItW,GAAauZ,EAAOvZ,QAAQ8R,eAAenC,gBAAiBjU,KAAKK,MAAO4F,EAAQ6X,IAChFvZ,EAAWD,EAAM2P,eAAgBhO,EAAQ,GAAI0Q,YAC7CoH,EAAuB,SAACrZ,EAAKgP,GAAW,MAAAhP,GAAIsQ,cAActB,GAE9D,OAAO,IAAI+G,GAASnW,EAAOC,EAAKL,EAAM0D,KAAM3B,EAAO8X,EAAOA,EAAOhd,IAIrE0Z,KC9hBAuD,EAAA,mBAAAA,MA+BA,MA5BgBA,GAAAC,QAAkB,EAClBD,EAAAE,SAAmB,EACnBF,EAAAG,MAAgB,EAChBH,EAAAI,MAAgB,EAChBJ,EAAAK,IAAc,EACdL,EAAAM,KAAe,EACfN,EAAAO,KAAe,EACfP,EAAAQ,OAAiB,EACjBR,EAAAS,UAAoB,EACpBT,EAAAU,QAAkB,EAClBV,EAAAW,SAAmB,GACnBX,EAAAY,SAAmB,GAEnBZ,EAAAa,MACZb,EAAMC,QACND,EAAME,SACNF,EAAMG,MACNH,EAAMI,MACNJ,EAAMK,IACNL,EAAMM,KACNN,EAAMO,KACNP,EAAMQ,OACNR,EAAMS,UACNT,EAAMU,QACNV,EAAMW,SACNX,EAAMY,UAGVZ,KC9BAc,EAAA,mBAAAA,MAkCA,MA/BgBA,GAAAC,OAAiB,EACjBD,EAAAE,OAAiB,EACjBF,EAAAG,QAAkB,EAClBH,EAAAI,UAAoB,EACpBJ,EAAAK,SAAmB,EACnBL,EAAAM,OAAiB,EACjBN,EAAAO,SAAmB,EAEnBP,EAAAD,MACZC,EAAQC,OACRD,EAAQE,OACRF,EAAQG,QACRH,EAAQI,UACRJ,EAAQK,SACRL,EAAQM,OACRN,EAAQO,UAGIP,EAAApX,MACZoX,EAAQE,OACRF,EAAQG,QACRH,EAAQI,UACRJ,EAAQK,SACRL,EAAQM,QAGIN,EAAAQ,MACZR,EAAQO,SACRP,EAAQC,QAGZD,KTQAS,EAAA,WAYE,QAAAC,GAAmB9gB,EAAc+gB,EAAiBtS,EAA2BuS,GAE3E5hB,KAAKY,KAAOA,EACZZ,KAAK2hB,OAASA,EACd3hB,KAAKqP,SAAWA,EAChBrP,KAAK4hB,MAAQA,EAkJjB,MA/ISF,GAAAlgB,UAAA0Z,MAAP,SAAajY,EAAsB2D,GAEjC,IAAiB,GAAAgH,GAAA,EAAAC,EAAA6T,EAAQG,MAARjU,EAAAC,EAAAvK,OAAAsK,IAAa,CAAzB,GAAIkU,GAAIjU,EAAAD,GAEPmU,EAAO/hB,KAAK4hB,MAAOE,EAGV,KAATC,IAEF9e,EAAO6e,IAAUlb,EAAKkb,KAIpB/e,EAAGC,QAAQ+e,KAEb9e,EAAO6e,GAASC,GAIbhf,EAAGW,UAAUqe,UAET9e,GAAO6e,GAIlB,MAAO7e,IAGFye,EAAAlgB,UAAAwgB,QAAP,SAAe/e,EAAsBgf,GAInC,IAAiB,GAFbC,GAAmBnf,EAAGW,UAAWue,GAEpBrU,EAAA,EAAAC,EAAA6T,EAAQG,MAARjU,EAAAC,EAAAvK,OAAAsK,IAAa,CAAzB,GAAIkU,GAAIjU,EAAAD,GAEPmU,EAAO/hB,KAAK4hB,MAAOE,GACnBK,EAAOlf,EAAO6e,EAGlB,KAAa,IAATC,EAAJ,CAMA,IAAa,IAATA,IAAkBI,EAEpB,OAAO,CAIT,KAAKpf,EAAGW,UAAUqe,IAASI,EAEzB,OAAO,CAIT,IAAIpf,EAAGS,SAASue,GAChB,CACE,IAAIhf,EAAGC,QAAQmf,IAASA,EAAK7e,SAAWye,EAStC,OAAO,CAPP,IAAIG,IAAoD,IAAzCC,EAAK7C,QAAS2C,EAAaH,IAExC,OAAO,EAUb,GAAI/e,EAAGC,QAAQ+e,GACf,CACE,IAAKhf,EAAGC,QAAQmf,GAEd,OAAO,CAGT,IAAIJ,EAAKze,SAAW6e,EAAK7e,OAEvB,OAAO,CAGT,KAAK,GAAIhD,GAAI,EAAGA,EAAIyhB,EAAKze,OAAQhD,IAE/B,GAAIyhB,EAAMzhB,KAAQ6hB,EAAM7hB,GAEtB,OAAO,CAIX,IAAI4hB,IAAoD,IAAzCH,EAAKzC,QAAS2C,EAAaH,IAExC,OAAO,EAKX,GAAI/e,EAAGU,SAASse,GAChB,CACE,IAAKhf,EAAGU,SAAS0e,GAEf,OAAO,CAGT,IAAIC,GAAaL,EAAKzR,QAAU,CAGhC,KAFiB6R,EAAK7R,QAAU,KAEb8R,GAAcD,EAAKve,QAAUme,EAAKne,MAEnD,OAAO,CAGT,IAAIse,GAAYD,EAAaH,GAASC,EAAKne,QAAWwe,EAEpD,OAAO,IAKb,OAAO,GAGKV,EAAAW,SAAd,SAAuBzhB,GAErB,MAAO0hB,GAAY1hB,IAGP8gB,EAAAa,UAAd,SAAwBtf,EAAsBuf,EAA4BP,OAA5B,KAAAO,OAAA,EAE5C,KAAoB,GAAA5U,GAAA,EAAA6U,EAAAC,EAAA9U,EAAA6U,EAAAnf,OAAAsK,IAAQ,CAAvB,GAAImG,GAAO0O,EAAA7U,EAEd,KAAKmG,EAAQ4N,SAAWa,IAAezO,EAAQiO,QAAS/e,EAAOgf,GAE7D,MAAOlO,GAIX,MAAO,OA5JK2N,EAAAG,OACZ,YAAa,aAAc,YAAa,QAAS,OAAQ,OAAQ,aAAc,iBAAkB,iBAAkB,cAAe,kBAAmB,mBA+JzJH,KAEWgB,GACT,GAAIjB,GACF,QAAQ,EACR,SAAC7a,GAAa,0BAEZ+C,KAAM,EACNuC,MAAO,EACPF,WAAY,IAGhB,GAAIyV,GACF,SAAS,EACT,SAAC7a,GAAa,mBAKhB,GAAI6a,GACF,UAAU,EACV,SAAC7a,GAAc,mBAAeA,EAAIsC,OAAO,UAEvCX,UAAW,IAGf,GAAIkZ,GACF,eAAe,EACf,SAAC7a,GAAa,wBAAoBmD,EAAO6F,MAAMhJ,EAAI4F,gBAAkB,GAAK,IAAM5F,EAAIsC,OAAO,UAEzFX,UAAW,EACXiE,gBAAiB,IAGrB,GAAIiV,GACF,YAAY,EACZ,SAAC7a,GAAa,qBAAiBA,EAAIsC,OAAO,aAExCgD,MAAO,EACPF,WAAY,IAGhB,GAAIyV,GACF,qBAAqB,EACrB,SAAC7a,GAAa,yBAAqBmD,EAAO6F,MAAMhJ,EAAI4F,gBAAkB,GAAK,IAAM5F,EAAIsC,OAAO,QAAU,OAAStC,EAAIsC,OAAO,UAExHgD,MAAO,EACP3D,UAAW,EACXiE,gBAAiB,IAGrB,GAAIiV,GACF,WAAW,EACX,SAAC7a,GAAa,2CAEZ2B,WAAYyY,EAAQE,OAAQF,EAAQG,QAASH,EAAQI,UAAWJ,EAAQK,SAAUL,EAAQM,UAG9F,GAAIG,GACF,WAAW,EACX,SAAC7a,GAAa,wBAAoBA,EAAIsC,OAAO,MAAQ,SAEnD8C,WAAY,IAGhB,GAAIyV,GACF,UAAU,EACV,SAAC7a,GAAa,oBAEZ2B,WAAW,EACXyD,YAAY,EACZC,WAAW,EACXC,OAAO,EACPC,MAAM,EACNxC,MAAM,EACNyC,YAAY,EACZC,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAa,EACbC,iBAAiB,EACjBC,iBAAiB,KAKZ6V,KAESK,EAAA,EAAAC,EAAAF,EAAAC,EAAAC,EAAAtf,OAAAqf,IAAQ,CAAvB,GAAIE,GAAOD,EAAAD,EAEdL,GAAYO,EAAQjiB,MAASiiB,EP63DA1iB,EAAoBQ,EAAEiB,EAAqB,cAAe,WAAa,MAAOkZ,KAC9E3a,EAAoBQ,EAAEiB,EAAqB,gBAAiB,WAAa,MAAOwa,KAChFjc,EAAoBQ,EAAEiB,EAAqB,WAAY,WAAa,MAAO8a,KAC3Evc,EAAoBQ,EAAEiB,EAAqB,YAAa,WAAa,MAAO2C,KAC5EpE,EAAoBQ,EAAEiB,EAAqB,MAAO,WAAa,MAAOmH,KACtE5I,EAAoBQ,EAAEiB,EAAqB,UAAW,WAAa,MAAO0E,KAC1EnG,EAAoBQ,EAAEiB,EAAqB,YAAa,WAAa,MAAOmB,KAC5E5C,EAAoBQ,EAAEiB,EAAqB,QAAS,WAAa,MAAOse,KACxE/f,EAAoBQ,EAAEiB,EAAqB,KAAM,WAAa,MAAOQ,KACrEjC,EAAoBQ,EAAEiB,EAAqB,UAAW,WAAa,MAAOC,KAC1E1B,EAAoBQ,EAAEiB,EAAqB,QAAS,WAAa,MAAO+I,KACxExK,EAAoBQ,EAAEiB,EAAqB,UAAW,WAAa,MAAO6f,KAC1EthB,EAAoBQ,EAAEiB,EAAqB,WAAY,WAAa,MAAO8gB,KAC3EviB,EAAoBQ,EAAEiB,EAAqB,aAAc,WAAa,MAAO0gB,KAC7EniB,EAAoBQ,EAAEiB,EAAqB,WAAY,WAAa,MAAO2I,KAC3EpK,EAAoBQ,EAAEiB,EAAqB,SAAU,WAAa,MAAOmI,KACzE5J,EAAoBQ,EAAEiB,EAAqB,OAAQ,WAAa,MAAO8O,KACvEvQ,EAAoBQ,EAAEiB,EAAqB,QAAS,WAAa,MAAOwE,KACxEjG,EAAoBQ,EAAEiB,EAAqB,UAAW,WAAa,MAAOof","file":"dayspan.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ds\", [\"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ds\"] = factory(require(\"moment\"));\n\telse\n\t\troot[\"ds\"] = factory(root[\"moment\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ds\", [\"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ds\"] = factory(require(\"moment\"));\n\telse\n\t\troot[\"ds\"] = factory(root[\"moment\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./src/Functions.ts\n\r\n/**\r\n * The class which contains commonly used functions by the library. These\r\n * functions and variables exist in a class so they may be overridden if\r\n * desired.\r\n */\r\nvar Functions = (function () {\r\n    function Functions() {\r\n    }\r\n    /**\r\n     * Determines whether the given input is an array.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is an array, otherwise false.\r\n     */\r\n    Functions.isArray = function (input) {\r\n        return input instanceof Array;\r\n    };\r\n    Functions.isArrayEquals = function (x, y) {\r\n        if (x === y)\r\n            return true;\r\n        if (x.length !== y.length)\r\n            return false;\r\n        for (var i = 0; i < x.length; i++) {\r\n            if (x[i] !== y[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Determines whether the given input is a string.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is a string, otherwise false.\r\n     */\r\n    Functions.isString = function (input) {\r\n        return typeof (input) === 'string';\r\n    };\r\n    Functions.isNumber = function (input) {\r\n        return isFinite(input);\r\n    };\r\n    Functions.isObject = function (input) {\r\n        return !this.isArray(input) && typeof (input) === 'object';\r\n    };\r\n    /**\r\n     * Determines whether the given input is defined.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is defined, otherwise false.\r\n     */\r\n    Functions.isDefined = function (input) {\r\n        return typeof (input) !== 'undefined';\r\n    };\r\n    Functions.isFrequencyValueEvery = function (input) {\r\n        return this.isObject(input) && this.isNumber(input.every);\r\n    };\r\n    Functions.isFrequencyValueOneOf = function (input) {\r\n        return this.isArray(input) && input.length > 0;\r\n    };\r\n    /**\r\n     * Returns the first argument which is defined.\r\n     *\r\n     * @param a The first argument to look at.\r\n     * @param b The second argument to look at.\r\n     * @return The first defined argument.\r\n     * @see [[Functions.isDefined]]\r\n     */\r\n    Functions.coalesce = function (a, b, c) {\r\n        return this.isDefined(a) ? a : (this.isDefined(b) ? b : c);\r\n    };\r\n    Functions.pad = function (x, length, padding, before) {\r\n        while (x.length < length) {\r\n            before ? x = padding + x : x = x + padding;\r\n        }\r\n        return x;\r\n    };\r\n    Functions.padNumber = function (x, length, first) {\r\n        if (first === void 0) { first = length; }\r\n        return this.pad(x + '', length, '0', true).substring(0, first);\r\n    };\r\n    return Functions;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Constants.ts\n\r\nvar Constants = (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.MILLIS_IN_SECOND = 1000;\r\n    Constants.MILLIS_IN_MINUTE = 1000 * 60;\r\n    Constants.MILLIS_IN_HOUR = 1000 * 60 * 60;\r\n    Constants.MILLIS_IN_DAY = 1000 * 60 * 60 * 24;\r\n    Constants.MILLIS_IN_WEEK = 1000 * 60 * 60 * 24 * 7;\r\n    Constants.DAYS_IN_WEEK = 7;\r\n    Constants.MONTHS_IN_YEAR = 12;\r\n    Constants.HOURS_IN_DAY = 24;\r\n    Constants.MONTH_MIN = 0;\r\n    Constants.MONTH_MAX = 11;\r\n    Constants.DAY_MIN = 1;\r\n    Constants.DAY_MAX = 31;\r\n    Constants.HOUR_MIN = 0;\r\n    Constants.HOUR_MAX = 23;\r\n    Constants.MINUTE_MIN = 0;\r\n    Constants.MINUTE_MAX = 59;\r\n    Constants.SECOND_MIN = 0;\r\n    Constants.SECOND_MAX = 59;\r\n    Constants.MILLIS_MIN = 0;\r\n    Constants.MILLIS_MAX = 999;\r\n    Constants.WEEKDAY_MIN = 0;\r\n    Constants.WEEKDAY_MAX = 6;\r\n    Constants.START_NONE = 0;\r\n    Constants.END_NONE = 0;\r\n    Constants.DURATION_NONE = 0;\r\n    Constants.DURATION_DEFAULT_UNIT = 'minutes';\r\n    Constants.MAX_EVENTS_PER_DAY = 24;\r\n    Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY = 4; // Thursday by default\r\n    return Constants;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Op.ts\n\r\nvar Op;\r\n(function (Op) {\r\n    Op[Op[\"NONE\"] = 0] = \"NONE\";\r\n    Op[Op[\"FLOOR\"] = 1] = \"FLOOR\";\r\n    Op[Op[\"CEIL\"] = 2] = \"CEIL\";\r\n    Op[Op[\"ROUND\"] = 3] = \"ROUND\";\r\n    Op[Op[\"TRUNCATE\"] = 4] = \"TRUNCATE\";\r\n    Op[Op[\"UP\"] = 5] = \"UP\";\r\n    Op[Op[\"DOWN\"] = 6] = \"DOWN\";\r\n})(Op = Op || (Op = {}));\r\nfunction operate(value, op, absolute) {\r\n    if (absolute === void 0) { absolute = false; }\r\n    if (isFinite(value)) {\r\n        if (absolute) {\r\n            value = Math.abs(value);\r\n        }\r\n        switch (op) {\r\n            case Op.NONE:\r\n                return value;\r\n            case Op.FLOOR:\r\n                return Math.floor(value);\r\n            case Op.CEIL:\r\n                return Math.ceil(value);\r\n            case Op.ROUND:\r\n                return Math.round(value);\r\n            case Op.TRUNCATE:\r\n            case Op.DOWN:\r\n                return value < 0 ? Math.ceil(value) : Math.floor(value);\r\n            case Op.UP:\r\n                return value < 0 ? Math.floor(value) : Math.ceil(value);\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\n// CONCATENATED MODULE: ./src/Units.ts\n\r\nvar Units;\r\n(function (Units) {\r\n    Units[Units[\"DAY\"] = 0] = \"DAY\";\r\n    Units[Units[\"WEEK\"] = 1] = \"WEEK\";\r\n    Units[Units[\"MONTH\"] = 2] = \"MONTH\";\r\n    Units[Units[\"YEAR\"] = 3] = \"YEAR\";\r\n})(Units = Units || (Units = {}));\r\n\n// CONCATENATED MODULE: ./src/DaySpan.ts\n\r\n\r\n\r\n\r\nvar DaySpan_DaySpan = (function () {\r\n    function DaySpan(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    Object.defineProperty(DaySpan.prototype, \"isPoint\", {\r\n        get: function () {\r\n            return this.start.time === this.end.time;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DaySpan.prototype.contains = function (day) {\r\n        return day.time >= this.start.time && day.time <= this.end.time;\r\n    };\r\n    DaySpan.prototype.matchesDay = function (day) {\r\n        return this.contains(day) || day.sameDay(this.start) || day.sameDay(this.end);\r\n    };\r\n    DaySpan.prototype.matchesWeek = function (day) {\r\n        return this.contains(day) || day.sameWeek(this.start) || day.sameWeek(this.end);\r\n    };\r\n    DaySpan.prototype.matchesMonth = function (day) {\r\n        return this.contains(day) || day.sameMonth(this.start) || day.sameMonth(this.end);\r\n    };\r\n    DaySpan.prototype.matchesYear = function (day) {\r\n        return this.contains(day) || day.sameYear(this.start) || day.sameYear(this.end);\r\n    };\r\n    DaySpan.prototype.millis = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.millisBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.seconds = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.secondsBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.minutes = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.minutesBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.hours = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.hoursBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.days = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.daysBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.weeks = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.weeksBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.months = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.monthsBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.years = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.yearsBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.summary = function (type, dayOfWeek, short, repeat, contextual, delimiter) {\r\n        if (dayOfWeek === void 0) { dayOfWeek = true; }\r\n        if (short === void 0) { short = false; }\r\n        if (repeat === void 0) { repeat = false; }\r\n        if (contextual === void 0) { contextual = true; }\r\n        if (delimiter === void 0) { delimiter = ' - '; }\r\n        var formats = DaySpan.SUMMARY_FORMATS[type];\r\n        var today = Day_Day.today();\r\n        var showStartYear = !contextual || !this.start.sameYear(today);\r\n        var showEndYear = !contextual || !this.end.sameYear(today);\r\n        var start = this.start.format(formats(short, dayOfWeek, showStartYear));\r\n        var end = this.end.format(formats(short, dayOfWeek, showEndYear));\r\n        var summary = start;\r\n        if (start !== end) {\r\n            if (!repeat) {\r\n                summary = this.start.format(formats(short, dayOfWeek, !this.start.sameYear(this.end)));\r\n            }\r\n            summary += delimiter;\r\n            summary += end;\r\n        }\r\n        else {\r\n            summary = start;\r\n        }\r\n        return summary;\r\n    };\r\n    DaySpan.prototype.intersects = function (span) {\r\n        return !(this.end.time < span.start.time ||\r\n            this.start.time > span.end.time);\r\n    };\r\n    DaySpan.prototype.intersection = function (span) {\r\n        var start = Math.max(this.start.time, span.start.time);\r\n        var end = Math.min(this.end.time, span.end.time);\r\n        return start >= end ? null : new DaySpan(Day_Day.unix(start), Day_Day.unix(end));\r\n    };\r\n    DaySpan.point = function (day) {\r\n        return new DaySpan(day, day);\r\n    };\r\n    DaySpan.SUMMARY_FORMATS = (DaySpan__a = {},\r\n        DaySpan__a[Units.DAY] = function (short, dayOfWeek, year) {\r\n            return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\r\n        },\r\n        DaySpan__a[Units.WEEK] = function (short, dayOfWeek, year) {\r\n            return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\r\n        },\r\n        DaySpan__a[Units.MONTH] = function (short, dayOfWeek, year) {\r\n            return (short ? 'MMM' : 'MMMM') + (year ? ' YYYY' : '');\r\n        },\r\n        DaySpan__a[Units.YEAR] = function (short, dayOfWeek, year) {\r\n            return (year ? 'YYYY' : '');\r\n        },\r\n        DaySpan__a);\r\n    return DaySpan;\r\n}());\r\n\r\nvar DaySpan__a;\r\n\n// CONCATENATED MODULE: ./src/Suffix.ts\n\r\nvar Suffix = (function () {\r\n    function Suffix() {\r\n    }\r\n    Object.defineProperty(Suffix, \"CACHE\", {\r\n        get: function () {\r\n            if (!this._CACHE) {\r\n                this._CACHE = [];\r\n                for (var i = 0; i < this._CACHE_SIZE; i++) {\r\n                    this._CACHE[i] = this.get(i, true);\r\n                }\r\n            }\r\n            return this._CACHE;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Suffix.determine = function (value) {\r\n        return value >= 11 && value <= 13 ? 'th' : this.MAP[value % this.MAP.length];\r\n    };\r\n    Suffix.get = function (value, append) {\r\n        if (append === void 0) { append = false; }\r\n        var suffix = this.determine(value);\r\n        return append ? value + suffix : suffix;\r\n    };\r\n    Suffix.MAP = [\r\n        'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'\r\n    ];\r\n    Suffix._CACHE_SIZE = 366;\r\n    return Suffix;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Schedule.ts\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// @ts-ignore\r\n\r\nvar Schedule_Schedule = (function () {\r\n    function Schedule(input) {\r\n        if (Functions.isDefined(input)) {\r\n            this.set(input);\r\n        }\r\n    }\r\n    Object.defineProperty(Schedule.prototype, \"lastTime\", {\r\n        get: function () {\r\n            return this.times[this.times.length - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Schedule.prototype.set = function (input) {\r\n        Parse_Parse.schedule(input, this);\r\n        return this;\r\n    };\r\n    Schedule.prototype.updateDurationInDays = function () {\r\n        this.durationInDays = !this.lastTime ? 0 : Math.max(0, Math.ceil(__WEBPACK_IMPORTED_MODULE_6_moment__[\"duration\"](this.lastTime.toMilliseconds(), 'milliseconds')\r\n            .add(this.duration, this.durationUnit)\r\n            .subtract(1, 'day')\r\n            .asDays()));\r\n        return this;\r\n    };\r\n    Schedule.prototype.matchesSpan = function (day) {\r\n        return (this.start === null || day.isSameOrAfter(this.start)) &&\r\n            (this.end === null || day.isBefore(this.endWithDuration));\r\n    };\r\n    Schedule.prototype.matchesRange = function (start, end) {\r\n        return (this.start === null || start.isSameOrBefore(this.start)) &&\r\n            (this.end === null || end.isBefore(this.endWithDuration));\r\n    };\r\n    Schedule.prototype.isExcluded = function (day) {\r\n        return !!this.exclude[day.dayIdentifier];\r\n    };\r\n    Schedule.prototype.isIncluded = function (day) {\r\n        return !this.exclude[day.dayIdentifier];\r\n    };\r\n    Schedule.prototype.matchesDay = function (day) {\r\n        return this.isIncluded(day) &&\r\n            this.matchesSpan(day) &&\r\n            this.dayOfWeek(day.dayOfWeek) &&\r\n            this.dayOfMonth(day.dayOfMonth) &&\r\n            this.dayOfYear(day.dayOfYear) &&\r\n            this.year(day.year) &&\r\n            this.month(day.month) &&\r\n            this.week(day.week) &&\r\n            this.weekOfYear(day.weekOfYear) &&\r\n            this.weekspanOfYear(day.weekspanOfYear) &&\r\n            this.fullWeekOfYear(day.fullWeekOfYear) &&\r\n            this.weekOfMonth(day.weekOfMonth) &&\r\n            this.weekspanOfMonth(day.weekspanOfMonth) &&\r\n            this.fullWeekOfMonth(day.fullWeekOfMonth);\r\n    };\r\n    /**\r\n     * Determines if the given day is covered by this schedule. A schedule can\r\n     * specify events that span multiple days - so even though the day does not\r\n     * match the starting day of a span - it can be a day that is within the\r\n     * schedule.\r\n     *\r\n     * @param day The day to test.\r\n     * @param\r\n     */\r\n    Schedule.prototype.coversDay = function (day) {\r\n        var before = this.durationInDays;\r\n        while (before >= 0) {\r\n            if (this.matchesDay(day)) {\r\n                return true;\r\n            }\r\n            day = day.prev();\r\n            before--;\r\n        }\r\n        return false;\r\n    };\r\n    Schedule.prototype.nextDay = function (day, includeDay, lookAhead) {\r\n        if (includeDay === void 0) { includeDay = false; }\r\n        if (lookAhead === void 0) { lookAhead = 366; }\r\n        var next = null;\r\n        this.iterateDays(day, 1, true, function (d) { return next = d; }, includeDay, lookAhead);\r\n        return next;\r\n    };\r\n    Schedule.prototype.nextDays = function (day, max, includeDay, lookAhead) {\r\n        if (includeDay === void 0) { includeDay = false; }\r\n        if (lookAhead === void 0) { lookAhead = 366; }\r\n        var nexts = [];\r\n        this.iterateDays(day, max, true, function (d) { return nexts.push(d); }, includeDay, lookAhead);\r\n        return nexts;\r\n    };\r\n    Schedule.prototype.prevDay = function (day, includeDay, lookBack) {\r\n        if (includeDay === void 0) { includeDay = false; }\r\n        if (lookBack === void 0) { lookBack = 366; }\r\n        var prev = null;\r\n        this.iterateDays(day, 1, false, function (d) { return prev = d; }, includeDay, lookBack);\r\n        return prev;\r\n    };\r\n    Schedule.prototype.prevDays = function (day, max, includeDay, lookBack) {\r\n        if (includeDay === void 0) { includeDay = false; }\r\n        if (lookBack === void 0) { lookBack = 366; }\r\n        var prevs = [];\r\n        this.iterateDays(day, max, false, function (d) { return prevs.push(d); }, includeDay, lookBack);\r\n        return prevs;\r\n    };\r\n    Schedule.prototype.iterateDays = function (day, max, next, onDay, includeDay, lookup) {\r\n        if (includeDay === void 0) { includeDay = false; }\r\n        if (lookup === void 0) { lookup = 366; }\r\n        var iterated = 0;\r\n        for (var days = 0; days < lookup; days++) {\r\n            if (!includeDay || days > 0) {\r\n                day = next ? day.next() : day.prev();\r\n            }\r\n            if (this.matchesDay(day)) {\r\n                if (onDay(day) === false) {\r\n                    break;\r\n                }\r\n                if (++iterated >= max) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Schedule.prototype.matchesTime = function (day) {\r\n        if (!this.matchesDay(day)) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n            var time = _a[_i];\r\n            if (day.sameTime(time)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Schedule.prototype.isFullDay = function () {\r\n        return this.times.length === 0 || this.duration === Constants.DURATION_NONE;\r\n    };\r\n    Schedule.prototype.getSpansOver = function (day) {\r\n        var spans = [];\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            if (this.matchesDay(day)) {\r\n                spans.push(DaySpan_DaySpan.point(start));\r\n            }\r\n        }\r\n        else {\r\n            var behind = this.durationInDays;\r\n            while (behind >= 0) {\r\n                if (this.matchesDay(day)) {\r\n                    for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n                        var time = _a[_i];\r\n                        var hourStart = day.withTime(time);\r\n                        var hourEnd = hourStart.add(this.duration, this.durationUnit);\r\n                        var hourSpan = new DaySpan_DaySpan(hourStart, hourEnd);\r\n                        if (hourSpan.matchesDay(start)) {\r\n                            spans.push(hourSpan);\r\n                        }\r\n                    }\r\n                }\r\n                day = day.prev();\r\n                behind--;\r\n            }\r\n        }\r\n        return spans;\r\n    };\r\n    Schedule.prototype.getSpanOver = function (day) {\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            return DaySpan_DaySpan.point(start);\r\n        }\r\n        else {\r\n            var behind = this.durationInDays;\r\n            while (behind >= 0) {\r\n                if (this.matchesDay(day)) {\r\n                    return DaySpan_DaySpan.point(day);\r\n                }\r\n                day = day.prev();\r\n                behind--;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Schedule.prototype.getSpansOn = function (day, check) {\r\n        if (check === void 0) { check = false; }\r\n        var spans = [];\r\n        if (check && !this.matchesDay(day)) {\r\n            return spans;\r\n        }\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            spans.push(DaySpan_DaySpan.point(start));\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n                var time = _a[_i];\r\n                var hourStart = day.withTime(time);\r\n                var hourEnd = hourStart.add(this.duration, this.durationUnit);\r\n                var hourSpan = new DaySpan_DaySpan(hourStart, hourEnd);\r\n                spans.push(hourSpan);\r\n            }\r\n        }\r\n        return spans;\r\n    };\r\n    Schedule.prototype.getExclusions = function (returnDays) {\r\n        if (returnDays === void 0) { returnDays = true; }\r\n        var exclusions = [];\r\n        for (var dayIdentifierKey in this.exclude) {\r\n            var dayIdentifier = parseInt(dayIdentifierKey);\r\n            exclusions.push(returnDays ? Day_Day.fromDayIdentifier(dayIdentifier) : dayIdentifier);\r\n        }\r\n        return exclusions;\r\n    };\r\n    Schedule.prototype.toInput = function (returnDays, returnTimes, timeFormat) {\r\n        if (returnDays === void 0) { returnDays = false; }\r\n        if (returnTimes === void 0) { returnTimes = false; }\r\n        if (timeFormat === void 0) { timeFormat = ''; }\r\n        var out = {};\r\n        var exclusions = this.getExclusions(returnDays);\r\n        var times = [];\r\n        for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n            var time = _a[_i];\r\n            times.push(returnTimes ? time : (timeFormat ? time.format(timeFormat) : time.toString()));\r\n        }\r\n        if (this.start)\r\n            out.start = returnDays ? this.start : this.start.time;\r\n        if (this.end)\r\n            out.end = returnDays ? this.end : this.end.time;\r\n        if (this.duration !== Constants.DURATION_NONE)\r\n            out.duration = this.duration;\r\n        if (this.durationUnit !== Constants.DURATION_DEFAULT_UNIT)\r\n            out.durationUnit = this.durationUnit;\r\n        if (this.dayOfWeek.input)\r\n            out.dayOfWeek = this.dayOfWeek.input;\r\n        if (this.dayOfMonth.input)\r\n            out.dayOfMonth = this.dayOfMonth.input;\r\n        if (this.dayOfYear.input)\r\n            out.dayOfYear = this.dayOfYear.input;\r\n        if (this.month.input)\r\n            out.month = this.month.input;\r\n        if (this.week.input)\r\n            out.week = this.week.input;\r\n        if (this.weekOfYear.input)\r\n            out.weekOfYear = this.weekOfYear.input;\r\n        if (this.weekspanOfYear.input)\r\n            out.weekspanOfYear = this.weekspanOfYear.input;\r\n        if (this.fullWeekOfYear.input)\r\n            out.fullWeekOfYear = this.fullWeekOfYear.input;\r\n        if (this.weekOfMonth.input)\r\n            out.weekOfMonth = this.weekOfMonth.input;\r\n        if (this.weekspanOfMonth.input)\r\n            out.weekspanOfMonth = this.weekspanOfMonth.input;\r\n        if (this.fullWeekOfMonth.input)\r\n            out.fullWeekOfMonth = this.fullWeekOfMonth.input;\r\n        if (this.year.input)\r\n            out.year = this.year.input;\r\n        if (times.length)\r\n            out.times = times;\r\n        if (exclusions.length)\r\n            out.exclude = exclusions;\r\n        return out;\r\n    };\r\n    Schedule.prototype.describe = function (thing, includeRange, includeTimes, includeDuration, includeExcludes) {\r\n        if (thing === void 0) { thing = 'event'; }\r\n        if (includeRange === void 0) { includeRange = true; }\r\n        if (includeTimes === void 0) { includeTimes = true; }\r\n        if (includeDuration === void 0) { includeDuration = false; }\r\n        if (includeExcludes === void 0) { includeExcludes = false; }\r\n        var out = '';\r\n        if (includeRange) {\r\n            if (this.start) {\r\n                out += 'Starting on ' + this.start.format('dddd Do, YYYY');\r\n                if (this.end) {\r\n                    out += ' and ending on ' + this.end.format('dddd Do, YYYY');\r\n                }\r\n            }\r\n            else if (this.end) {\r\n                out += 'Up until ' + this.end.format('dddd Do, YYYY');\r\n            }\r\n        }\r\n        if (out) {\r\n            out += ' the ' + thing + ' will occur';\r\n        }\r\n        else {\r\n            out += 'The ' + thing + ' will occur';\r\n        }\r\n        out += this.describeRule(this.dayOfWeek.input, 'day of the week', function (x) { return __WEBPACK_IMPORTED_MODULE_6_moment__[\"weekdays\"]()[x]; }, 1, false);\r\n        out += this.describeRule(this.dayOfMonth.input, 'day of the month', function (x) { return Suffix.CACHE[x]; });\r\n        out += this.describeRule(this.dayOfYear.input, 'day of the year', function (x) { return Suffix.CACHE[x]; }, 1);\r\n        out += this.describeRule(this.month.input, 'month', function (x) { return __WEBPACK_IMPORTED_MODULE_6_moment__[\"months\"]()[x]; }, 0, false, ' in ');\r\n        out += this.describeRule(this.weekOfYear.input, 'week of the year', function (x) { return Suffix.CACHE[x]; });\r\n        out += this.describeRule(this.weekspanOfYear.input, 'weekspan of the year', function (x) { return Suffix.CACHE[x + 1]; }, 1);\r\n        out += this.describeRule(this.fullWeekOfYear.input, 'full week of the year', function (x) { return Suffix.CACHE[x]; });\r\n        out += this.describeRule(this.weekOfMonth.input, 'week of the month', function (x) { return Suffix.CACHE[x]; });\r\n        out += this.describeRule(this.fullWeekOfMonth.input, 'full week of the month', function (x) { return Suffix.CACHE[x]; });\r\n        out += this.describeRule(this.weekspanOfMonth.input, 'weekspan of the month', function (x) { return Suffix.CACHE[x + 1]; }, 1);\r\n        out += this.describeRule(this.year.input, 'year', function (x) { return x; }, 0, false, ' in ');\r\n        if (includeTimes && this.times.length) {\r\n            out += ' at ';\r\n            out += this.describeArray(this.times, function (x) { return x.format('hh:mm a'); });\r\n        }\r\n        if (includeDuration && this.duration !== Constants.DURATION_NONE) {\r\n            out += ' lasting ' + this.duration + ' ';\r\n            if (this.durationUnit) {\r\n                out += this.durationUnit + ' ';\r\n            }\r\n        }\r\n        if (includeExcludes) {\r\n            var excludes = this.getExclusions(true);\r\n            if (excludes.length) {\r\n                out += ' excluding ';\r\n                out += this.describeArray(excludes, function (x) { return x.format('MM/DD/YYYY'); });\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    Schedule.prototype.describeRule = function (value, unit, map, everyOffset, the, on, required) {\r\n        if (everyOffset === void 0) { everyOffset = 0; }\r\n        if (the === void 0) { the = true; }\r\n        if (on === void 0) { on = ' on '; }\r\n        if (required === void 0) { required = false; }\r\n        var out = '';\r\n        var suffix = the ? ' ' + unit : '';\r\n        if (Functions.isFrequencyValueEvery(value)) {\r\n            var valueEvery = value;\r\n            out += ' every ' + Suffix.CACHE[valueEvery.every] + ' ' + unit;\r\n            if (valueEvery.offset) {\r\n                out += ' starting at ' + map(valueEvery.offset + everyOffset) + suffix;\r\n            }\r\n        }\r\n        else if (Functions.isFrequencyValueOneOf(value)) {\r\n            var valueOne = value;\r\n            if (valueOne.length) {\r\n                out += on + (the ? 'the ' : '');\r\n                out += this.describeArray(valueOne, map);\r\n                out += suffix;\r\n            }\r\n        }\r\n        else if (required) {\r\n            out += on + 'any ' + unit;\r\n        }\r\n        return out;\r\n    };\r\n    Schedule.prototype.describeArray = function (array, map) {\r\n        var out = '';\r\n        var last = array.length - 1;\r\n        out += map(array[0]);\r\n        for (var i = 1; i < last; i++) {\r\n            out += ', ' + map(array[i]);\r\n        }\r\n        if (last > 0) {\r\n            out += ' and ' + map(array[last]);\r\n        }\r\n        return out;\r\n    };\r\n    return Schedule;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Time.ts\n\r\n\r\n\r\n\r\nvar Time_Time = (function () {\r\n    function Time(hour, minute, second, millisecond) {\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n        this.millisecond = millisecond;\r\n    }\r\n    Time.prototype.format = function (format) {\r\n        var formatterEntries = Time.FORMATTERS;\r\n        var out = '';\r\n        for (var i = 0; i < format.length; i++) {\r\n            var handled = false;\r\n            for (var k = 0; k < formatterEntries.length && !handled; k++) {\r\n                var entry = formatterEntries[k];\r\n                var part = format.substring(i, i + entry.size);\r\n                if (part.length === entry.size) {\r\n                    var formatter = entry.formats[part];\r\n                    if (formatter) {\r\n                        out += formatter(this);\r\n                        i += entry.size - 1;\r\n                        handled = true;\r\n                    }\r\n                }\r\n            }\r\n            if (!handled) {\r\n                out += format.charAt(i);\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    Time.prototype.toMilliseconds = function () {\r\n        return this.hour * Constants.MILLIS_IN_HOUR +\r\n            this.minute * Constants.MILLIS_IN_MINUTE +\r\n            this.second * Constants.MILLIS_IN_SECOND +\r\n            this.millisecond;\r\n    };\r\n    Time.prototype.toString = function () {\r\n        if (this.millisecond)\r\n            return this.format('HH:mm:ss.SSS');\r\n        if (this.second)\r\n            return this.format('HH:mm:ss');\r\n        if (this.minute)\r\n            return this.format('HH:mm');\r\n        return this.format('HH');\r\n    };\r\n    Time.prototype.toIdentifer = function () {\r\n        return this.hour +\r\n            this.minute * 100 +\r\n            this.second * 10000 +\r\n            this.millisecond * 10000000;\r\n    };\r\n    Time.prototype.toObject = function () {\r\n        var out = {\r\n            hour: this.hour\r\n        };\r\n        if (this.minute)\r\n            out.minute = this.minute;\r\n        if (this.second)\r\n            out.second = this.second;\r\n        if (this.millisecond)\r\n            out.millisecond = this.millisecond;\r\n        return out;\r\n    };\r\n    Time.parse = function (input) {\r\n        return Parse_Parse.time(input);\r\n    };\r\n    Time.fromString = function (time) {\r\n        var matches = this.REGEX.exec(time);\r\n        if (!matches) {\r\n            return null;\r\n        }\r\n        var h = parseInt(matches[1]) || 0;\r\n        var m = parseInt(matches[2]) || 0;\r\n        var s = parseInt(matches[3]) || 0;\r\n        var l = parseInt(matches[4]) || 0;\r\n        return this.build(h, m, s, l);\r\n    };\r\n    Time.fromIdentifier = function (time) {\r\n        var h = time % 100;\r\n        var m = Math.floor(time / 100) % 100;\r\n        var s = Math.floor(time / 10000) % 100;\r\n        var l = Math.floor(time / 10000000) % 1000;\r\n        return this.build(h, m, s, l);\r\n    };\r\n    Time.build = function (hour, minute, second, millisecond) {\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        return new Time(hour, minute, second, millisecond);\r\n    };\r\n    Time.REGEX = /^(\\d\\d?):?(\\d\\d)?:?(\\d\\d)?\\.?(\\d\\d\\d)?$/;\r\n    Time.FORMATTERS = [\r\n        {\r\n            size: 3,\r\n            formats: {\r\n                SSS: function (t) { return Functions.padNumber(t.millisecond, 3); }\r\n            }\r\n        },\r\n        {\r\n            size: 2,\r\n            formats: {\r\n                HH: function (t) { return Functions.padNumber(t.hour, 2); },\r\n                hh: function (t) { return Functions.padNumber((t.hour % 12) || 12, 2); },\r\n                kk: function (t) { return Functions.padNumber(t.hour + 1, 2); },\r\n                mm: function (t) { return Functions.padNumber(t.minute, 2); },\r\n                ss: function (t) { return Functions.padNumber(t.second, 2); },\r\n                SS: function (t) { return Functions.padNumber(t.millisecond, 3, 2); }\r\n            }\r\n        },\r\n        {\r\n            size: 1,\r\n            formats: {\r\n                A: function (t) { return t.hour < 12 ? 'AM' : 'PM'; },\r\n                a: function (t) { return t.hour < 12 ? 'am' : 'pm'; },\r\n                H: function (t) { return t.hour + ''; },\r\n                h: function (t) { return ((t.hour % 12) || 12) + ''; },\r\n                k: function (t) { return (t.hour + 1) + ''; },\r\n                m: function (t) { return t.minute + ''; },\r\n                s: function (t) { return t.second + ''; },\r\n                S: function (t) { return Functions.padNumber(t.millisecond, 3, 1); }\r\n            }\r\n        }\r\n    ];\r\n    return Time;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Parse.ts\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The class which takes user input and parses it to specific structures.\r\n */\r\nvar Parse_Parse = (function () {\r\n    function Parse() {\r\n    }\r\n    Parse.frequency = function (input, otherwiseEvery, otherwiseOffset) {\r\n        if (otherwiseEvery === void 0) { otherwiseEvery = 1; }\r\n        if (otherwiseOffset === void 0) { otherwiseOffset = 0; }\r\n        var check = function (value) {\r\n            return value % otherwiseEvery === otherwiseOffset;\r\n        };\r\n        if (Functions.isFrequencyValueEvery(input)) {\r\n            var offset_1 = input.offset || 0;\r\n            var every_1 = input.every;\r\n            check = function (value) {\r\n                return value % every_1 === offset_1;\r\n            };\r\n        }\r\n        if (Functions.isFrequencyValueOneOf(input)) {\r\n            var map_1 = {};\r\n            for (var i = 0; i < input.length; i++) {\r\n                map_1[input[i]] = true;\r\n            }\r\n            check = function (value) {\r\n                return !!map_1[value];\r\n            };\r\n        }\r\n        check.input = input;\r\n        return check;\r\n    };\r\n    Parse.utc = function (input, otherwise) {\r\n        if (Functions.isNumber(input)) {\r\n            return input;\r\n        }\r\n        if (input instanceof Day_Day) {\r\n            return input.time;\r\n        }\r\n        return otherwise;\r\n    };\r\n    Parse.day = function (input) {\r\n        if (Functions.isNumber(input)) {\r\n            return Day_Day.unix(input);\r\n        }\r\n        else if (Functions.isString(input)) {\r\n            return Day_Day.parse(input);\r\n        }\r\n        else if (input instanceof Day_Day) {\r\n            return input;\r\n        }\r\n        else if (Functions.isArray(input)) {\r\n            return Day_Day.fromArray(input);\r\n        }\r\n        else if (Functions.isObject(input)) {\r\n            return Day_Day.fromObject(input);\r\n        }\r\n        else if (input === true) {\r\n            return Day_Day.today();\r\n        }\r\n        return null;\r\n    };\r\n    Parse.time = function (input) {\r\n        if (input instanceof Time_Time) {\r\n            return input;\r\n        }\r\n        if (Functions.isNumber(input)) {\r\n            return Time_Time.fromIdentifier(input);\r\n        }\r\n        if (Functions.isString(input)) {\r\n            return Time_Time.fromString(input);\r\n        }\r\n        if (Functions.isObject(input) && Functions.isNumber(input.hour)) {\r\n            return new Time_Time(input.hour, input.minute, input.second, input.millisecond);\r\n        }\r\n        return null;\r\n    };\r\n    Parse.times = function (input) {\r\n        var times = [];\r\n        if (Functions.isArray(input)) {\r\n            for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {\r\n                var timeInput = input_1[_i];\r\n                var time = this.time(timeInput);\r\n                if (time) {\r\n                    times.push(time);\r\n                }\r\n            }\r\n        }\r\n        return times;\r\n    };\r\n    Parse.exclusions = function (input) {\r\n        var exclusions = {};\r\n        if (Functions.isArray(input)) {\r\n            for (var _i = 0, input_2 = input; _i < input_2.length; _i++) {\r\n                var dayIdentifier = input_2[_i];\r\n                if (Functions.isNumber(dayIdentifier)) {\r\n                    exclusions[dayIdentifier] = true;\r\n                }\r\n                else {\r\n                    var day = this.day(dayIdentifier);\r\n                    if (day) {\r\n                        exclusions[day.dayIdentifier] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return exclusions;\r\n    };\r\n    Parse.schedule = function (input, out) {\r\n        if (out === void 0) { out = new Schedule_Schedule(); }\r\n        var on = this.day(input.on);\r\n        if (on) {\r\n            input.start = on.start();\r\n            input.end = on.end();\r\n            input.year = [on.year];\r\n            input.month = [on.month];\r\n            input.dayOfMonth = [on.dayOfMonth];\r\n        }\r\n        out.duration = Functions.coalesce(input.duration, Constants.DURATION_NONE);\r\n        out.durationUnit = Functions.coalesce(input.durationUnit, Constants.DURATION_DEFAULT_UNIT);\r\n        out.start = this.day(input.start);\r\n        out.end = this.day(input.end);\r\n        out.endWithDuration = out.end ? out.end.add(out.duration, out.durationUnit) : null;\r\n        out.dayOfWeek = this.frequency(input.dayOfWeek);\r\n        out.dayOfMonth = this.frequency(input.dayOfMonth);\r\n        out.dayOfYear = this.frequency(input.dayOfYear);\r\n        out.month = this.frequency(input.month);\r\n        out.week = this.frequency(input.week);\r\n        out.weekOfYear = this.frequency(input.weekOfYear);\r\n        out.weekspanOfYear = this.frequency(input.weekspanOfYear);\r\n        out.fullWeekOfYear = this.frequency(input.fullWeekOfYear);\r\n        out.weekOfMonth = this.frequency(input.weekOfMonth);\r\n        out.weekspanOfMonth = this.frequency(input.weekspanOfMonth);\r\n        out.fullWeekOfMonth = this.frequency(input.fullWeekOfMonth);\r\n        out.year = this.frequency(input.year);\r\n        out.times = this.times(input.times);\r\n        out.exclude = this.exclusions(input.exclude);\r\n        out.updateDurationInDays();\r\n        return out;\r\n    };\r\n    Parse.calendarSchedule = function (input) {\r\n        if (input.schedule instanceof Schedule_Schedule) {\r\n            return input;\r\n        }\r\n        return {\r\n            schedule: this.schedule(input.schedule),\r\n            event: input.event\r\n        };\r\n    };\r\n    Parse.cron = function (pattern, out) {\r\n        if (out === void 0) { out = new Schedule_Schedule(); }\r\n        return out;\r\n    };\r\n    return Parse;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Day.ts\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);\n\r\n\r\n\r\n\r\n// @ts-ignore\r\n\r\nvar Day_Day = (function () {\r\n    function Day(date) {\r\n        this.date = date;\r\n        this.time = date.unix();\r\n        this.millis = date.millisecond();\r\n        this.seconds = date.second();\r\n        this.minute = date.minute();\r\n        this.hour = date.hour();\r\n        this.month = date.month();\r\n        this.year = date.year();\r\n        this.quarter = date.quarter();\r\n        this.dayOfWeek = date.day();\r\n        this.dayOfMonth = date.date();\r\n        this.dayOfYear = date.dayOfYear();\r\n        this.week = date.week();\r\n        this.weekOfYear = Day.getWeekOfYear(date);\r\n        this.weekspanOfYear = Day.getWeekspanOfYear(date);\r\n        this.fullWeekOfYear = Day.getFullWeekOfYear(date);\r\n        this.weekOfMonth = Day.getWeekOfMonth(date);\r\n        this.weekspanOfMonth = Day.getWeekspanOfMonth(date);\r\n        this.fullWeekOfMonth = Day.getFullWeekOfMonth(date);\r\n        this.dayIdentifier = Day.getDayIdentifier(date);\r\n        this.weekIdentifier = Day.getWeekIdentifier(date);\r\n        this.monthIdentifier = Day.getMonthIdentifier(date);\r\n        this.quarterIdentifier = Day.getQuarterIdentifier(date);\r\n    }\r\n    // Same\r\n    Day.prototype.sameDay = function (day) {\r\n        return this.dayIdentifier === day.dayIdentifier;\r\n    };\r\n    Day.prototype.sameMonth = function (day) {\r\n        return this.monthIdentifier === day.monthIdentifier;\r\n    };\r\n    Day.prototype.sameWeek = function (day) {\r\n        return this.weekIdentifier === day.weekIdentifier;\r\n    };\r\n    Day.prototype.sameYear = function (day) {\r\n        return this.year === day.year;\r\n    };\r\n    Day.prototype.sameQuarter = function (day) {\r\n        return this.quarterIdentifier === day.quarterIdentifier;\r\n    };\r\n    Day.prototype.sameHour = function (day) {\r\n        return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour;\r\n    };\r\n    Day.prototype.sameMinute = function (day) {\r\n        return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour && this.minute === day.minute;\r\n    };\r\n    Day.prototype.sameTime = function (time) {\r\n        return this.hour === time.hour && this.minute === time.minute && this.seconds === time.second && this.millis === time.millisecond;\r\n    };\r\n    // Comparison\r\n    Day.prototype.isBefore = function (day, precision) {\r\n        return this.date.isBefore(day.date, precision);\r\n    };\r\n    Day.prototype.isSameOrBefore = function (day, precision) {\r\n        return this.date.isSameOrBefore(day.date, precision);\r\n    };\r\n    Day.prototype.isAfter = function (day, precision) {\r\n        return this.date.isAfter(day.date, precision);\r\n    };\r\n    Day.prototype.isSameOrAfter = function (day, precision) {\r\n        return this.date.isSameOrAfter(day.date, precision);\r\n    };\r\n    Day.prototype.max = function (day) {\r\n        return this.date.isAfter(day.date) ? this : day;\r\n    };\r\n    Day.prototype.min = function (day) {\r\n        return this.date.isBefore(day.date) ? this : day;\r\n    };\r\n    // Between\r\n    Day.prototype.millisBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'milliseconds', true), op, absolute);\r\n    };\r\n    Day.prototype.secondsBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'seconds', true), op, absolute);\r\n    };\r\n    Day.prototype.minutesBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'minutes', true), op, absolute);\r\n    };\r\n    Day.prototype.hoursBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'hours', true), op, absolute);\r\n    };\r\n    Day.prototype.daysBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'days', true), op, absolute);\r\n    };\r\n    Day.prototype.weeksBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'weeks', true), op, absolute);\r\n    };\r\n    Day.prototype.monthsBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'months', true), op, absolute);\r\n    };\r\n    Day.prototype.yearsBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'years', true), op, absolute);\r\n    };\r\n    Day.prototype.isBetween = function (start, end, inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return this.date.isBetween(start.date, end.date, null, inclusive ? '[]' : '[)');\r\n    };\r\n    Day.prototype.mutate = function (mutator) {\r\n        var d = this.toMoment();\r\n        mutator(d);\r\n        return new Day(d);\r\n    };\r\n    Day.prototype.add = function (amount, unit) {\r\n        return this.mutate(function (d) { return d.add(amount, unit); });\r\n    };\r\n    Day.prototype.relative = function (millis) {\r\n        return this.mutate(function (d) { return d.add(millis, 'milliseconds'); });\r\n    };\r\n    // Days\r\n    Day.prototype.relativeDays = function (days) {\r\n        return this.mutate(function (d) { return d.add(days, 'days'); });\r\n    };\r\n    Day.prototype.prev = function (days) {\r\n        if (days === void 0) { days = 1; }\r\n        return this.relativeDays(-days);\r\n    };\r\n    Day.prototype.next = function (days) {\r\n        if (days === void 0) { days = 1; }\r\n        return this.relativeDays(days);\r\n    };\r\n    Day.prototype.withDayOfMonth = function (day) {\r\n        return this.mutate(function (d) { return d.date(day); });\r\n    };\r\n    Day.prototype.withDayOfWeek = function (dayOfWeek) {\r\n        return this.mutate(function (d) { return d.day(dayOfWeek); });\r\n    };\r\n    Day.prototype.withDayOfYear = function (dayOfYear) {\r\n        return this.mutate(function (d) { return d.dayOfYear(dayOfYear); });\r\n    };\r\n    // Month\r\n    Day.prototype.withMonth = function (month) {\r\n        return this.mutate(function (d) { return d.month(month); });\r\n    };\r\n    Day.prototype.relativeMonths = function (months) {\r\n        return this.mutate(function (d) { return d.add(months, 'months'); });\r\n    };\r\n    Day.prototype.prevMonth = function (months) {\r\n        if (months === void 0) { months = 1; }\r\n        return this.relativeMonths(-months);\r\n    };\r\n    Day.prototype.nextMonth = function (months) {\r\n        if (months === void 0) { months = 1; }\r\n        return this.relativeMonths(months);\r\n    };\r\n    // Week Of Year\r\n    Day.prototype.withWeek = function (week, relativeWeek) {\r\n        if (relativeWeek === void 0) { relativeWeek = this.week; }\r\n        return this.mutate(function (d) { return d.add((week - relativeWeek) * Constants.DAYS_IN_WEEK, 'days'); });\r\n    };\r\n    Day.prototype.withWeekOfYear = function (week) {\r\n        return this.withWeek(week, this.weekOfYear);\r\n    };\r\n    Day.prototype.withFullWeekOfYear = function (week) {\r\n        return this.withWeek(week, this.fullWeekOfYear);\r\n    };\r\n    Day.prototype.withWeekspanOfYear = function (week) {\r\n        return this.withWeek(week, this.weekspanOfYear);\r\n    };\r\n    Day.prototype.withWeekOfMonth = function (week) {\r\n        return this.withWeek(week, this.weekOfMonth);\r\n    };\r\n    Day.prototype.withWeekspanOfMonth = function (week) {\r\n        return this.withWeek(week, this.weekspanOfMonth);\r\n    };\r\n    Day.prototype.withFullWeekOfMonth = function (week) {\r\n        return this.withWeek(week, this.fullWeekOfMonth);\r\n    };\r\n    Day.prototype.relativeWeeks = function (weeks) {\r\n        return this.mutate(function (d) { return d.add(weeks, 'weeks'); });\r\n    };\r\n    Day.prototype.prevWeek = function (weeks) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        return this.relativeWeeks(-weeks);\r\n    };\r\n    Day.prototype.nextWeek = function (weeks) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        return this.relativeWeeks(weeks);\r\n    };\r\n    // Year\r\n    Day.prototype.withYear = function (year) {\r\n        return this.mutate(function (d) { return d.year(year); });\r\n    };\r\n    Day.prototype.relativeYears = function (years) {\r\n        return this.mutate(function (d) { return d.add(years, 'year'); });\r\n    };\r\n    Day.prototype.prevYear = function (years) {\r\n        if (years === void 0) { years = 1; }\r\n        return this.relativeYears(-years);\r\n    };\r\n    Day.prototype.nextYear = function (years) {\r\n        if (years === void 0) { years = 1; }\r\n        return this.relativeYears(years);\r\n    };\r\n    // Hour\r\n    Day.prototype.withHour = function (hour) {\r\n        return this.mutate(function (d) { return d.hour(hour); });\r\n    };\r\n    Day.prototype.relativeHours = function (hours) {\r\n        return this.mutate(function (d) { return d.add(hours, 'hours'); });\r\n    };\r\n    Day.prototype.prevHour = function (hours) {\r\n        if (hours === void 0) { hours = 1; }\r\n        return this.relativeHours(-hours);\r\n    };\r\n    Day.prototype.nextHour = function (hours) {\r\n        if (hours === void 0) { hours = 1; }\r\n        return this.relativeHours(hours);\r\n    };\r\n    // Time\r\n    Day.prototype.withTimes = function (hour, minute, second, millisecond) {\r\n        if (hour === void 0) { hour = Constants.HOUR_MIN; }\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        return this.mutate(function (d) { return d.set({ hour: hour, minute: minute, second: second, millisecond: millisecond }); });\r\n    };\r\n    Day.prototype.withTime = function (time) {\r\n        return this.withTimes(time.hour, time.minute, time.second, time.millisecond);\r\n    };\r\n    // Start & End\r\n    // Time\r\n    Day.prototype.start = function () {\r\n        return this.mutate(function (d) { return d.startOf('day'); });\r\n    };\r\n    Day.prototype.isStart = function () {\r\n        return this.hour === Constants.HOUR_MIN &&\r\n            this.minute === Constants.MINUTE_MIN &&\r\n            this.seconds === Constants.SECOND_MIN &&\r\n            this.millis === Constants.MILLIS_MIN;\r\n    };\r\n    Day.prototype.end = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('day'); }) :\r\n            this.mutate(function (d) { return d.startOf('day').add(1, 'day'); });\r\n    };\r\n    Day.prototype.isEnd = function () {\r\n        return this.hour === Constants.HOUR_MAX &&\r\n            this.minute === Constants.MINUTE_MAX &&\r\n            this.seconds === Constants.SECOND_MAX &&\r\n            this.millis === Constants.MILLIS_MAX;\r\n    };\r\n    // Hour\r\n    Day.prototype.startOfHour = function () {\r\n        return this.mutate(function (d) { return d.startOf('hour'); });\r\n    };\r\n    Day.prototype.isStartOfHour = function () {\r\n        return this.minute === Constants.MINUTE_MIN &&\r\n            this.seconds === Constants.SECOND_MIN &&\r\n            this.millis === Constants.MILLIS_MIN;\r\n    };\r\n    Day.prototype.endOfHour = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('hour'); }) :\r\n            this.mutate(function (d) { return d.startOf('hour').add(1, 'hour'); });\r\n    };\r\n    Day.prototype.isEndOfHour = function () {\r\n        return this.minute === Constants.MINUTE_MAX &&\r\n            this.seconds === Constants.SECOND_MAX &&\r\n            this.millis === Constants.MILLIS_MAX;\r\n    };\r\n    // Week\r\n    Day.prototype.startOfWeek = function () {\r\n        return this.mutate(function (d) { return d.startOf('week'); });\r\n    };\r\n    Day.prototype.isStartOfWeek = function () {\r\n        return this.dayOfWeek === Constants.WEEKDAY_MIN;\r\n    };\r\n    Day.prototype.endOfWeek = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('week'); }) :\r\n            this.mutate(function (d) { return d.startOf('week').add(1, 'week'); });\r\n    };\r\n    Day.prototype.isEndOfWeek = function () {\r\n        return this.dayOfWeek === Constants.WEEKDAY_MAX;\r\n    };\r\n    // Month\r\n    Day.prototype.startOfMonth = function () {\r\n        return this.mutate(function (d) { return d.startOf('month'); });\r\n    };\r\n    Day.prototype.isStartOfMonth = function () {\r\n        return this.dayOfMonth === Constants.DAY_MIN;\r\n    };\r\n    Day.prototype.endOfMonth = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('month'); }) :\r\n            this.mutate(function (d) { return d.startOf('month').add(1, 'month'); });\r\n    };\r\n    Day.prototype.isEndOfMonth = function () {\r\n        return this.dayOfMonth === this.daysInMonth();\r\n    };\r\n    // Year\r\n    Day.prototype.startOfYear = function () {\r\n        return this.mutate(function (d) { return d.startOf('year'); });\r\n    };\r\n    Day.prototype.isStartOfYear = function () {\r\n        return this.month === Constants.MONTH_MIN && this.dayOfMonth === Constants.DAY_MIN;\r\n    };\r\n    Day.prototype.endOfYear = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('year'); }) :\r\n            this.mutate(function (d) { return d.startOf('year').add(1, 'year'); });\r\n    };\r\n    Day.prototype.isEndOfYear = function () {\r\n        return this.month === Constants.MONTH_MAX && this.dayOfMonth === Constants.DAY_MAX;\r\n    };\r\n    // Days In X\r\n    Day.prototype.daysInMonth = function () {\r\n        return this.date.daysInMonth();\r\n    };\r\n    Day.prototype.daysInYear = function () {\r\n        return this.endOfYear().dayOfYear;\r\n    };\r\n    Day.prototype.weeksInYear = function () {\r\n        return this.date.weeksInYear();\r\n    };\r\n    // Display\r\n    Day.prototype.format = function (format) {\r\n        return this.date.format(format);\r\n    };\r\n    Day.prototype.utc = function (keepLocalTime) {\r\n        return this.mutate(function (d) { return d.utc(keepLocalTime); });\r\n    };\r\n    Day.prototype.toMoment = function () {\r\n        return this.date.clone();\r\n    };\r\n    Day.prototype.toDate = function () {\r\n        return this.date.toDate();\r\n    };\r\n    Day.prototype.toArray = function () {\r\n        return this.date.toArray();\r\n    };\r\n    Day.prototype.toJSON = function () {\r\n        return this.date.toJSON();\r\n    };\r\n    Day.prototype.toISOString = function (keepOffset) {\r\n        if (keepOffset === void 0) { keepOffset = false; }\r\n        return this.date.toISOString(keepOffset);\r\n    };\r\n    Day.prototype.toObject = function () {\r\n        return this.date.toObject();\r\n    };\r\n    Day.prototype.toString = function () {\r\n        return this.date.toString();\r\n    };\r\n    // State\r\n    Day.prototype.isDST = function () {\r\n        return this.date.isDST();\r\n    };\r\n    Day.prototype.isLeapYear = function () {\r\n        return this.date.isLeapYear();\r\n    };\r\n    // Instances\r\n    Day.now = function () {\r\n        return new Day(__WEBPACK_IMPORTED_MODULE_3_moment__());\r\n    };\r\n    Day.today = function () {\r\n        return this.now().start();\r\n    };\r\n    Day.tomorrow = function () {\r\n        return this.today().next();\r\n    };\r\n    Day.fromMoment = function (moment) {\r\n        return moment && moment.isValid() ? new Day(moment) : null;\r\n    };\r\n    Day.unix = function (millis) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(millis));\r\n    };\r\n    Day.parse = function (input) {\r\n        return Parse_Parse.day(input);\r\n    };\r\n    Day.fromString = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromFormat = function (input, formats) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input, formats));\r\n    };\r\n    Day.fromObject = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromDate = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromArray = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromDayIdentifier = function (id) {\r\n        var date = id % 100;\r\n        var month = (Math.floor(id / 100) % 100) - 1;\r\n        var year = Math.floor(id / 10000);\r\n        return this.build(year, month, date);\r\n    };\r\n    Day.build = function (year, month, date, hour, minute, second, millisecond) {\r\n        if (date === void 0) { date = Constants.DAY_MIN; }\r\n        if (hour === void 0) { hour = Constants.HOUR_MIN; }\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        return new Day(__WEBPACK_IMPORTED_MODULE_3_moment__({ year: year, month: month, date: date, hour: hour, minute: minute, second: second, millisecond: millisecond }));\r\n    };\r\n    Day.getWeekspanOfYear = function (date) {\r\n        return Math.floor((date.dayOfYear() - 1) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getWeekOfYear = function (date) {\r\n        var firstOfYear = date.clone().startOf('year');\r\n        var weeks = date.week();\r\n        return firstOfYear.day() > Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY ? weeks - 1 : weeks;\r\n    };\r\n    Day.getFullWeekOfYear = function (date) {\r\n        var firstOfYear = date.clone().startOf('year');\r\n        var weeks = date.week();\r\n        return firstOfYear.day() === Constants.WEEKDAY_MIN ? weeks : weeks - 1;\r\n    };\r\n    Day.getWeekspanOfMonth = function (date) {\r\n        return Math.floor((date.date() - 1) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getFullWeekOfMonth = function (date) {\r\n        return Math.floor((date.date() - 1 - date.day() + Constants.DAYS_IN_WEEK) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getWeekOfMonth = function (date) {\r\n        var dom = date.date();\r\n        var dow = date.day();\r\n        var sundayDate = dom - dow;\r\n        return Math.floor((sundayDate + Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY + 5) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getWeekIdentifier = function (date) {\r\n        return date.week() + date.year() * 100;\r\n    };\r\n    Day.getMonthIdentifier = function (date) {\r\n        return (date.month() + 1) + date.year() * 100;\r\n    };\r\n    Day.getDayIdentifier = function (date) {\r\n        return date.date() + (date.month() + 1) * 100 + date.year() * 10000;\r\n    };\r\n    Day.getQuarterIdentifier = function (date) {\r\n        return date.quarter() + date.year() * 10;\r\n    };\r\n    Day.LOAD_TIME = Day.now();\r\n    return Day;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Calendar.ts\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Calendar_CalendarDay = (function (_super) {\r\n    __extends(CalendarDay, _super);\r\n    function CalendarDay() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.currentDay = false;\r\n        _this.currentWeek = false;\r\n        _this.currentMonth = false;\r\n        _this.currentYear = false;\r\n        _this.currentOffset = 0;\r\n        _this.selectedDay = false;\r\n        _this.selectedWeek = false;\r\n        _this.selectedMonth = false;\r\n        _this.selectedYear = false;\r\n        _this.inCalendar = false;\r\n        _this.events = [];\r\n        return _this;\r\n    }\r\n    CalendarDay.prototype.updateCurrent = function (current) {\r\n        this.currentDay = this.sameDay(current);\r\n        this.currentWeek = this.sameWeek(current);\r\n        this.currentMonth = this.sameMonth(current);\r\n        this.currentYear = this.sameYear(current);\r\n        this.currentOffset = this.daysBetween(current, Op.DOWN, false);\r\n        return this;\r\n    };\r\n    CalendarDay.prototype.updateSelected = function (selected) {\r\n        this.selectedDay = selected.matchesDay(this);\r\n        this.selectedWeek = selected.matchesWeek(this);\r\n        this.selectedMonth = selected.matchesMonth(this);\r\n        this.selectedYear = selected.matchesYear(this);\r\n        return this;\r\n    };\r\n    CalendarDay.prototype.clearSelected = function () {\r\n        this.selectedDay = this.selectedWeek = this.selectedMonth = this.selectedYear = false;\r\n        return this;\r\n    };\r\n    return CalendarDay;\r\n}(Day_Day));\r\n\r\nvar Calendar_CalendarEvent = (function () {\r\n    function CalendarEvent(id, event, schedule, time, actualDay) {\r\n        this.id = id;\r\n        this.event = event;\r\n        this.schedule = schedule;\r\n        this.time = time;\r\n        this.fullDay = time.isPoint;\r\n        this.starting = time.start.sameDay(actualDay);\r\n    }\r\n    Object.defineProperty(CalendarEvent.prototype, \"scheduleId\", {\r\n        get: function () {\r\n            return Math.floor(this.id / Constants.MAX_EVENTS_PER_DAY);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CalendarEvent;\r\n}());\r\n\r\nvar Calendar_Calendar = (function () {\r\n    function Calendar(start, end, type, size, moveStart, moveEnd, input) {\r\n        this.fill = false;\r\n        this.minimumSize = 0;\r\n        this.repeatCovers = true;\r\n        this.listTimes = false;\r\n        this.eventsOutside = false;\r\n        this.selection = null;\r\n        this.days = [];\r\n        this.schedules = [];\r\n        this.span = new DaySpan_DaySpan(start, end);\r\n        this.filled = new DaySpan_DaySpan(start, end);\r\n        this.type = type;\r\n        this.size = size;\r\n        this.moveStart = moveStart;\r\n        this.moveEnd = moveEnd;\r\n        if (Functions.isDefined(input)) {\r\n            this.withInput(input, false);\r\n        }\r\n        this.refresh();\r\n    }\r\n    Calendar.prototype.withInput = function (input, refresh) {\r\n        if (refresh === void 0) { refresh = true; }\r\n        this.fill = Functions.coalesce(input.fill, this.fill);\r\n        this.minimumSize = Functions.coalesce(input.minimumSize, this.minimumSize);\r\n        this.repeatCovers = Functions.coalesce(input.repeatCovers, this.repeatCovers);\r\n        this.listTimes = Functions.coalesce(input.listTimes, this.listTimes);\r\n        this.eventsOutside = Functions.coalesce(input.eventsOutside, this.eventsOutside);\r\n        if (Functions.isArray(input.schedules)) {\r\n            this.removeSchedules();\r\n            this.addSchedules(input.schedules, false, !refresh);\r\n        }\r\n        if (refresh) {\r\n            this.refresh();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.withMinimumSize = function (minimumSize) {\r\n        this.minimumSize = minimumSize;\r\n        this.refresh();\r\n        return this;\r\n    };\r\n    Calendar.prototype.withRepeatCovers = function (repeatCovers) {\r\n        this.repeatCovers = repeatCovers;\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Calendar.prototype.withListTimes = function (listTimes) {\r\n        this.listTimes = listTimes;\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Calendar.prototype.withEventsOutside = function (eventsOutside) {\r\n        this.eventsOutside = eventsOutside;\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Object.defineProperty(Calendar.prototype, \"start\", {\r\n        get: function () {\r\n            return this.span.start;\r\n        },\r\n        set: function (day) {\r\n            this.span.start = day;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Calendar.prototype, \"end\", {\r\n        get: function () {\r\n            return this.span.end;\r\n        },\r\n        set: function (day) {\r\n            this.span.end = day;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Calendar.prototype.summary = function (dayOfWeek, short, repeat, contextual, delimiter) {\r\n        if (dayOfWeek === void 0) { dayOfWeek = true; }\r\n        if (short === void 0) { short = false; }\r\n        if (repeat === void 0) { repeat = false; }\r\n        if (contextual === void 0) { contextual = true; }\r\n        if (delimiter === void 0) { delimiter = ' - '; }\r\n        return this.span.summary(this.type, dayOfWeek, short, repeat, contextual, delimiter);\r\n    };\r\n    Calendar.prototype.split = function (by) {\r\n        if (by === void 0) { by = 1; }\r\n        var split = [];\r\n        var start = this.start;\r\n        var end = this.moveEnd(this.end, by - this.size);\r\n        for (var i = 0; i < this.size; i++) {\r\n            split.push(new Calendar(start, end, this.type, by, this.moveStart, this.moveEnd, this));\r\n            start = this.moveStart(start, by);\r\n            end = this.moveEnd(end, by);\r\n        }\r\n        return split;\r\n    };\r\n    Calendar.prototype.refresh = function (today) {\r\n        if (today === void 0) { today = Day_Day.today(); }\r\n        this.length = this.span.days(Op.UP, true);\r\n        this.resetDays();\r\n        this.refreshCurrent(today);\r\n        this.refreshSelection();\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Calendar.prototype.resetFilled = function () {\r\n        this.filled.start = this.fill ? this.start.startOfWeek() : this.start;\r\n        this.filled.end = this.fill ? this.end.endOfWeek() : this.end;\r\n        return this;\r\n    };\r\n    Calendar.prototype.resetDays = function () {\r\n        this.resetFilled();\r\n        var days = this.days;\r\n        var filled = this.filled;\r\n        var current = filled.start;\r\n        var daysBetween = filled.days(Op.UP);\r\n        var total = Math.max(this.minimumSize, daysBetween);\r\n        for (var i = 0; i < total; i++) {\r\n            var day = days[i];\r\n            if (!day || !day.sameDay(current)) {\r\n                day = new Calendar_CalendarDay(current.date);\r\n                if (i < days.length) {\r\n                    days.splice(i, 1, day);\r\n                }\r\n                else {\r\n                    days.push(day);\r\n                }\r\n            }\r\n            day.inCalendar = this.span.contains(day);\r\n            current = current.next();\r\n        }\r\n        if (days.length > total) {\r\n            days.splice(total, days.length - total);\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.refreshCurrent = function (today) {\r\n        if (today === void 0) { today = Day_Day.today(); }\r\n        return this.iterateDays(function (d) {\r\n            d.updateCurrent(today);\r\n        });\r\n    };\r\n    Calendar.prototype.refreshSelection = function () {\r\n        var _this = this;\r\n        return this.iterateDays(function (d) {\r\n            if (_this.selection) {\r\n                d.updateSelected(_this.selection);\r\n            }\r\n            else {\r\n                d.clearSelected();\r\n            }\r\n        });\r\n    };\r\n    Calendar.prototype.refreshEvents = function () {\r\n        var _this = this;\r\n        return this.iterateDays(function (d) {\r\n            if (d.inCalendar || _this.eventsOutside) {\r\n                d.events = _this.eventsForDay(d, _this.listTimes, _this.repeatCovers);\r\n            }\r\n        });\r\n    };\r\n    Calendar.prototype.iterateDays = function (iterator) {\r\n        var days = this.days;\r\n        for (var i = 0; i < days.length; i++) {\r\n            iterator(days[i]);\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.eventsForDay = function (day, getTimes, covers) {\r\n        if (getTimes === void 0) { getTimes = true; }\r\n        if (covers === void 0) { covers = true; }\r\n        var events = [];\r\n        var entries = this.schedules;\r\n        for (var entryIndex = 0; entryIndex < entries.length; entryIndex++) {\r\n            var entry = entries[entryIndex];\r\n            var schedule = entry.schedule;\r\n            var event_1 = entry.event;\r\n            var eventId = entryIndex * Constants.MAX_EVENTS_PER_DAY;\r\n            if ((covers && schedule.coversDay(day)) || (!covers && schedule.matchesDay(day))) {\r\n                if (getTimes) {\r\n                    var times = covers ?\r\n                        entry.schedule.getSpansOver(day) :\r\n                        entry.schedule.getSpansOn(day);\r\n                    for (var timeIndex = 0; timeIndex < times.length; timeIndex++) {\r\n                        events.push(new Calendar_CalendarEvent(eventId + timeIndex, event_1, schedule, times[timeIndex], day));\r\n                    }\r\n                }\r\n                else {\r\n                    var over = entry.schedule.getSpanOver(day);\r\n                    if (over) {\r\n                        events.push(new Calendar_CalendarEvent(eventId, event_1, schedule, over, day));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    Calendar.prototype.findSchedule = function (input) {\r\n        for (var _i = 0, _a = this.schedules; _i < _a.length; _i++) {\r\n            var schedule = _a[_i];\r\n            if (schedule === input || schedule.schedule === input || schedule.event === input) {\r\n                return schedule;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Calendar.prototype.removeSchedules = function (schedules, delayRefresh) {\r\n        if (schedules === void 0) { schedules = null; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        if (schedules) {\r\n            for (var _i = 0, schedules_1 = schedules; _i < schedules_1.length; _i++) {\r\n                var schedule = schedules_1[_i];\r\n                this.removeSchedule(schedule, true);\r\n            }\r\n        }\r\n        else {\r\n            this.schedules = [];\r\n        }\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.removeSchedule = function (schedule, delayRefresh) {\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        var found = this.findSchedule(schedule);\r\n        if (found) {\r\n            this.schedules.splice(this.schedules.indexOf(found), 1);\r\n            if (!delayRefresh) {\r\n                this.refreshEvents();\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.addSchedule = function (schedule, allowDuplicates, delayRefresh) {\r\n        if (allowDuplicates === void 0) { allowDuplicates = false; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        var parsed = Parse_Parse.calendarSchedule(schedule);\r\n        if (!allowDuplicates) {\r\n            var existing = this.findSchedule(parsed);\r\n            if (existing) {\r\n                return this;\r\n            }\r\n        }\r\n        this.schedules.push(parsed);\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.addSchedules = function (schedules, allowDuplicates, delayRefresh) {\r\n        if (allowDuplicates === void 0) { allowDuplicates = false; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        for (var _i = 0, schedules_2 = schedules; _i < schedules_2.length; _i++) {\r\n            var schedule = schedules_2[_i];\r\n            this.addSchedule(schedule, allowDuplicates, true);\r\n        }\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.select = function (start, end) {\r\n        this.selection = end ? new DaySpan_DaySpan(start, end) : DaySpan_DaySpan.point(start);\r\n        this.refreshSelection();\r\n        return this;\r\n    };\r\n    Calendar.prototype.unselect = function () {\r\n        this.selection = null;\r\n        this.refreshSelection();\r\n        return this;\r\n    };\r\n    Calendar.prototype.move = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        this.start = this.moveStart(this.start, jump);\r\n        this.end = this.moveEnd(this.end, jump);\r\n        this.refresh();\r\n        return this;\r\n    };\r\n    Calendar.prototype.next = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        return this.move(jump);\r\n    };\r\n    Calendar.prototype.prev = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        return this.move(-jump);\r\n    };\r\n    Calendar.days = function (days, around, focus, input) {\r\n        if (days === void 0) { days = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        var start = around.start().relativeDays(-Math.floor(days * focus));\r\n        var end = start.relativeDays(days - 1).end();\r\n        var mover = function (day, amount) { return day.relativeDays(amount); };\r\n        return new Calendar(start, end, Units.DAY, days, mover, mover, input);\r\n    };\r\n    Calendar.weeks = function (weeks, around, focus, input) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        var start = around.start().startOfWeek().relativeWeeks(-Math.floor(weeks * focus));\r\n        var end = start.relativeWeeks(weeks - 1).endOfWeek();\r\n        var mover = function (day, amount) { return day.relativeWeeks(amount); };\r\n        return new Calendar(start, end, Units.WEEK, weeks, mover, mover, input);\r\n    };\r\n    Calendar.months = function (months, around, focus, input) {\r\n        if (months === void 0) { months = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        if (input === void 0) { input = { fill: true }; }\r\n        var start = around.start().startOfMonth().relativeMonths(-Math.floor(months * focus));\r\n        var end = start.relativeMonths(months - 1).endOfMonth();\r\n        var moveStart = function (day, amount) { return day.relativeMonths(amount); };\r\n        var moveEnd = function (day, amount) { return day.startOfMonth().relativeMonths(amount).endOfMonth(); };\r\n        return new Calendar(start, end, Units.MONTH, months, moveStart, moveEnd, input);\r\n    };\r\n    Calendar.years = function (years, around, focus, input) {\r\n        if (years === void 0) { years = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        if (input === void 0) { input = { fill: true }; }\r\n        var start = around.start().startOfMonth().relativeMonths(-Math.floor(years * focus));\r\n        var end = start.relativeMonths(years - 1).endOfYear();\r\n        var mover = function (day, amount) { return day.relativeYears(amount); };\r\n        return new Calendar(start, end, Units.YEAR, years, mover, mover, input);\r\n    };\r\n    return Calendar;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Month.ts\n\r\nvar Month = (function () {\r\n    function Month() {\r\n    }\r\n    Month.JANUARY = 0;\r\n    Month.FEBRUARY = 1;\r\n    Month.MARCH = 2;\r\n    Month.APRIL = 3;\r\n    Month.MAY = 4;\r\n    Month.JUNE = 5;\r\n    Month.JULY = 6;\r\n    Month.AUGUST = 7;\r\n    Month.SEPTEMBER = 8;\r\n    Month.OCTOBER = 9;\r\n    Month.NOVEMBER = 10;\r\n    Month.DECEMBER = 11;\r\n    Month.LIST = [\r\n        Month.JANUARY,\r\n        Month.FEBRUARY,\r\n        Month.MARCH,\r\n        Month.APRIL,\r\n        Month.MAY,\r\n        Month.JUNE,\r\n        Month.JULY,\r\n        Month.AUGUST,\r\n        Month.SEPTEMBER,\r\n        Month.OCTOBER,\r\n        Month.NOVEMBER,\r\n        Month.DECEMBER\r\n    ];\r\n    return Month;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Weekday.ts\n\r\nvar Weekday = (function () {\r\n    function Weekday() {\r\n    }\r\n    Weekday.SUNDAY = 0;\r\n    Weekday.MONDAY = 1;\r\n    Weekday.TUESDAY = 2;\r\n    Weekday.WEDNESDAY = 3;\r\n    Weekday.THURSDAY = 4;\r\n    Weekday.FRIDAY = 5;\r\n    Weekday.SATURDAY = 6;\r\n    Weekday.LIST = [\r\n        Weekday.SUNDAY,\r\n        Weekday.MONDAY,\r\n        Weekday.TUESDAY,\r\n        Weekday.WEDNESDAY,\r\n        Weekday.THURSDAY,\r\n        Weekday.FRIDAY,\r\n        Weekday.SATURDAY\r\n    ];\r\n    Weekday.WEEK = [\r\n        Weekday.MONDAY,\r\n        Weekday.TUESDAY,\r\n        Weekday.WEDNESDAY,\r\n        Weekday.THURSDAY,\r\n        Weekday.FRIDAY\r\n    ];\r\n    Weekday.ENDS = [\r\n        Weekday.SATURDAY,\r\n        Weekday.SUNDAY\r\n    ];\r\n    return Weekday;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Pattern.ts\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\nvar Pattern_Pattern = (function () {\r\n    function Pattern(name, listed, describe, rules) {\r\n        this.name = name;\r\n        this.listed = listed;\r\n        this.describe = describe;\r\n        this.rules = rules;\r\n    }\r\n    Pattern.prototype.apply = function (input, day) {\r\n        for (var _i = 0, _a = Pattern.PROPS; _i < _a.length; _i++) {\r\n            var prop = _a[_i];\r\n            var rule = this.rules[prop];\r\n            // Should have one value\r\n            if (rule === 1) {\r\n                input[prop] = [day[prop]];\r\n            }\r\n            // Can be any of the values in the array\r\n            if (Functions.isArray(rule)) {\r\n                input[prop] = rule;\r\n            }\r\n            // Must not be present\r\n            if (!Functions.isDefined(rule)) {\r\n                delete input[prop];\r\n            }\r\n        }\r\n        return input;\r\n    };\r\n    Pattern.prototype.isMatch = function (input, exactlyWith) {\r\n        var exactly = Functions.isDefined(exactlyWith);\r\n        for (var _i = 0, _a = Pattern.PROPS; _i < _a.length; _i++) {\r\n            var prop = _a[_i];\r\n            var rule = this.rules[prop];\r\n            var curr = input[prop];\r\n            // Optional, skip it\r\n            if (rule === false) {\r\n                continue;\r\n            }\r\n            // Requires any value\r\n            if (rule === true && !curr) {\r\n                return false;\r\n            }\r\n            // Must not be present\r\n            if (!Functions.isDefined(rule) && curr) {\r\n                return false;\r\n            }\r\n            // Must be an array of the same size\r\n            if (Functions.isNumber(rule)) {\r\n                if (Functions.isArray(curr) && curr.length === rule) {\r\n                    if (exactly && curr.indexOf(exactlyWith[prop]) === -1) {\r\n                        return false;\r\n                    }\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            // Must be an array of the same values\r\n            if (Functions.isArray(rule)) {\r\n                if (!Functions.isArray(curr)) {\r\n                    return false;\r\n                }\r\n                if (rule.length !== curr.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < rule.length; i++) {\r\n                    if (rule[i] !== curr[i]) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (exactly && rule.indexOf(exactlyWith[prop]) === -1) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Must be an object with same over & offset.\r\n            if (Functions.isObject(rule)) {\r\n                if (!Functions.isObject(curr)) {\r\n                    return false;\r\n                }\r\n                var ruleOffset = rule.offset || 0;\r\n                var currOffset = curr.offset || 0;\r\n                if (currOffset !== ruleOffset || curr.every !== rule.every) {\r\n                    return false;\r\n                }\r\n                if (exactly && (exactlyWith[prop] % rule.every) !== ruleOffset) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Pattern.withName = function (name) {\r\n        return PatternMap[name];\r\n    };\r\n    Pattern.findMatch = function (input, listedOnly, exactlyWith) {\r\n        if (listedOnly === void 0) { listedOnly = true; }\r\n        for (var _i = 0, Patterns_1 = Patterns; _i < Patterns_1.length; _i++) {\r\n            var pattern = Patterns_1[_i];\r\n            if ((pattern.listed || !listedOnly) && pattern.isMatch(input, exactlyWith)) {\r\n                return pattern;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Pattern.PROPS = [\r\n        'dayOfWeek', 'dayOfMonth', 'dayOfYear', 'month', 'week', 'year', 'weekOfYear', 'weekspanOfYear', 'fullWeekOfYear', 'weekOfMonth', 'weekspanOfMonth', 'fullWeekOfMonth'\r\n    ];\r\n    return Pattern;\r\n}());\r\n\r\nvar Patterns = [\r\n    new Pattern_Pattern('none', true, function (day) { return 'Does not repeat'; }, {\r\n        year: 1,\r\n        month: 1,\r\n        dayOfMonth: 1\r\n    }),\r\n    new Pattern_Pattern('daily', true, function (day) { return 'Daily'; }, {}),\r\n    new Pattern_Pattern('weekly', true, function (day) { return 'Weekly on ' + day.format('dddd'); }, {\r\n        dayOfWeek: 1\r\n    }),\r\n    new Pattern_Pattern('monthlyWeek', true, function (day) { return 'Monthly on the ' + Suffix.CACHE[day.weekspanOfMonth + 1] + ' ' + day.format('dddd'); }, {\r\n        dayOfWeek: 1,\r\n        weekspanOfMonth: 1\r\n    }),\r\n    new Pattern_Pattern('annually', true, function (day) { return 'Annually on ' + day.format('MMMM Do'); }, {\r\n        month: 1,\r\n        dayOfMonth: 1\r\n    }),\r\n    new Pattern_Pattern('annuallyMonthWeek', true, function (day) { return 'Annually on the ' + Suffix.CACHE[day.weekspanOfMonth + 1] + ' ' + day.format('dddd') + ' of ' + day.format('MMMM'); }, {\r\n        month: 1,\r\n        dayOfWeek: 1,\r\n        weekspanOfMonth: 1\r\n    }),\r\n    new Pattern_Pattern('weekday', true, function (day) { return 'Every weekday (Monday to Friday)'; }, {\r\n        dayOfWeek: [Weekday.MONDAY, Weekday.TUESDAY, Weekday.WEDNESDAY, Weekday.THURSDAY, Weekday.FRIDAY]\r\n    }),\r\n    new Pattern_Pattern('monthly', true, function (day) { return 'Monthly on the ' + day.format('Do') + ' day'; }, {\r\n        dayOfMonth: 1\r\n    }),\r\n    new Pattern_Pattern('custom', true, function (day) { return 'Custom...'; }, {\r\n        dayOfWeek: false,\r\n        dayOfMonth: false,\r\n        dayOfYear: false,\r\n        month: false,\r\n        week: false,\r\n        year: false,\r\n        weekOfYear: false,\r\n        weekspanOfYear: false,\r\n        fullWeekOfYear: false,\r\n        weekOfMonth: false,\r\n        weekspanOfMonth: false,\r\n        fullWeekOfMonth: false\r\n    })\r\n];\r\nvar PatternMap = {};\r\nfor (var Pattern__i = 0, Patterns_2 = Patterns; Pattern__i < Patterns_2.length; Pattern__i++) {\r\n    var Pattern_pattern = Patterns_2[Pattern__i];\r\n    PatternMap[Pattern_pattern.name] = Pattern_pattern;\r\n}\r\n\n// CONCATENATED MODULE: ./src/index.ts\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"CalendarDay\", function() { return Calendar_CalendarDay; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"CalendarEvent\", function() { return Calendar_CalendarEvent; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Calendar\", function() { return Calendar_Calendar; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Constants\", function() { return Constants; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Day\", function() { return Day_Day; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"DaySpan\", function() { return DaySpan_DaySpan; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Functions\", function() { return Functions; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Month\", function() { return Month; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Op\", function() { return Op; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"operate\", function() { return operate; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Parse\", function() { return Parse_Parse; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Pattern\", function() { return Pattern_Pattern; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Patterns\", function() { return Patterns; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"PatternMap\", function() { return PatternMap; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Schedule\", function() { return Schedule_Schedule; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Suffix\", function() { return Suffix; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Time\", function() { return Time_Time; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Units\", function() { return Units; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Weekday\", function() { return Weekday; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// dayspan.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 39d895aa36207e3a2d0f","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"moment\",\"commonjs2\":\"moment\",\"amd\":\"moment\",\"root\":\"moment\"}\n// module id = 0\n// module chunks = 0","\nexport enum Op\n{\n  NONE,\n  FLOOR,\n  CEIL,\n  ROUND,\n  TRUNCATE,\n  UP,\n  DOWN\n}\n\nexport function operate(value: number, op: Op, absolute: boolean = false)\n{\n  if (isFinite(value))\n  {\n    if (absolute)\n    {\n      value = Math.abs( value );\n    }\n\n    switch (op)\n    {\n    case Op.NONE:\n      return value;\n    case Op.FLOOR:\n      return Math.floor( value );\n    case Op.CEIL:\n      return Math.ceil( value );\n    case Op.ROUND:\n      return Math.round( value );\n    case Op.TRUNCATE:\n    case Op.DOWN:\n      return value < 0 ? Math.ceil( value ) : Math.floor( value );\n    case Op.UP:\n      return value < 0 ? Math.floor( value ) : Math.ceil( value );\n    }\n  }\n\n  return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Op.ts","\n\n/**\n * The class which contains commonly used functions by the library. These\n * functions and variables exist in a class so they may be overridden if\n * desired.\n */\nexport class Functions\n{\n\n  /**\n   * Determines whether the given input is an array.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is an array, otherwise false.\n   */\n  public static isArray(input: any): boolean\n  {\n    return input instanceof Array;\n  }\n\n  public static isArrayEquals(x: any[], y: any[]): boolean\n  {\n    if (x === y) return true;\n    if (x.length !== y.length) return false;\n\n    for (let i = 0; i < x.length; i++)\n    {\n      if (x[ i ] !== y[ i ])\n      {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Determines whether the given input is a string.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is a string, otherwise false.\n   */\n  public static isString(input: any): boolean\n  {\n    return typeof(input) === 'string';\n  }\n\n\n  public static isNumber(input: any): boolean\n  {\n    return isFinite(input);\n  }\n\n  public static isObject(input: any): boolean\n  {\n    return !this.isArray(input) && typeof(input) === 'object';\n  }\n\n  /**\n   * Determines whether the given input is defined.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is defined, otherwise false.\n   */\n  public static isDefined(input: any): boolean\n  {\n    return typeof(input) !== 'undefined';\n  }\n\n  public static isFrequencyValueEvery(input: any): boolean\n  {\n    return this.isObject( input ) && this.isNumber( input.every );\n  }\n\n  public static isFrequencyValueOneOf(input: any): boolean\n  {\n    return this.isArray( input ) && input.length > 0;\n  }\n\n\n\n  /**\n   * Returns the first argument which is defined.\n   *\n   * @param a The first argument to look at.\n   * @param b The second argument to look at.\n   * @return The first defined argument.\n   * @see [[Functions.isDefined]]\n   */\n  public static coalesce(a: any, b: any, c?: any): any\n  {\n    return this.isDefined( a ) ? a : (this.isDefined( b ) ? b : c);\n  }\n\n  public static pad(x: string, length: number, padding: string, before: boolean): string\n  {\n    while (x.length < length)\n    {\n      before ? x = padding + x : x = x + padding;\n    }\n\n    return x;\n  }\n\n  public static padNumber(x: number, length: number, first: number = length)\n  {\n    return this.pad(x + '', length, '0', true).substring( 0, first );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Functions.ts","\n\nexport class Constants\n{\n  public static MILLIS_IN_SECOND: number = 1000;\n  public static MILLIS_IN_MINUTE: number = 1000 * 60;\n  public static MILLIS_IN_HOUR: number = 1000 * 60 * 60;\n  public static MILLIS_IN_DAY: number = 1000 * 60 * 60 * 24;\n  public static MILLIS_IN_WEEK: number = 1000 * 60 * 60 * 24 * 7;\n\n  public static DAYS_IN_WEEK: number = 7;\n  public static MONTHS_IN_YEAR: number = 12;\n  public static HOURS_IN_DAY: number = 24;\n\n  public static MONTH_MIN: number = 0;\n  public static MONTH_MAX: number = 11;\n  public static DAY_MIN: number = 1;\n  public static DAY_MAX: number = 31;\n  public static HOUR_MIN: number = 0;\n  public static HOUR_MAX: number = 23;\n  public static MINUTE_MIN: number = 0;\n  public static MINUTE_MAX: number = 59;\n  public static SECOND_MIN: number = 0;\n  public static SECOND_MAX: number = 59;\n  public static MILLIS_MIN: number = 0;\n  public static MILLIS_MAX: number = 999;\n  public static WEEKDAY_MIN: number = 0;\n  public static WEEKDAY_MAX: number = 6;\n\n  public static START_NONE: number = 0;\n  public static END_NONE: number = 0;\n  public static DURATION_NONE: number = 0;\n  public static DURATION_DEFAULT_UNIT: string = 'minutes';\n\n  public static MAX_EVENTS_PER_DAY: number = 24;\n\n  public static WEEK_OF_MONTH_MINIMUM_WEEKDAY: number = 4; // Thursday by default\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","\n\nexport enum Units\n{\n  DAY,\n  WEEK,\n  MONTH,\n  YEAR\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Units.ts","\nimport { Day } from './Day';\nimport { Suffix } from './Suffix';\nimport { Weekday } from './Weekday';\nimport { ScheduleInput } from './Schedule';\nimport { Functions as fn } from './Functions';\n\n\n/**\n *\n */\nexport type DescribePattern = (day: Day) => string;\n\n/**\n *\n */\nexport type PatternRule =\n  number |                          // has array with this number of elements\n  number[] |                        // is array with same values\n  boolean |                         // is true or false\n  {every: number, offset?: number}; // is object with matching every and offset\n\n/**\n *\n */\nexport interface PatternRules {\n  dayOfWeek?: PatternRule;\n  dayOfMonth?: PatternRule;\n  dayOfYear?: PatternRule;\n  month?: PatternRule;\n  week?: PatternRule;\n  year?: PatternRule;\n  weekOfYear?: PatternRule;\n  weekspanOfYear?: PatternRule;\n  fullWeekOfYear?: PatternRule;\n  weekOfMonth?: PatternRule;\n  weekspanOfMonth?: PatternRule;\n  fullWeekOfMonth?: PatternRule;\n}\n\n\n/**\n *\n */\nexport class Pattern\n{\n\n  public static PROPS: string[] = [\n    'dayOfWeek', 'dayOfMonth', 'dayOfYear', 'month', 'week', 'year', 'weekOfYear', 'weekspanOfYear', 'fullWeekOfYear', 'weekOfMonth', 'weekspanOfMonth', 'fullWeekOfMonth'\n  ];\n\n  public listed: boolean;\n  public describe: DescribePattern;\n  public name: string;\n  public rules: PatternRules;\n\n  public constructor(name: string, listed: boolean, describe: DescribePattern, rules: PatternRules)\n  {\n    this.name = name;\n    this.listed = listed;\n    this.describe = describe;\n    this.rules = rules;\n  }\n\n  public apply(input: ScheduleInput, day: Day): ScheduleInput\n  {\n    for (let prop of Pattern.PROPS)\n    {\n      let rule = this.rules[ prop ];\n\n      // Should have one value\n      if (rule === 1)\n      {\n        input[ prop ] = [day[ prop ]];\n      }\n\n      // Can be any of the values in the array\n      if (fn.isArray(rule))\n      {\n        input[ prop ] = rule;\n      }\n\n      // Must not be present\n      if (!fn.isDefined(rule))\n      {\n        delete input[ prop ];\n      }\n    }\n\n    return input;\n  }\n\n  public isMatch(input: ScheduleInput, exactlyWith?: Day): boolean\n  {\n    let exactly: boolean = fn.isDefined( exactlyWith );\n\n    for (let prop of Pattern.PROPS)\n    {\n      let rule = this.rules[ prop ];\n      let curr = input[ prop ];\n\n      // Optional, skip it\n      if (rule === false)\n      {\n        continue;\n      }\n\n      // Requires any value\n      if (rule === true && !curr)\n      {\n        return false;\n      }\n\n      // Must not be present\n      if (!fn.isDefined(rule) && curr)\n      {\n        return false;\n      }\n\n      // Must be an array of the same size\n      if (fn.isNumber(rule))\n      {\n        if (fn.isArray(curr) && curr.length === rule)\n        {\n          if (exactly && curr.indexOf( exactlyWith[ prop ] ) === -1)\n          {\n            return false;\n          }\n        }\n        else\n        {\n          return false;\n        }\n      }\n\n      // Must be an array of the same values\n      if (fn.isArray(rule))\n      {\n        if (!fn.isArray(curr))\n        {\n          return false;\n        }\n\n        if (rule.length !== curr.length)\n        {\n          return false;\n        }\n\n        for (var i = 0; i < rule.length; i++)\n        {\n          if (rule[ i ] !== curr[ i ])\n          {\n            return false;\n          }\n        }\n\n        if (exactly && rule.indexOf( exactlyWith[ prop ] ) === -1)\n        {\n          return false;\n        }\n      }\n\n      // Must be an object with same over & offset.\n      if (fn.isObject(rule))\n      {\n        if (!fn.isObject(curr))\n        {\n          return false;\n        }\n\n        var ruleOffset = rule.offset || 0;\n        var currOffset = curr.offset || 0;\n\n        if (currOffset !== ruleOffset || curr.every !== rule.every)\n        {\n          return false;\n        }\n\n        if (exactly && (exactlyWith[ prop ] % rule.every) !== ruleOffset)\n        {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public static withName(name: string): Pattern\n  {\n    return PatternMap[ name ];\n  }\n\n  public static findMatch(input: ScheduleInput, listedOnly: boolean = true, exactlyWith?: Day): Pattern\n  {\n    for (let pattern of Patterns)\n    {\n      if ((pattern.listed || !listedOnly) && pattern.isMatch( input, exactlyWith ))\n      {\n        return pattern;\n      }\n    }\n\n    return null;\n  }\n\n\n}\n\nexport let Patterns: Pattern[] = [\n  new Pattern(\n    'none', true,\n    (day: Day) => 'Does not repeat',\n    {\n      year: 1,\n      month: 1,\n      dayOfMonth: 1\n    }\n  ),\n  new Pattern(\n    'daily', true,\n    (day: Day) => 'Daily',\n    {\n\n    }\n  ),\n  new Pattern(\n    'weekly', true,\n    (day: Day) =>  'Weekly on ' + day.format('dddd'),\n    {\n      dayOfWeek: 1\n    }\n  ),\n  new Pattern(\n    'monthlyWeek', true,\n    (day: Day) => 'Monthly on the ' + Suffix.CACHE[day.weekspanOfMonth + 1] + ' ' + day.format('dddd'),\n    {\n      dayOfWeek: 1,\n      weekspanOfMonth: 1\n    }\n  ),\n  new Pattern(\n    'annually', true,\n    (day: Day) => 'Annually on ' + day.format('MMMM Do'),\n    {\n      month: 1,\n      dayOfMonth: 1\n    }\n  ),\n  new Pattern(\n    'annuallyMonthWeek', true,\n    (day: Day) => 'Annually on the ' + Suffix.CACHE[day.weekspanOfMonth + 1] + ' ' + day.format('dddd') + ' of ' + day.format('MMMM'),\n    {\n      month: 1,\n      dayOfWeek: 1,\n      weekspanOfMonth: 1\n    }\n  ),\n  new Pattern(\n    'weekday', true,\n    (day: Day) => 'Every weekday (Monday to Friday)',\n    {\n      dayOfWeek: [Weekday.MONDAY, Weekday.TUESDAY, Weekday.WEDNESDAY, Weekday.THURSDAY, Weekday.FRIDAY]\n    }\n  ),\n  new Pattern(\n    'monthly', true,\n    (day: Day) => 'Monthly on the ' + day.format('Do') + ' day',\n    {\n      dayOfMonth: 1\n    }\n  ),\n  new Pattern(\n    'custom', true,\n    (day: Day) => 'Custom...',\n    {\n      dayOfWeek: false,\n      dayOfMonth: false,\n      dayOfYear: false,\n      month: false,\n      week: false,\n      year: false,\n      weekOfYear: false,\n      weekspanOfYear: false,\n      fullWeekOfYear: false,\n      weekOfMonth: false,\n      weekspanOfMonth: false,\n      fullWeekOfMonth: false\n    }\n  )\n];\n\nexport let PatternMap: { [name: string]: Pattern } = {};\n\nfor (let pattern of Patterns)\n{\n  PatternMap[ pattern.name ] = pattern;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Pattern.ts","\nimport { Day } from './Day';\nimport { Op } from './Op';\nimport { Units } from './Units';\n\n\nexport class DaySpan {\n\n  public start: Day;\n  public end: Day;\n\n  public constructor(start: Day, end: Day) {\n    this.start = start;\n    this.end = end;\n  }\n\n  public get isPoint(): boolean {\n    return this.start.time === this.end.time;\n  }\n\n  public contains(day: Day): boolean {\n    return day.time >= this.start.time && day.time <= this.end.time;\n  }\n\n  public matchesDay(day: Day): boolean {\n    return this.contains( day ) || day.sameDay( this.start ) || day.sameDay( this.end );\n  }\n\n  public matchesWeek(day: Day): boolean {\n    return this.contains( day ) || day.sameWeek( this.start ) || day.sameWeek( this.end );\n  }\n\n  public matchesMonth(day: Day): boolean {\n    return this.contains( day ) || day.sameMonth( this.start ) || day.sameMonth( this.end );\n  }\n\n  public matchesYear(day: Day): boolean {\n    return this.contains( day ) || day.sameYear( this.start ) || day.sameYear( this.end );\n  }\n\n\n  public millis(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.millisBetween(this.end, op, absolute);\n  }\n\n  public seconds(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.secondsBetween(this.end, op, absolute);\n  }\n\n  public minutes(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.minutesBetween(this.end, op, absolute);\n  }\n\n  public hours(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.hoursBetween(this.end, op, absolute);\n  }\n\n  public days(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.daysBetween(this.end, op, absolute);\n  }\n\n  public weeks(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.weeksBetween(this.end, op, absolute);\n  }\n\n  public months(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.monthsBetween(this.end, op, absolute);\n  }\n\n  public years(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.yearsBetween(this.end, op, absolute);\n  }\n\n  public summary(type: Units, dayOfWeek: boolean = true, short: boolean = false, repeat: boolean = false, contextual: boolean = true, delimiter: string = ' - '): string\n  {\n    let formats = DaySpan.SUMMARY_FORMATS[ type ];\n    let today: Day = Day.today();\n    let showStartYear: boolean = !contextual || !this.start.sameYear( today );\n    let showEndYear: boolean = !contextual || !this.end.sameYear( today );\n    let start: string = this.start.format( formats(short, dayOfWeek, showStartYear) );\n    let end: string = this.end.format( formats(short, dayOfWeek, showEndYear) );\n    let summary: string = start;\n\n    if (start !== end)\n    {\n      if (!repeat)\n      {\n        summary = this.start.format( formats(short, dayOfWeek, !this.start.sameYear(this.end)) );\n      }\n\n      summary += delimiter;\n      summary += end;\n    }\n    else\n    {\n      summary = start;\n    }\n\n    return summary;\n  }\n\n  public intersects(span: DaySpan): boolean {\n    return !(\n      this.end.time < span.start.time ||\n      this.start.time > span.end.time\n    );\n  }\n\n  public intersection(span: DaySpan): DaySpan {\n    let start: number = Math.max(this.start.time, span.start.time);\n    let end: number = Math.min(this.end.time, span.end.time);\n\n    return start >= end ? null : new DaySpan(Day.unix(start), Day.unix(end));\n  }\n\n  public static point(day: Day): DaySpan {\n    return new DaySpan( day, day );\n  }\n\n\n  public static SUMMARY_FORMATS =\n  {\n    [Units.DAY]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\n    },\n    [Units.WEEK]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\n    },\n    [Units.MONTH]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (short ? 'MMM' : 'MMMM') + (year ? ' YYYY' : '');\n    },\n    [Units.YEAR]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (year ? 'YYYY' : '');\n    }\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DaySpan.ts","\nexport class Suffix\n{\n\n  public static MAP: string[] = [\n    'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'\n  ];\n\n  private static _CACHE: string[];\n\n  private static _CACHE_SIZE: number = 366;\n\n  public static get CACHE(): string[]\n  {\n    if (!this._CACHE)\n    {\n      this._CACHE = [];\n\n      for (let i = 0; i < this._CACHE_SIZE; i++)\n      {\n        this._CACHE[ i ] = this.get( i, true );\n      }\n    }\n\n    return this._CACHE;\n  }\n\n  public static determine(value: number): string\n  {\n    return value >= 11 && value <= 13 ? 'th' : this.MAP[ value % this.MAP.length ];\n  }\n\n  public static get(value: number, append: boolean = false): string\n  {\n    let suffix: string = this.determine(value);\n    return append ? value + suffix : suffix;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Suffix.ts","\nimport { Functions as fn } from './Functions';\nimport { FrequencyValue, FrequencyCheck, FrequencyValueEvery, FrequencyValueOneOf } from './Types';\nimport { Day, DayInput, DurationInput } from './Day';\nimport { DaySpan } from './DaySpan';\nimport { Constants } from './Constants';\nimport { Parse } from './Parse';\nimport { Time, TimeInput } from './Time';\nimport { Suffix } from './Suffix';\n// @ts-ignore\nimport * as moment from 'moment';\n\n\nexport interface ScheduleInput\n{\n  start?: DayInput;\n  end?: DayInput;\n  on?: DayInput;\n  duration?: number;\n  durationUnit?: DurationInput;\n  exclude?: DayInput[];\n  month?: FrequencyValue;\n  year?: FrequencyValue;\n  week?: FrequencyValue;\n  times?: TimeInput[];\n  dayOfWeek?: FrequencyValue;\n  dayOfMonth?: FrequencyValue;\n  dayOfYear?: FrequencyValue;\n  weekOfYear?: FrequencyValue;\n  weekspanOfYear?: FrequencyValue;\n  fullWeekOfYear?: FrequencyValue;\n  weekOfMonth?: FrequencyValue;\n  weekspanOfMonth?: FrequencyValue;\n  fullWeekOfMonth?: FrequencyValue;\n}\n\nexport type ScheduleExclusions = { [dayIdentifier: number]: boolean };\n\n\nexport class Schedule\n{\n\n  public start: Day;\n  public end: Day;\n  public endWithDuration: Day;\n  public duration: number;\n  public durationUnit: DurationInput;\n  public times: Time[];\n  public durationInDays: number;\n  public exclude: ScheduleExclusions;\n  public dayOfWeek: FrequencyCheck;\n  public dayOfMonth: FrequencyCheck;\n  public dayOfYear: FrequencyCheck;\n  public month: FrequencyCheck;\n  public week: FrequencyCheck;\n  public weekOfYear: FrequencyCheck;\n  public weekspanOfYear: FrequencyCheck;\n  public fullWeekOfYear: FrequencyCheck;\n  public weekOfMonth: FrequencyCheck;\n  public weekspanOfMonth: FrequencyCheck;\n  public fullWeekOfMonth: FrequencyCheck;\n  public year: FrequencyCheck;\n\n  public constructor(input?: ScheduleInput)\n  {\n    if (fn.isDefined(input))\n    {\n      this.set(input);\n    }\n  }\n\n  public get lastTime(): Time\n  {\n    return this.times[ this.times.length - 1 ];\n  }\n\n  public set(input: ScheduleInput): this\n  {\n    Parse.schedule(input, this);\n\n    return this;\n  }\n\n  public updateDurationInDays(): this\n  {\n    this.durationInDays = !this.lastTime ? 0 : Math.max(0,\n      Math.ceil(\n        moment.duration(this.lastTime.toMilliseconds(), 'milliseconds')\n          .add(this.duration, this.durationUnit)\n          .subtract(1, 'day')\n          .asDays()\n      )\n    );\n\n    return this;\n  }\n\n  public matchesSpan(day: Day): boolean\n  {\n    return (this.start === null || day.isSameOrAfter(this.start)) &&\n      (this.end === null || day.isBefore(this.endWithDuration));\n  }\n\n  public matchesRange(start: Day, end: Day): boolean\n  {\n    return (this.start === null || start.isSameOrBefore(this.start)) &&\n      (this.end === null || end.isBefore(this.endWithDuration));\n  }\n\n  public isExcluded(day: Day): boolean\n  {\n    return !!this.exclude[ day.dayIdentifier ];\n  }\n\n  public isIncluded(day: Day): boolean\n  {\n    return !this.exclude[ day.dayIdentifier ];\n  }\n\n  public matchesDay(day: Day): boolean\n  {\n    return this.isIncluded( day ) &&\n      this.matchesSpan( day ) &&\n      this.dayOfWeek( day.dayOfWeek ) &&\n      this.dayOfMonth( day.dayOfMonth ) &&\n      this.dayOfYear( day.dayOfYear ) &&\n      this.year( day.year ) &&\n      this.month( day.month ) &&\n      this.week( day.week ) &&\n      this.weekOfYear( day.weekOfYear ) &&\n      this.weekspanOfYear( day.weekspanOfYear ) &&\n      this.fullWeekOfYear( day.fullWeekOfYear ) &&\n      this.weekOfMonth( day.weekOfMonth ) &&\n      this.weekspanOfMonth( day.weekspanOfMonth ) &&\n      this.fullWeekOfMonth( day.fullWeekOfMonth );\n  }\n\n  /**\n   * Determines if the given day is covered by this schedule. A schedule can\n   * specify events that span multiple days - so even though the day does not\n   * match the starting day of a span - it can be a day that is within the\n   * schedule.\n   *\n   * @param day The day to test.\n   * @param\n   */\n  public coversDay(day: Day): boolean\n  {\n    let before: number = this.durationInDays;\n\n    while (before >= 0)\n    {\n      if (this.matchesDay(day))\n      {\n        return true;\n      }\n\n      day = day.prev();\n      before--;\n    }\n\n    return false;\n  }\n\n  public nextDay(day: Day, includeDay: boolean = false, lookAhead: number = 366): Day\n  {\n    let next: Day = null;\n\n    this.iterateDays(day, 1, true, d => next = d, includeDay, lookAhead);\n\n    return next;\n  }\n\n  public nextDays(day: Day, max: number, includeDay: boolean = false, lookAhead: number = 366): Day[]\n  {\n    let nexts: Day[] = [];\n\n    this.iterateDays(day, max, true, d => nexts.push(d), includeDay, lookAhead);\n\n    return nexts;\n  }\n\n  public prevDay(day: Day, includeDay: boolean = false, lookBack: number = 366): Day\n  {\n    let prev: Day = null;\n\n    this.iterateDays(day, 1, false, d => prev = d, includeDay, lookBack);\n\n    return prev;\n  }\n\n  public prevDays(day: Day, max: number, includeDay: boolean = false, lookBack: number = 366): Day[]\n  {\n    let prevs: Day[] = [];\n\n    this.iterateDays(day, max, false, d => prevs.push(d), includeDay, lookBack);\n\n    return prevs;\n  }\n\n  public iterateDays(day: Day, max: number, next: boolean, onDay: (day: Day) => any, includeDay: boolean = false, lookup: number = 366): this\n  {\n    let iterated: number = 0;\n\n    for (let days = 0; days < lookup; days++)\n    {\n      if (!includeDay || days > 0)\n      {\n        day = next ? day.next() : day.prev();\n      }\n\n      if (this.matchesDay(day))\n      {\n        if (onDay( day ) === false)\n        {\n          break;\n        }\n\n        if (++iterated >= max)\n        {\n          break;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  public matchesTime(day: Day): boolean\n  {\n    if (!this.matchesDay( day ))\n    {\n      return false;\n    }\n\n    for (let time of this.times)\n    {\n      if (day.sameTime(time))\n      {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public isFullDay(): boolean\n  {\n    return this.times.length === 0 || this.duration === Constants.DURATION_NONE;\n  }\n\n  public getSpansOver(day: Day): DaySpan[]\n  {\n    let spans: DaySpan[] = [];\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      if (this.matchesDay(day))\n      {\n        spans.push(DaySpan.point(start));\n      }\n    }\n    else\n    {\n      let behind: number = this.durationInDays;\n\n      while (behind >= 0)\n      {\n        if (this.matchesDay(day))\n        {\n          for (let time of this.times)\n          {\n            let hourStart: Day = day.withTime(time);\n            let hourEnd: Day = hourStart.add(this.duration, this.durationUnit);\n            let hourSpan: DaySpan = new DaySpan( hourStart, hourEnd );\n\n            if (hourSpan.matchesDay(start))\n            {\n              spans.push( hourSpan );\n            }\n          }\n        }\n\n        day = day.prev();\n        behind--;\n      }\n    }\n    return spans;\n  }\n\n  public getSpanOver(day: Day): DaySpan\n  {\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      return DaySpan.point(start);\n    }\n    else\n    {\n      let behind: number = this.durationInDays;\n\n      while (behind >= 0)\n      {\n        if (this.matchesDay(day))\n        {\n          return DaySpan.point(day);\n        }\n\n        day = day.prev();\n        behind--;\n      }\n    }\n\n    return null;\n  }\n\n  public getSpansOn(day: Day, check: boolean = false): DaySpan[]\n  {\n    let spans: DaySpan[] = [];\n\n    if (check && !this.matchesDay(day))\n    {\n      return spans;\n    }\n\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      spans.push(DaySpan.point(start));\n    }\n    else\n    {\n      for (let time of this.times)\n      {\n        let hourStart: Day = day.withTime(time);\n        let hourEnd: Day = hourStart.add(this.duration, this.durationUnit);\n        let hourSpan: DaySpan = new DaySpan( hourStart, hourEnd );\n\n        spans.push(hourSpan);\n      }\n    }\n\n    return spans;\n  }\n\n  public getExclusions(returnDays: boolean = true)\n  {\n    let exclusions: DayInput[] = [];\n\n    for (let dayIdentifierKey in this.exclude)\n    {\n      let dayIdentifier: number = parseInt(dayIdentifierKey);\n\n      exclusions.push( returnDays ? Day.fromDayIdentifier(dayIdentifier)  : dayIdentifier );\n    }\n\n    return exclusions;\n  }\n\n  public toInput(returnDays: boolean = false, returnTimes: boolean = false, timeFormat: string = ''): ScheduleInput\n  {\n    let out: ScheduleInput = {};\n    let exclusions: DayInput[] = this.getExclusions( returnDays );\n    let times: TimeInput[]  = [];\n\n    for (let time of this.times)\n    {\n      times.push( returnTimes ? time : (timeFormat ? time.format( timeFormat ) : time.toString()) );\n    }\n\n    if (this.start) out.start = returnDays ? this.start : this.start.time;\n    if (this.end) out.end = returnDays ? this.end : this.end.time;\n    if (this.duration !== Constants.DURATION_NONE) out.duration = this.duration;\n    if (this.durationUnit !== Constants.DURATION_DEFAULT_UNIT) out.durationUnit = this.durationUnit;\n    if (this.dayOfWeek.input) out.dayOfWeek = this.dayOfWeek.input;\n    if (this.dayOfMonth.input) out.dayOfMonth = this.dayOfMonth.input;\n    if (this.dayOfYear.input) out.dayOfYear = this.dayOfYear.input;\n    if (this.month.input) out.month = this.month.input;\n    if (this.week.input) out.week = this.week.input;\n    if (this.weekOfYear.input) out.weekOfYear = this.weekOfYear.input;\n    if (this.weekspanOfYear.input) out.weekspanOfYear = this.weekspanOfYear.input;\n    if (this.fullWeekOfYear.input) out.fullWeekOfYear = this.fullWeekOfYear.input;\n    if (this.weekOfMonth.input) out.weekOfMonth = this.weekOfMonth.input;\n    if (this.weekspanOfMonth.input) out.weekspanOfMonth = this.weekspanOfMonth.input;\n    if (this.fullWeekOfMonth.input) out.fullWeekOfMonth = this.fullWeekOfMonth.input;\n    if (this.year.input) out.year = this.year.input;\n    if (times.length) out.times = times;\n    if (exclusions.length) out.exclude = exclusions;\n\n    return out;\n  }\n\n  public describe(thing: string = 'event',\n    includeRange: boolean = true,\n    includeTimes: boolean = true,\n    includeDuration: boolean = false,\n    includeExcludes: boolean = false): string\n  {\n    let out: string = '';\n\n    if (includeRange)\n    {\n      if (this.start)\n      {\n        out += 'Starting on ' + this.start.format('dddd Do, YYYY');\n\n        if (this.end)\n        {\n          out += ' and ending on ' + this.end.format('dddd Do, YYYY');\n        }\n      }\n      else if (this.end)\n      {\n        out += 'Up until ' + this.end.format('dddd Do, YYYY');\n      }\n    }\n\n    if (out)\n    {\n      out += ' the ' + thing + ' will occur';\n    }\n    else\n    {\n      out += 'The ' + thing + ' will occur';\n    }\n\n    out += this.describeRule( this.dayOfWeek.input, 'day of the week', x => moment.weekdays()[x], 1, false);\n    out += this.describeRule( this.dayOfMonth.input, 'day of the month', x => Suffix.CACHE[x] );\n    out += this.describeRule( this.dayOfYear.input, 'day of the year', x => Suffix.CACHE[x], 1 );\n    out += this.describeRule( this.month.input, 'month', x => moment.months()[x], 0, false, ' in ' );\n    out += this.describeRule( this.weekOfYear.input, 'week of the year', x => Suffix.CACHE[x] );\n    out += this.describeRule( this.weekspanOfYear.input, 'weekspan of the year', x => Suffix.CACHE[x + 1], 1 );\n    out += this.describeRule( this.fullWeekOfYear.input, 'full week of the year', x => Suffix.CACHE[x] );\n    out += this.describeRule( this.weekOfMonth.input, 'week of the month', x => Suffix.CACHE[x] );\n    out += this.describeRule( this.fullWeekOfMonth.input, 'full week of the month', x => Suffix.CACHE[x] );\n    out += this.describeRule( this.weekspanOfMonth.input, 'weekspan of the month', x => Suffix.CACHE[x + 1], 1 );\n    out += this.describeRule( this.year.input, 'year', x => x, 0, false, ' in ' );\n\n    if (includeTimes && this.times.length)\n    {\n      out += ' at ';\n      out += this.describeArray( this.times, x => x.format('hh:mm a') );\n    }\n\n    if (includeDuration && this.duration !== Constants.DURATION_NONE)\n    {\n      out += ' lasting ' + this.duration + ' ';\n\n      if (this.durationUnit)\n      {\n        out += this.durationUnit + ' ';\n      }\n    }\n\n    if (includeExcludes)\n    {\n      let excludes: Day[] = <Day[]>this.getExclusions( true );\n\n      if (excludes.length)\n      {\n        out += ' excluding ';\n        out += this.describeArray( excludes, x => x.format('MM/DD/YYYY') );\n      }\n    }\n\n    return out;\n  }\n\n  private describeRule(value: FrequencyValue, unit: string, map: (x: number) => any, everyOffset: number = 0, the: boolean = true, on: string = ' on ', required: boolean = false): string\n  {\n    let out: string = '';\n    let suffix: string = the ? ' ' + unit : '';\n\n    if (fn.isFrequencyValueEvery(value))\n    {\n      let valueEvery: FrequencyValueEvery = <FrequencyValueEvery>value;\n\n      out += ' every ' + Suffix.CACHE[ valueEvery.every ] + ' ' + unit;\n\n      if (valueEvery.offset)\n      {\n        out += ' starting at ' + map( valueEvery.offset + everyOffset ) + suffix;\n      }\n    }\n    else if (fn.isFrequencyValueOneOf(value))\n    {\n      let valueOne: FrequencyValueOneOf = <FrequencyValueOneOf>value;\n\n      if (valueOne.length)\n      {\n        out += on + (the ? 'the ' : '');\n        out += this.describeArray( valueOne, map );\n        out += suffix;\n      }\n    }\n    else if (required)\n    {\n      out +=  on + 'any ' + unit;\n    }\n\n    return out;\n  }\n\n  private describeArray<T>(array: T[], map: (item: T) => string): string\n  {\n    let out: string = '';\n    let last: number = array.length - 1;\n\n    out += map( array[ 0 ] );\n\n    for (let i = 1; i < last; i++)\n    {\n      out += ', ' + map( array[ i ] );\n    }\n\n    if (last > 0)\n    {\n      out += ' and ' + map( array[ last ] );\n    }\n\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Schedule.ts","\nimport { Functions as fn } from './Functions';\nimport { Constants } from './Constants';\nimport { Parse } from './Parse';\n\n\nexport type TimeInput = number | string | {hour: number, minute?: number, second?: number, millisecond?: number};\n\nexport class Time\n{\n\n  public static REGEX = /^(\\d\\d?):?(\\d\\d)?:?(\\d\\d)?\\.?(\\d\\d\\d)?$/;\n\n  public hour: number;\n  public minute: number;\n  public second: number;\n  public millisecond: number;\n\n  public constructor(hour: number, minute: number = Constants.MINUTE_MIN, second: number = Constants.SECOND_MIN, millisecond: number = Constants.MILLIS_MIN)\n  {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond;\n  }\n\n  public format(format: string): string\n  {\n    let formatterEntries = Time.FORMATTERS;\n    let out: string = '';\n\n    for (let i = 0; i < format.length; i++)\n    {\n      let handled: boolean = false;\n\n      for (let k = 0; k < formatterEntries.length && !handled; k++)\n      {\n        let entry = formatterEntries[ k ];\n        let part: string = format.substring( i, i + entry.size );\n\n        if (part.length === entry.size)\n        {\n          let formatter = entry.formats[ part ];\n\n          if (formatter)\n          {\n            out += formatter(this);\n            i += entry.size - 1;\n            handled = true;\n          }\n        }\n      }\n\n      if (!handled)\n      {\n        out += format.charAt(i);\n      }\n    }\n\n    return out;\n  }\n\n  public toMilliseconds(): number\n  {\n    return this.hour * Constants.MILLIS_IN_HOUR +\n      this.minute * Constants.MILLIS_IN_MINUTE +\n      this.second * Constants.MILLIS_IN_SECOND +\n      this.millisecond;\n  }\n\n  public toString(): string\n  {\n    if (this.millisecond) return this.format('HH:mm:ss.SSS');\n    if (this.second) return this.format('HH:mm:ss');\n    if (this.minute) return this.format('HH:mm');\n\n    return this.format('HH');\n  }\n\n  public toIdentifer(): number\n  {\n    return this.hour +\n      this.minute * 100 +\n      this.second * 10000 +\n      this.millisecond * 10000000;\n  }\n\n  public toObject(): TimeInput\n  {\n    let out: TimeInput = {\n      hour: this.hour\n    };\n\n    if (this.minute) out.minute = this.minute;\n    if (this.second) out.second = this.second;\n    if (this.millisecond) out.millisecond = this.millisecond;\n\n    return out;\n  }\n\n  public static parse(input: any): Time\n  {\n    return Parse.time(input);\n  }\n\n  public static fromString(time: string): Time\n  {\n    let matches: string[] = this.REGEX.exec( time );\n\n    if (!matches)\n    {\n      return null;\n    }\n\n    let h: number = parseInt(matches[1]) || 0;\n    let m: number = parseInt(matches[2]) || 0;\n    let s: number = parseInt(matches[3]) || 0;\n    let l: number = parseInt(matches[4]) || 0;\n\n    return this.build(h, m, s, l);\n  }\n\n  public static fromIdentifier(time: number): Time\n  {\n    let h: number = time % 100;\n    let m: number = Math.floor(time / 100) % 100;\n    let s: number = Math.floor(time / 10000) % 100;\n    let l: number = Math.floor(time / 10000000) % 1000;\n\n    return this.build(h, m, s, l);\n  }\n\n  public static build(hour: number, minute: number = Constants.MINUTE_MIN, second: number = Constants.SECOND_MIN, millisecond: number = Constants.MILLIS_MIN): Time\n  {\n    return new Time(hour, minute, second, millisecond)\n  }\n\n  public static FORMATTERS = [\n    {\n      size: 3,\n      formats: {\n        SSS: (t: Time) => fn.padNumber(t.millisecond, 3)\n      }\n    },\n    {\n      size: 2,\n      formats: {\n        HH: (t: Time) => fn.padNumber(t.hour, 2),\n        hh: (t: Time) => fn.padNumber((t.hour % 12) || 12, 2),\n        kk: (t: Time) => fn.padNumber(t.hour + 1, 2),\n        mm: (t: Time) => fn.padNumber(t.minute, 2),\n        ss: (t: Time) => fn.padNumber(t.second, 2),\n        SS: (t: Time) => fn.padNumber(t.millisecond, 3, 2)\n      }\n    },\n    {\n      size: 1,\n      formats: {\n        A: (t: Time) => t.hour < 12 ? 'AM' : 'PM',\n        a: (t: Time) => t.hour < 12 ? 'am' : 'pm',\n        H: (t: Time) => t.hour + '',\n        h: (t: Time) => ((t.hour % 12) || 12) + '',\n        k: (t: Time) => (t.hour + 1) + '',\n        m: (t: Time) => t.minute + '',\n        s: (t: Time) => t.second + '',\n        S: (t: Time) => fn.padNumber(t.millisecond, 3, 1)\n      }\n    }\n  ];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Time.ts","\nimport { Functions as fn } from './Functions';\nimport { FrequencyCheck } from './Types';\nimport { Schedule, ScheduleInput, ScheduleExclusions } from './Schedule';\nimport { Constants } from './Constants';\nimport { Day, DayInput, DurationInput } from './Day';\nimport { CalendarScheduleInput, CalendarSchedule } from './Calendar';\nimport { Time } from './Time';\n\n\n/**\n * The class which takes user input and parses it to specific structures.\n */\nexport class Parse\n{\n\n  public static frequency(input: any, otherwiseEvery: number = 1, otherwiseOffset: number = 0): FrequencyCheck\n  {\n    let check: FrequencyCheck = (value: number) => {\n      return value % otherwiseEvery === otherwiseOffset;\n    };\n\n    if (fn.isFrequencyValueEvery(input))\n    {\n      let offset: number = input.offset || 0;\n      let every: number = input.every;\n\n      check = (value: number) => {\n        return value % every === offset;\n      };\n    }\n\n    if (fn.isFrequencyValueOneOf(input))\n    {\n      let map: object = {};\n\n      for (let i = 0; i < input.length; i++) {\n        map[ input[ i ] ] = true;\n      }\n\n      check = (value: number) => {\n        return !!map[ value ];\n      };\n    }\n\n    check.input = input;\n\n    return check;\n  }\n\n  public static utc(input: any, otherwise: number): number\n  {\n    if (fn.isNumber(input))\n    {\n      return input;\n    }\n\n    if (input instanceof Day)\n    {\n      return input.time;\n    }\n\n    return otherwise;\n  }\n\n  public static day(input: DayInput): Day\n  {\n    if (fn.isNumber(input))\n    {\n      return Day.unix( <number>input );\n    }\n    else if (fn.isString(input))\n    {\n      return Day.parse( input );\n    }\n    else if (input instanceof Day)\n    {\n      return input;\n    }\n    else if (fn.isArray( input ))\n    {\n      return Day.fromArray( <number[]>input );\n    }\n    else if (fn.isObject( input ))\n    {\n      return Day.fromObject( <object>input );\n    }\n    else if (input === true)\n    {\n      return Day.today();\n    }\n\n    return null;\n  }\n\n  public static time(input: any): Time\n  {\n    if (input instanceof Time)\n    {\n      return input;\n    }\n    if (fn.isNumber(input))\n    {\n      return Time.fromIdentifier( <number>input );\n    }\n    if (fn.isString(input))\n    {\n      return Time.fromString( <string>input );\n    }\n    if (fn.isObject(input) && fn.isNumber(input.hour))\n    {\n      return new Time(input.hour, input.minute, input.second, input.millisecond);\n    }\n\n    return null;\n  }\n\n  public static times(input: any): Time[]\n  {\n    let times: Time[] = [];\n\n    if (fn.isArray(input))\n    {\n      for (let timeInput of input)\n      {\n        let time = this.time( timeInput );\n\n        if (time)\n        {\n          times.push( time );\n        }\n      }\n    }\n\n    return times;\n  }\n\n  public static exclusions(input: any): ScheduleExclusions\n  {\n    let exclusions: ScheduleExclusions = {};\n\n    if (fn.isArray(input))\n    {\n      for (let dayIdentifier of input)\n      {\n        if (fn.isNumber(dayIdentifier))\n        {\n          exclusions[ dayIdentifier ] = true;\n        }\n        else\n        {\n          let day: Day = this.day( dayIdentifier );\n\n          if (day)\n          {\n            exclusions[ day.dayIdentifier ] = true;\n          }\n        }\n      }\n    }\n\n    return exclusions;\n  }\n\n  public static schedule(input: ScheduleInput, out: Schedule = new Schedule()): Schedule\n  {\n    let on = this.day( input.on );\n\n    if (on)\n    {\n      input.start = on.start();\n      input.end = on.end();\n      input.year = [on.year];\n      input.month = [on.month];\n      input.dayOfMonth = [on.dayOfMonth];\n    }\n\n    out.duration = fn.coalesce( input.duration, Constants.DURATION_NONE );\n    out.durationUnit = <DurationInput>fn.coalesce( input.durationUnit, Constants.DURATION_DEFAULT_UNIT );\n    out.start = this.day( input.start );\n    out.end = this.day( input.end );\n    out.endWithDuration = out.end ? out.end.add(out.duration, out.durationUnit) : null;\n    out.dayOfWeek = this.frequency( input.dayOfWeek );\n    out.dayOfMonth = this.frequency( input.dayOfMonth );\n    out.dayOfYear = this.frequency( input.dayOfYear );\n    out.month = this.frequency( input.month );\n    out.week = this.frequency( input.week );\n    out.weekOfYear = this.frequency( input.weekOfYear );\n    out.weekspanOfYear = this.frequency( input.weekspanOfYear );\n    out.fullWeekOfYear = this.frequency( input.fullWeekOfYear );\n    out.weekOfMonth = this.frequency( input.weekOfMonth );\n    out.weekspanOfMonth = this.frequency( input.weekspanOfMonth );\n    out.fullWeekOfMonth = this.frequency( input.fullWeekOfMonth );\n    out.year = this.frequency( input.year );\n    out.times = this.times( input.times );\n    out.exclude = this.exclusions( input.exclude );\n    out.updateDurationInDays();\n\n    return out;\n  }\n\n  public static calendarSchedule<T>(input: CalendarScheduleInput<T>): CalendarSchedule<T>\n  {\n    if (input.schedule instanceof Schedule)\n    {\n      return <CalendarSchedule<T>>input;\n    }\n\n    return {\n      schedule: this.schedule( input.schedule ),\n      event: input.event\n    };\n  }\n\n  public static cron(pattern: string, out: Schedule = new Schedule()): Schedule\n  {\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Parse.ts","\nimport { Constants } from './Constants';\nimport { Op, operate } from './Op';\nimport { Parse } from './Parse';\nimport { Time } from './Time';\n// @ts-ignore\nimport * as moment from 'moment';\n\n\nexport type DurationInput = moment.unitOfTime.DurationConstructor;\n\nexport type DayInput = number | string | Day | number[] | object | true;\n\nexport class Day\n{\n\n  public static readonly LOAD_TIME: Day = Day.now();\n\n  public readonly date: moment.Moment;\n  public readonly time: number;\n  public readonly millis: number;\n  public readonly seconds: number;\n  public readonly minute: number;\n  public readonly hour: number;\n  public readonly month: number;\n  public readonly year: number;\n  public readonly quarter: number;\n\n  public readonly dayOfWeek: number;\n  public readonly dayOfMonth: number;\n  public readonly dayOfYear: number;\n\n  public readonly week: number;\n  public readonly weekOfYear: number;\n  public readonly weekspanOfYear: number;\n  public readonly fullWeekOfYear: number;\n\n  public readonly weekOfMonth: number;\n  public readonly weekspanOfMonth: number;\n  public readonly fullWeekOfMonth: number;\n\n  public readonly dayIdentifier: number;\n  public readonly weekIdentifier: number;\n  public readonly monthIdentifier: number;\n  public readonly quarterIdentifier: number;\n\n\n\n  public constructor(date: moment.Moment) {\n    this.date             = date;\n    this.time             = date.unix();\n    this.millis           = date.millisecond();\n    this.seconds          = date.second();\n    this.minute           = date.minute();\n    this.hour             = date.hour();\n    this.month            = date.month();\n    this.year             = date.year();\n    this.quarter          = date.quarter();\n    this.dayOfWeek        = date.day();\n    this.dayOfMonth       = date.date();\n    this.dayOfYear        = date.dayOfYear();\n    this.week             = date.week();\n\n    this.weekOfYear       = Day.getWeekOfYear( date );\n    this.weekspanOfYear   = Day.getWeekspanOfYear( date );\n    this.fullWeekOfYear   = Day.getFullWeekOfYear( date );\n    this.weekOfMonth      = Day.getWeekOfMonth( date );\n    this.weekspanOfMonth  = Day.getWeekspanOfMonth( date );\n    this.fullWeekOfMonth  = Day.getFullWeekOfMonth( date );\n\n    this.dayIdentifier    = Day.getDayIdentifier( date );\n    this.weekIdentifier   = Day.getWeekIdentifier( date );\n    this.monthIdentifier  = Day.getMonthIdentifier( date );\n    this.quarterIdentifier = Day.getQuarterIdentifier( date );\n  }\n\n  // Same\n\n  public sameDay(day: Day): boolean {\n    return this.dayIdentifier === day.dayIdentifier;\n  }\n\n  public sameMonth(day: Day): boolean {\n    return this.monthIdentifier === day.monthIdentifier;\n  }\n\n  public sameWeek(day: Day): boolean {\n    return this.weekIdentifier === day.weekIdentifier;\n  }\n\n  public sameYear(day: Day): boolean {\n    return this.year === day.year;\n  }\n\n  public sameQuarter(day: Day): boolean {\n    return this.quarterIdentifier === day.quarterIdentifier;\n  }\n\n  public sameHour(day: Day): boolean {\n    return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour;\n  }\n\n  public sameMinute(day: Day): boolean {\n    return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour && this.minute === day.minute;\n  }\n\n  public sameTime(time: Time): boolean {\n    return this.hour === time.hour && this.minute === time.minute && this.seconds === time.second && this.millis === time.millisecond;\n  }\n\n  // Comparison\n\n  public isBefore(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isBefore( day.date, precision );\n  }\n\n  public isSameOrBefore(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isSameOrBefore( day.date, precision );\n  }\n\n  public isAfter(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isAfter( day.date, precision );\n  }\n\n  public isSameOrAfter(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isSameOrAfter( day.date, precision );\n  }\n\n  public max(day: Day): Day {\n    return this.date.isAfter( day.date ) ? this : day;\n  }\n\n  public min(day: Day): Day {\n    return this.date.isBefore( day.date ) ? this : day;\n  }\n\n  // Between\n\n  public millisBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'milliseconds', true ), op, absolute );\n  }\n\n  public secondsBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'seconds', true ), op, absolute );\n  }\n\n  public minutesBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'minutes', true ), op, absolute );\n  }\n\n  public hoursBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'hours', true ), op, absolute );\n  }\n\n  public daysBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'days', true ), op, absolute );\n  }\n\n  public weeksBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'weeks', true ), op, absolute );\n  }\n\n  public monthsBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'months', true ), op, absolute );\n  }\n\n  public yearsBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'years', true ), op, absolute );\n  }\n\n  public isBetween(start: Day, end: Day, inclusive: boolean = true): boolean {\n    return this.date.isBetween(start.date, end.date, null, inclusive ? '[]' : '[)');\n  }\n\n  public mutate(mutator: (date: moment.Moment) => void): Day {\n    var d = this.toMoment();\n    mutator( d );\n    return new Day( d );\n  }\n\n  public add(amount: number, unit: string): Day {\n    return this.mutate(d => d.add(amount, <DurationInput>unit));\n  }\n\n  public relative(millis: number): Day {\n    return this.mutate(d => d.add(millis, 'milliseconds'));\n  }\n\n  // Days\n\n  public relativeDays(days: number): Day {\n    return this.mutate(d => d.add(days, 'days'));\n  }\n\n  public prev(days: number = 1): Day {\n    return this.relativeDays( -days );\n  }\n\n  public next(days: number = 1): Day {\n    return this.relativeDays( days );\n  }\n\n  public withDayOfMonth(day: number): Day {\n    return this.mutate(d => d.date(day));\n  }\n\n  public withDayOfWeek(dayOfWeek: number): Day {\n    return this.mutate(d => d.day(dayOfWeek));\n  }\n\n  public withDayOfYear(dayOfYear: number): Day {\n    return this.mutate(d => d.dayOfYear(dayOfYear));\n  }\n\n  // Month\n\n  public withMonth(month: number): Day {\n    return this.mutate(d => d.month(month));\n  }\n\n  public relativeMonths(months: number): Day {\n    return this.mutate(d => d.add(months, 'months'));\n  }\n\n  public prevMonth(months: number = 1): Day {\n    return this.relativeMonths( -months );\n  }\n\n  public nextMonth(months: number = 1): Day {\n    return this.relativeMonths( months );\n  }\n\n  // Week Of Year\n\n  public withWeek(week: number, relativeWeek: number = this.week): Day {\n    return this.mutate(d => d.add((week - relativeWeek) * Constants.DAYS_IN_WEEK, 'days'));\n  }\n\n  public withWeekOfYear(week: number): Day {\n    return this.withWeek(week, this.weekOfYear);\n  }\n\n  public withFullWeekOfYear(week: number): Day {\n    return this.withWeek(week, this.fullWeekOfYear);\n  }\n\n  public withWeekspanOfYear(week: number): Day {\n    return this.withWeek(week, this.weekspanOfYear);\n  }\n\n  public withWeekOfMonth(week: number): Day {\n    return this.withWeek(week, this.weekOfMonth);\n  }\n\n  public withWeekspanOfMonth(week: number): Day {\n    return this.withWeek(week, this.weekspanOfMonth);\n  }\n\n  public withFullWeekOfMonth(week: number): Day {\n    return this.withWeek(week, this.fullWeekOfMonth);\n  }\n\n  public relativeWeeks(weeks: number): Day {\n    return this.mutate(d => d.add(weeks, 'weeks'));\n  }\n\n  public prevWeek(weeks: number = 1): Day {\n    return this.relativeWeeks( -weeks );\n  }\n\n  public nextWeek(weeks: number = 1): Day {\n    return this.relativeWeeks( weeks );\n  }\n\n  // Year\n\n  public withYear(year: number): Day {\n    return this.mutate(d => d.year(year));\n  }\n\n  public relativeYears(years: number): Day {\n    return this.mutate(d => d.add(years, 'year'));\n  }\n\n  public prevYear(years: number = 1): Day {\n    return this.relativeYears( -years );\n  }\n\n  public nextYear(years: number = 1): Day {\n    return this.relativeYears( years );\n  }\n\n  // Hour\n\n  public withHour(hour: number): Day {\n    return this.mutate(d => d.hour(hour));\n  }\n\n  public relativeHours(hours: number): Day {\n    return this.mutate(d => d.add(hours, 'hours'));\n  }\n\n  public prevHour(hours: number = 1): Day {\n    return this.relativeHours( -hours );\n  }\n\n  public nextHour(hours: number = 1): Day {\n    return this.relativeHours( hours );\n  }\n\n  // Time\n\n  public withTimes(\n      hour: number = Constants.HOUR_MIN,\n      minute: number = Constants.MINUTE_MIN,\n      second: number = Constants.SECOND_MIN,\n      millisecond: number = Constants.MILLIS_MIN): Day {\n    return this.mutate(d => d.set({hour, minute, second, millisecond}));\n  }\n\n  public withTime(time: Time): Day {\n    return this.withTimes(time.hour, time.minute, time.second, time.millisecond);\n  }\n\n  // Start & End\n\n  // Time\n\n  public start(): Day {\n    return this.mutate(d => d.startOf('day'));\n  }\n\n  public isStart(): boolean {\n    return this.hour === Constants.HOUR_MIN &&\n      this.minute === Constants.MINUTE_MIN &&\n      this.seconds === Constants.SECOND_MIN &&\n      this.millis === Constants.MILLIS_MIN;\n  }\n\n  public end(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('day')) :\n      this.mutate(d => d.startOf('day').add(1, 'day'));\n  }\n\n  public isEnd(): boolean {\n    return this.hour === Constants.HOUR_MAX &&\n      this.minute === Constants.MINUTE_MAX &&\n      this.seconds === Constants.SECOND_MAX &&\n      this.millis === Constants.MILLIS_MAX;\n  }\n\n  // Hour\n\n  public startOfHour(): Day {\n    return this.mutate(d => d.startOf('hour'));\n  }\n\n  public isStartOfHour(): boolean {\n    return this.minute === Constants.MINUTE_MIN &&\n      this.seconds === Constants.SECOND_MIN &&\n      this.millis === Constants.MILLIS_MIN;\n  }\n\n  public endOfHour(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('hour')) :\n      this.mutate(d => d.startOf('hour').add(1, 'hour'));\n  }\n\n  public isEndOfHour(): boolean {\n    return this.minute === Constants.MINUTE_MAX &&\n      this.seconds === Constants.SECOND_MAX &&\n      this.millis === Constants.MILLIS_MAX;\n  }\n\n  // Week\n\n  public startOfWeek(): Day {\n    return this.mutate(d => d.startOf('week'));\n  }\n\n  public isStartOfWeek(): boolean {\n    return this.dayOfWeek === Constants.WEEKDAY_MIN;\n  }\n\n  public endOfWeek(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('week')) :\n      this.mutate(d => d.startOf('week').add(1, 'week'));\n  }\n\n  public isEndOfWeek(): boolean {\n    return this.dayOfWeek === Constants.WEEKDAY_MAX;\n  }\n\n  // Month\n\n  public startOfMonth(): Day {\n    return this.mutate(d => d.startOf('month'));\n  }\n\n  public isStartOfMonth(): boolean {\n    return this.dayOfMonth === Constants.DAY_MIN;\n  }\n\n  public endOfMonth(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('month')) :\n      this.mutate(d => d.startOf('month').add(1, 'month'));\n  }\n\n  public isEndOfMonth(): boolean {\n    return this.dayOfMonth === this.daysInMonth();\n  }\n\n  // Year\n\n  public startOfYear(): Day {\n    return this.mutate(d => d.startOf('year'));\n  }\n\n  public isStartOfYear(): boolean {\n    return this.month === Constants.MONTH_MIN && this.dayOfMonth === Constants.DAY_MIN;\n  }\n\n  public endOfYear(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('year')) :\n      this.mutate(d => d.startOf('year').add(1, 'year'));\n  }\n\n  public isEndOfYear(): boolean {\n    return this.month === Constants.MONTH_MAX && this.dayOfMonth === Constants.DAY_MAX;\n  }\n\n  // Days In X\n\n  public daysInMonth(): number {\n    return this.date.daysInMonth();\n  }\n\n  public daysInYear(): number {\n    return this.endOfYear().dayOfYear;\n  }\n\n  public weeksInYear(): number {\n    return this.date.weeksInYear();\n  }\n\n  // Display\n\n  public format(format: string): string {\n    return this.date.format( format );\n  }\n\n  public utc(keepLocalTime?: boolean): Day {\n    return this.mutate(d => d.utc(keepLocalTime));\n  }\n\n  public toMoment(): moment.Moment {\n    return this.date.clone();\n  }\n\n  public toDate(): Date {\n    return this.date.toDate();\n  }\n\n  public toArray(): number[] {\n    return this.date.toArray();\n  }\n\n  public toJSON(): string {\n    return this.date.toJSON();\n  }\n\n  public toISOString(keepOffset: boolean = false): string {\n    return this.date.toISOString( keepOffset );\n  }\n\n  public toObject(): object {\n    return this.date.toObject();\n  }\n\n  public toString(): string {\n    return this.date.toString();\n  }\n\n  // State\n\n  public isDST(): boolean {\n    return this.date.isDST();\n  }\n\n  public isLeapYear(): boolean {\n    return this.date.isLeapYear();\n  }\n\n  // Instances\n\n  public static now(): Day {\n    return new Day(moment());\n  }\n\n  public static today(): Day {\n    return this.now().start();\n  }\n\n  public static tomorrow(): Day {\n    return this.today().next();\n  }\n\n  public static fromMoment(moment: moment.Moment): Day {\n    return moment && moment.isValid() ? new Day( moment ) : null;\n  }\n\n  public static unix(millis: number): Day {\n    return this.fromMoment(moment(millis));\n  }\n\n  public static parse(input: DayInput): Day {\n    return Parse.day(input);\n  }\n\n  public static fromString(input: string): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromFormat(input: string, formats: string | string[]): Day {\n    return this.fromMoment(moment(input, formats));\n  }\n\n  public static fromObject(input: object): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromDate(input: Date): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromArray(input: number[]): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromDayIdentifier(id: number): Day {\n    let date: number = id % 100;\n    let month: number = (Math.floor(id / 100) % 100) - 1;\n    let year: number = Math.floor(id / 10000);\n\n    return this.build(year, month, date);\n  }\n\n  public static build(year: number, month: number,\n    date: number = Constants.DAY_MIN,\n    hour: number = Constants.HOUR_MIN,\n    minute: number = Constants.MINUTE_MIN,\n    second: number = Constants.SECOND_MIN,\n    millisecond: number = Constants.MILLIS_MIN): Day\n  {\n    return new Day( moment({year, month, date, hour, minute, second, millisecond}) );\n  }\n\n\n\n\n\n\n\n\n  public static getWeekspanOfYear(date: moment.Moment): number\n  {\n    return Math.floor( (date.dayOfYear() - 1) / Constants.DAYS_IN_WEEK );\n  }\n\n  public static getWeekOfYear(date: moment.Moment): number\n  {\n    let firstOfYear = date.clone().startOf('year');\n    let weeks: number = date.week();\n\n    return firstOfYear.day() > Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY ? weeks - 1 : weeks;\n  }\n\n  public static getFullWeekOfYear(date: moment.Moment): number\n  {\n    let firstOfYear = date.clone().startOf('year');\n    let weeks: number = date.week();\n\n    return firstOfYear.day() === Constants.WEEKDAY_MIN ? weeks : weeks - 1;\n  }\n\n  public static getWeekspanOfMonth(date: moment.Moment): number\n  {\n    return Math.floor((date.date() - 1) / Constants.DAYS_IN_WEEK);\n  }\n\n  public static getFullWeekOfMonth(date: moment.Moment): number\n  {\n    return Math.floor((date.date() - 1 - date.day() + Constants.DAYS_IN_WEEK) / Constants.DAYS_IN_WEEK);\n  }\n\n  public static getWeekOfMonth(date: moment.Moment): number\n  {\n    let dom = date.date();\n    let dow = date.day();\n    let sundayDate = dom - dow;\n\n    return Math.floor( ( sundayDate + Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY + 5 ) / Constants.DAYS_IN_WEEK );\n  }\n\n  public static getWeekIdentifier(date: moment.Moment): number\n  {\n    return date.week() + date.year() * 100;\n  }\n\n  public static getMonthIdentifier(date: moment.Moment): number\n  {\n    return (date.month() + 1) + date.year() * 100;\n  }\n\n  public static getDayIdentifier(date: moment.Moment): number\n  {\n    return date.date() + (date.month() + 1) * 100 + date.year() * 10000;\n  }\n\n  public static getQuarterIdentifier(date: moment.Moment): number\n  {\n    return date.quarter() + date.year() * 10;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Day.ts","\nimport { Functions as fn } from './Functions';\nimport { Day } from './Day';\nimport { DaySpan } from './DaySpan';\nimport { Schedule, ScheduleInput } from './Schedule';\nimport { Op } from './Op';\nimport { Units } from './Units';\nimport { Parse } from './Parse';\nimport { Constants } from './Constants';\n\n\nexport type CalendarMover = (day: Day, amount: number) => Day;\n\nexport class CalendarDay<T> extends Day\n{\n\n  public currentDay: boolean = false;\n  public currentWeek: boolean = false;\n  public currentMonth: boolean = false;\n  public currentYear: boolean = false;\n  public currentOffset: number = 0;\n  public selectedDay: boolean = false;\n  public selectedWeek: boolean = false;\n  public selectedMonth: boolean = false;\n  public selectedYear: boolean = false;\n  public inCalendar: boolean = false;\n  public events: CalendarEvent<T>[] = [];\n\n  public updateCurrent(current: Day): this\n  {\n    this.currentDay = this.sameDay(current);\n    this.currentWeek = this.sameWeek(current);\n    this.currentMonth = this.sameMonth(current);\n    this.currentYear = this.sameYear(current);\n    this.currentOffset = this.daysBetween(current, Op.DOWN, false);\n\n    return this;\n  }\n\n  public updateSelected(selected: DaySpan): this\n  {\n    this.selectedDay = selected.matchesDay(this);\n    this.selectedWeek = selected.matchesWeek(this);\n    this.selectedMonth = selected.matchesMonth(this);\n    this.selectedYear = selected.matchesYear(this);\n\n    return this;\n  }\n\n  public clearSelected(): this\n  {\n    this.selectedDay = this.selectedWeek = this.selectedMonth = this.selectedYear = false;\n    return this;\n  }\n\n}\n\nexport class CalendarEvent<T>\n{\n\n  public id: number;\n  public event: T;\n  public schedule: Schedule;\n  public time: DaySpan;\n  public fullDay: boolean;\n  public starting: boolean;\n\n  public constructor(id: number, event: T, schedule: Schedule, time: DaySpan, actualDay: Day) {\n    this.id = id;\n    this.event = event;\n    this.schedule = schedule;\n    this.time = time;\n    this.fullDay = time.isPoint;\n    this.starting = time.start.sameDay( actualDay );\n  }\n\n  public get scheduleId(): number {\n    return Math.floor( this.id / Constants.MAX_EVENTS_PER_DAY );\n  }\n\n}\n\nexport interface CalendarSchedule<T>\n{\n  schedule: Schedule;\n  event: T;\n}\n\nexport type CalendarScheduleIdentifier<T> = CalendarSchedule<T> | Schedule | T;\n\nexport type CalendarScheduleInput<T> = CalendarSchedule<T> | { schedule: ScheduleInput, event: T };\n\nexport interface CalendarInput<T>\n{\n  fill?: boolean;\n  minimumSize?: number;\n  repeatCovers?: boolean;\n  listTimes?: boolean;\n  eventsOutside?: boolean;\n  schedules?: CalendarSchedule<T>[];\n}\n\nexport class Calendar<T>\n{\n\n  public span: DaySpan;\n  public filled: DaySpan;\n  public length: number;\n  public type: Units;\n  public size: number;\n  public moveStart: CalendarMover;\n  public moveEnd: CalendarMover;\n\n  public fill: boolean = false;\n  public minimumSize: number = 0;\n  public repeatCovers: boolean = true;\n  public listTimes: boolean = false;\n  public eventsOutside: boolean = false;\n\n  public selection: DaySpan = null;\n  public days: CalendarDay<T>[] = [];\n  public schedules: CalendarSchedule<T>[] = [];\n\n  public constructor(start: Day, end: Day, type: Units, size: number, moveStart: CalendarMover, moveEnd: CalendarMover, input?: CalendarInput<T>)\n  {\n    this.span = new DaySpan(start, end);\n    this.filled = new DaySpan(start, end);\n    this.type = type;\n    this.size = size;\n    this.moveStart = moveStart;\n    this.moveEnd = moveEnd;\n\n    if (fn.isDefined(input))\n    {\n      this.withInput(input, false);\n    }\n\n    this.refresh();\n  }\n\n  public withInput(input: CalendarInput<T>, refresh: boolean = true): this\n  {\n    this.fill = fn.coalesce( input.fill, this.fill );\n    this.minimumSize = fn.coalesce( input.minimumSize, this.minimumSize );\n    this.repeatCovers = fn.coalesce( input.repeatCovers, this.repeatCovers );\n    this.listTimes = fn.coalesce( input.listTimes, this.listTimes );\n    this.eventsOutside = fn.coalesce( input.eventsOutside, this.eventsOutside );\n\n    if (fn.isArray(input.schedules))\n    {\n      this.removeSchedules();\n      this.addSchedules(input.schedules, false, !refresh);\n    }\n\n    if (refresh)\n    {\n      this.refresh();\n    }\n\n    return this;\n  }\n\n  public withMinimumSize(minimumSize: number): this\n  {\n    this.minimumSize = minimumSize;\n    this.refresh();\n\n    return this;\n  }\n\n  public withRepeatCovers(repeatCovers: boolean): this\n  {\n    this.repeatCovers = repeatCovers;\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public withListTimes(listTimes: boolean): this\n  {\n    this.listTimes = listTimes;\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public withEventsOutside(eventsOutside: boolean): this\n  {\n    this.eventsOutside = eventsOutside;\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public get start(): Day\n  {\n    return this.span.start;\n  }\n\n  public set start(day: Day)\n  {\n    this.span.start = day;\n  }\n\n  public get end(): Day\n  {\n    return this.span.end;\n  }\n\n  public set end(day: Day)\n  {\n    this.span.end = day;\n  }\n\n  public summary(dayOfWeek: boolean = true, short: boolean = false, repeat: boolean = false, contextual: boolean = true, delimiter: string = ' - '): string\n  {\n    return this.span.summary( this.type, dayOfWeek, short, repeat, contextual, delimiter );\n  }\n\n  public split(by: number = 1): Calendar<T>[]\n  {\n    let split: Calendar<T>[] = [];\n    let start: Day = this.start;\n    let end: Day = this.moveEnd( this.end, by - this.size );\n\n    for (let i = 0; i < this.size; i++)\n    {\n      split.push(new Calendar<T>(start, end, this.type, by, this.moveStart, this.moveEnd, this));\n      start = this.moveStart( start, by );\n      end = this.moveEnd( end, by );\n    }\n\n    return split;\n  }\n\n  public refresh(today: Day = Day.today()): this\n  {\n    this.length = this.span.days(Op.UP, true);\n    this.resetDays();\n    this.refreshCurrent(today);\n    this.refreshSelection();\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public resetFilled(): this\n  {\n    this.filled.start = this.fill ? this.start.startOfWeek() : this.start;\n    this.filled.end = this.fill ? this.end.endOfWeek() : this.end;\n\n    return this;\n  }\n\n  public resetDays(): this\n  {\n    this.resetFilled();\n\n    let days: CalendarDay<T>[] = this.days;\n    let filled: DaySpan = this.filled;\n    let current: Day = filled.start;\n    let daysBetween: number = filled.days(Op.UP);\n    let total: number = Math.max( this.minimumSize, daysBetween );\n\n    for (let i = 0; i < total; i++)\n    {\n      let day: CalendarDay<T> = days[ i ];\n\n      if (!day || !day.sameDay( current ))\n      {\n        day = new CalendarDay<T>( current.date );\n\n        if (i < days.length)\n        {\n          days.splice( i, 1, day );\n        }\n        else\n        {\n          days.push( day );\n        }\n      }\n\n      day.inCalendar = this.span.contains( day );\n\n      current = current.next();\n    }\n\n    if (days.length > total)\n    {\n      days.splice( total, days.length - total );\n    }\n\n    return this;\n  }\n\n  public refreshCurrent(today: Day = Day.today()): this\n  {\n    return this.iterateDays(d =>\n    {\n      d.updateCurrent(today);\n    });\n  }\n\n  public refreshSelection(): this\n  {\n    return this.iterateDays(d =>\n    {\n      if (this.selection)\n      {\n        d.updateSelected( this.selection );\n      }\n      else\n      {\n        d.clearSelected();\n      }\n    });\n  }\n\n  public refreshEvents(): this\n  {\n    return this.iterateDays(d =>\n    {\n      if (d.inCalendar || this.eventsOutside)\n      {\n        d.events = this.eventsForDay(d, this.listTimes, this.repeatCovers);\n      }\n    });\n  }\n\n  public iterateDays(iterator: (day: CalendarDay<T>) => any): this\n  {\n    let days: CalendarDay<T>[] = this.days;\n\n    for (let i = 0; i < days.length; i++)\n    {\n      iterator( days[ i ] );\n    }\n\n    return this;\n  }\n\n  public eventsForDay(day: Day, getTimes: boolean = true, covers: boolean = true): CalendarEvent<T>[]\n  {\n    let events: CalendarEvent<T>[] = [];\n    let entries: CalendarSchedule<T>[] = this.schedules;\n\n    for (let entryIndex = 0; entryIndex < entries.length; entryIndex++)\n    {\n      let entry: CalendarSchedule<T> = entries[ entryIndex ];\n      let schedule: Schedule = entry.schedule;\n      let event: T = entry.event;\n      let eventId: number = entryIndex * Constants.MAX_EVENTS_PER_DAY;\n\n      if ((covers && schedule.coversDay(day)) || (!covers && schedule.matchesDay(day)))\n      {\n        if (getTimes)\n        {\n          let times: DaySpan[] = covers ?\n            entry.schedule.getSpansOver(day) :\n            entry.schedule.getSpansOn(day);\n\n          for (let timeIndex = 0; timeIndex < times.length; timeIndex++)\n          {\n            events.push(new CalendarEvent<T>(eventId + timeIndex, event, schedule, times[ timeIndex ], day));\n          }\n        }\n        else\n        {\n          let over: DaySpan = entry.schedule.getSpanOver(day);\n\n          if (over)\n          {\n            events.push(new CalendarEvent<T>(eventId, event, schedule, over, day));\n          }\n        }\n      }\n    }\n\n    return events\n  }\n\n  public findSchedule(input: CalendarScheduleIdentifier<T>): CalendarSchedule<T>\n  {\n    for (let schedule of this.schedules)\n    {\n      if (schedule === input || schedule.schedule === input || schedule.event === input)\n      {\n        return schedule;\n      }\n    }\n\n    return null;\n  }\n\n  public removeSchedules(schedules: CalendarScheduleIdentifier<T>[] = null, delayRefresh: boolean = false): this\n  {\n    if (schedules)\n    {\n      for (let schedule of schedules)\n      {\n        this.removeSchedule( schedule, true );\n      }\n    }\n    else\n    {\n      this.schedules = [];\n    }\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n    return this;\n  }\n\n  public removeSchedule(schedule: CalendarScheduleIdentifier<T>, delayRefresh: boolean = false): this\n  {\n    let found = this.findSchedule(schedule);\n\n    if (found)\n    {\n      this.schedules.splice( this.schedules.indexOf(found), 1 );\n\n      if (!delayRefresh)\n      {\n        this.refreshEvents();\n      }\n    }\n    return this;\n  }\n\n  public addSchedule(schedule: CalendarScheduleInput<T>, allowDuplicates: boolean = false, delayRefresh: boolean = false): this\n  {\n    let parsed = Parse.calendarSchedule(schedule);\n\n    if (!allowDuplicates)\n    {\n      let existing = this.findSchedule(parsed);\n\n      if (existing)\n      {\n        return this;\n      }\n    }\n\n    this.schedules.push(parsed);\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n\n    return this;\n  }\n\n  public addSchedules(schedules: CalendarScheduleInput<T>[], allowDuplicates: boolean = false, delayRefresh: boolean = false): this\n  {\n    for (let schedule of schedules)\n    {\n      this.addSchedule(schedule, allowDuplicates, true);\n    }\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n\n    return this;\n  }\n\n  public select(start: Day, end?: Day): this\n  {\n    this.selection = end ? new DaySpan( start, end ) : DaySpan.point( start );\n    this.refreshSelection();\n\n    return this;\n  }\n\n  public unselect(): this\n  {\n    this.selection = null;\n    this.refreshSelection();\n\n    return this;\n  }\n\n  public move(jump: number = this.size): this\n  {\n    this.start = this.moveStart( this.start, jump );\n    this.end = this.moveEnd( this.end, jump );\n    this.refresh();\n\n    return this;\n  }\n\n  public next(jump: number = this.size): this\n  {\n    return this.move( jump );\n  }\n\n  public prev(jump: number = this.size): this\n  {\n    return this.move( -jump );\n  }\n\n  public static days<T>(days: number = 1, around: Day = Day.today(), focus: number = 0.4999, input?: CalendarInput<T>): Calendar<T>\n  {\n    let start: Day = around.start().relativeDays( -Math.floor( days * focus ) );\n    let end: Day = start.relativeDays( days - 1 ).end();\n    let mover: CalendarMover = (day, amount) => day.relativeDays(amount);\n\n    return new Calendar(start, end, Units.DAY, days, mover, mover, input);\n  }\n\n  public static weeks<T>(weeks: number = 1, around: Day = Day.today(), focus: number = 0.4999, input?: CalendarInput<T>): Calendar<T>\n  {\n    let start: Day = around.start().startOfWeek().relativeWeeks( -Math.floor( weeks * focus ) );\n    let end: Day = start.relativeWeeks( weeks - 1 ).endOfWeek();\n    let mover: CalendarMover = (day, amount) => day.relativeWeeks(amount);\n\n    return new Calendar(start, end, Units.WEEK, weeks, mover, mover, input);\n  }\n\n  public static months<T>(months: number = 1, around: Day = Day.today(), focus: number = 0.4999, input: CalendarInput<T> = {fill: true}): Calendar<T>\n  {\n    let start: Day = around.start().startOfMonth().relativeMonths( -Math.floor( months * focus ) );\n    let end: Day = start.relativeMonths( months - 1 ).endOfMonth();\n    let moveStart: CalendarMover = (day, amount) => day.relativeMonths(amount);\n    let moveEnd: CalendarMover = (day, amount) => day.startOfMonth().relativeMonths(amount).endOfMonth();\n\n    return new Calendar(start, end, Units.MONTH, months, moveStart, moveEnd, input);\n  }\n\n  public static years<T>(years: number = 1, around: Day = Day.today(), focus: number = 0.4999, input: CalendarInput<T> = {fill: true}): Calendar<T>\n  {\n    let start: Day = around.start().startOfMonth().relativeMonths( -Math.floor( years * focus ) );\n    let end: Day = start.relativeMonths( years - 1 ).endOfYear();\n    let mover: CalendarMover = (day, amount) => day.relativeYears(amount);\n\n    return new Calendar(start, end, Units.YEAR, years, mover, mover, input);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Calendar.ts","\nexport class Month\n{\n\n  public static JANUARY: number = 0;\n  public static FEBRUARY: number = 1;\n  public static MARCH: number = 2;\n  public static APRIL: number = 3;\n  public static MAY: number = 4;\n  public static JUNE: number = 5;\n  public static JULY: number = 6;\n  public static AUGUST: number = 7;\n  public static SEPTEMBER: number = 8;\n  public static OCTOBER: number = 9;\n  public static NOVEMBER: number = 10;\n  public static DECEMBER: number = 11;\n\n  public static LIST: number[] = [\n    Month.JANUARY,\n    Month.FEBRUARY,\n    Month.MARCH,\n    Month.APRIL,\n    Month.MAY,\n    Month.JUNE,\n    Month.JULY,\n    Month.AUGUST,\n    Month.SEPTEMBER,\n    Month.OCTOBER,\n    Month.NOVEMBER,\n    Month.DECEMBER\n  ];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Month.ts","\n\nexport class Weekday\n{\n\n  public static SUNDAY: number = 0;\n  public static MONDAY: number = 1;\n  public static TUESDAY: number = 2;\n  public static WEDNESDAY: number = 3;\n  public static THURSDAY: number = 4;\n  public static FRIDAY: number = 5;\n  public static SATURDAY: number = 6;\n\n  public static LIST: number[] = [\n    Weekday.SUNDAY,\n    Weekday.MONDAY,\n    Weekday.TUESDAY,\n    Weekday.WEDNESDAY,\n    Weekday.THURSDAY,\n    Weekday.FRIDAY,\n    Weekday.SATURDAY\n  ];\n\n  public static WEEK: number[] = [\n    Weekday.MONDAY,\n    Weekday.TUESDAY,\n    Weekday.WEDNESDAY,\n    Weekday.THURSDAY,\n    Weekday.FRIDAY\n  ];\n\n  public static ENDS: number[] = [\n    Weekday.SATURDAY,\n    Weekday.SUNDAY\n  ];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Weekday.ts"],"sourceRoot":""}