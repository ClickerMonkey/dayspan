{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dayspan.min.js","webpack:///webpack/bootstrap 2cbcdb7ce3d5cccb2120","webpack:///external {\"commonjs\":\"moment\",\"commonjs2\":\"moment\",\"amd\":\"moment\",\"root\":\"moment\"}","webpack:///./src/Op.ts","webpack:///./src/Functions.ts","webpack:///./src/Constants.ts","webpack:///./src/Units.ts","webpack:///./src/DaySpan.ts","webpack:///./src/Schedule.ts","webpack:///./src/Time.ts","webpack:///./src/Parse.ts","webpack:///./src/Day.ts","webpack:///./src/Calendar.ts","webpack:///./src/Month.ts","webpack:///./src/Suffix.ts","webpack:///./src/Weekday.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","operate","value","op","absolute","isFinite","Math","abs","Op","NONE","FLOOR","floor","CEIL","ceil","ROUND","round","TRUNCATE","DOWN","UP","Functions","isArray","input","Array","isString","isNumber","isObject","isDefined","isFrequencyValueEvery","every","isFrequencyValueOneOf","length","coalesce","a","b","pad","x","padding","before","padNumber","first","substring","Constants","MILLIS_IN_SECOND","MILLIS_IN_MINUTE","MILLIS_IN_HOUR","MILLIS_IN_DAY","MILLIS_IN_WEEK","DAYS_IN_WEEK","MONTHS_IN_YEAR","HOURS_IN_DAY","MONTH_MIN","MONTH_MAX","DAY_MIN","DAY_MAX","HOUR_MIN","HOUR_MAX","MINUTE_MIN","MINUTE_MAX","SECOND_MIN","SECOND_MAX","MILLIS_MIN","MILLIS_MAX","WEEKDAY_MIN","WEEKDAY_MAX","START_NONE","END_NONE","DURATION_NONE","DURATION_DEFAULT_UNIT","MAX_EVENTS_PER_DAY","WEEK_OF_MONTH_MINIMUM_WEEKDAY","Units","DaySpan__a","DaySpan_DaySpan","DaySpan","start","end","time","contains","day","matchesDay","sameDay","matchesWeek","sameWeek","matchesMonth","sameMonth","matchesYear","sameYear","millis","millisBetween","seconds","secondsBetween","minutes","minutesBetween","hours","hoursBetween","days","daysBetween","weeks","weeksBetween","months","monthsBetween","years","yearsBetween","summary","type","dayOfWeek","short","repeat","contextual","delimiter","formats","SUMMARY_FORMATS","today","Day_Day","showStartYear","showEndYear","format","intersects","span","intersection","max","min","unix","point","DAY","year","WEEK","MONTH","YEAR","__WEBPACK_IMPORTED_MODULE_5_moment__","Schedule_Schedule","Schedule","set","times","Parse_Parse","schedule","updateDurationInDays","durationInDays","lastTime","toMilliseconds","add","duration","durationUnit","subtract","asDays","matchesSpan","isSameOrAfter","isBefore","endWithDuration","matchesRange","isSameOrBefore","isExcluded","exclude","dayIdentifier","isIncluded","dayOfMonth","dayOfYear","month","week","weekOfYear","weekspanOfYear","fullWeekOfYear","weekOfMonth","weekspanOfMonth","fullWeekOfMonth","coversDay","prev","nextDay","lookAhead","next","prevDay","lookBack","matchesTime","_i","_a","sameTime","isFullDay","getSpansOver","spans","push","behind","hourStart","withTime","hourEnd","hourSpan","getSpanOver","getSpansOn","check","toInput","returnDays","out","exclusions","dayIdentifierKey","parseInt","fromDayIdentifier","toString","Time_Time","Time","hour","minute","second","millisecond","formatterEntries","FORMATTERS","handled","k","entry","part","size","formatter","charAt","toIdentifer","toObject","parse","fromString","matches","REGEX","exec","h","build","fromIdentifier","SSS","t","HH","hh","kk","mm","ss","SS","A","H","S","Parse","frequency","otherwiseEvery","otherwiseOffset","offset_1","offset","every_1","map_1","utc","otherwise","fromArray","fromObject","input_1","timeInput","input_2","on","calendarSchedule","event","cron","pattern","__WEBPACK_IMPORTED_MODULE_3_moment__","Day","date","quarter","getWeekOfYear","getWeekspanOfYear","getFullWeekOfYear","getWeekOfMonth","getWeekspanOfMonth","getFullWeekOfMonth","getDayIdentifier","weekIdentifier","getWeekIdentifier","monthIdentifier","getMonthIdentifier","quarterIdentifier","getQuarterIdentifier","sameQuarter","sameHour","sameMinute","precision","isAfter","diff","isBetween","inclusive","mutate","mutator","toMoment","amount","unit","relative","relativeDays","withDayOfMonth","withDayOfWeek","withDayOfYear","withMonth","relativeMonths","prevMonth","nextMonth","withWeek","relativeWeek","withWeekOfYear","withFullWeekOfYear","withWeekspanOfYear","withWeekOfMonth","withWeekspanOfMonth","withFullWeekOfMonth","relativeWeeks","prevWeek","nextWeek","withYear","relativeYears","prevYear","nextYear","withHour","relativeHours","prevHour","nextHour","withTimes","startOf","isStart","endOf","isEnd","startOfHour","isStartOfHour","endOfHour","isEndOfHour","startOfWeek","isStartOfWeek","endOfWeek","isEndOfWeek","startOfMonth","isStartOfMonth","endOfMonth","isEndOfMonth","daysInMonth","startOfYear","isStartOfYear","endOfYear","isEndOfYear","daysInYear","weeksInYear","keepLocalTime","clone","toDate","toArray","toJSON","toISOString","keepOffset","isDST","isLeapYear","now","tomorrow","fromMoment","moment","isValid","fromFormat","fromDate","id","firstOfYear","dom","dow","sundayDate","LOAD_TIME","__extends","extendStatics","setPrototypeOf","__proto__","__","constructor","create","Calendar_CalendarDay","_super","CalendarDay","_this","apply","arguments","currentDay","currentWeek","currentMonth","currentYear","currentOffset","selectedDay","selectedWeek","selectedMonth","selectedYear","inCalendar","events","updateCurrent","current","updateSelected","selected","clearSelected","Calendar_CalendarEvent","CalendarEvent","actualDay","fullDay","isPoint","starting","Calendar_Calendar","Calendar","moveStart","moveEnd","fill","minimumSize","repeatCovers","listTimes","eventsOutside","selection","schedules","filled","withInput","refresh","removeSchedules","addSchedules","withMinimumSize","withRepeatCovers","refreshEvents","withListTimes","withEventsOutside","split","by","resetDays","refreshCurrent","refreshSelection","resetFilled","total","splice","iterateDays","eventsForDay","iterator","getTimes","covers","entries","entryIndex","event_1","eventId","timeIndex","over","findSchedule","delayRefresh","schedules_1","removeSchedule","found","indexOf","addSchedule","allowDuplicates","parsed","schedules_2","select","unselect","move","jump","around","focus","mover","Month","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","Suffix","_CACHE","_CACHE_SIZE","determine","MAP","append","suffix","Weekday","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"],"mappings":"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","file":"dayspan.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ds\", [\"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ds\"] = factory(require(\"moment\"));\n\telse\n\t\troot[\"ds\"] = factory(root[\"moment\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ds\", [\"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ds\"] = factory(require(\"moment\"));\n\telse\n\t\troot[\"ds\"] = factory(root[\"moment\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./src/Functions.ts\n\r\n/**\r\n * The class which contains commonly used functions by the library. These\r\n * functions and variables exist in a class so they may be overridden if\r\n * desired.\r\n */\r\nvar Functions = (function () {\r\n    function Functions() {\r\n    }\r\n    /**\r\n     * Determines whether the given input is an array.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is an array, otherwise false.\r\n     */\r\n    Functions.isArray = function (input) {\r\n        return input instanceof Array;\r\n    };\r\n    /**\r\n     * Determines whether the given input is a string.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is a string, otherwise false.\r\n     */\r\n    Functions.isString = function (input) {\r\n        return typeof (input) === 'string';\r\n    };\r\n    Functions.isNumber = function (input) {\r\n        return isFinite(input);\r\n    };\r\n    Functions.isObject = function (input) {\r\n        return !this.isArray(input) && typeof (input) === 'object';\r\n    };\r\n    /**\r\n     * Determines whether the given input is defined.\r\n     *\r\n     * @param input The variable to test.\r\n     * @return True if the variable is defined, otherwise false.\r\n     */\r\n    Functions.isDefined = function (input) {\r\n        return typeof (input) !== 'undefined';\r\n    };\r\n    Functions.isFrequencyValueEvery = function (input) {\r\n        return this.isObject(input) && this.isNumber(input.every);\r\n    };\r\n    Functions.isFrequencyValueOneOf = function (input) {\r\n        return this.isArray(input) && input.length > 0;\r\n    };\r\n    /**\r\n     * Returns the first argument which is defined.\r\n     *\r\n     * @param a The first argument to look at.\r\n     * @param b The second argument to look at.\r\n     * @return The first defined argument.\r\n     * @see [[Functions.isDefined]]\r\n     */\r\n    Functions.coalesce = function (a, b, c) {\r\n        return this.isDefined(a) ? a : (this.isDefined(b) ? b : c);\r\n    };\r\n    Functions.pad = function (x, length, padding, before) {\r\n        while (x.length < length) {\r\n            before ? x = padding + x : x = x + padding;\r\n        }\r\n        return x;\r\n    };\r\n    Functions.padNumber = function (x, length, first) {\r\n        if (first === void 0) { first = length; }\r\n        return this.pad(x + '', length, '0', true).substring(0, first);\r\n    };\r\n    return Functions;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Constants.ts\n\r\nvar Constants = (function () {\r\n    function Constants() {\r\n    }\r\n    Constants.MILLIS_IN_SECOND = 1000;\r\n    Constants.MILLIS_IN_MINUTE = 1000 * 60;\r\n    Constants.MILLIS_IN_HOUR = 1000 * 60 * 60;\r\n    Constants.MILLIS_IN_DAY = 1000 * 60 * 60 * 24;\r\n    Constants.MILLIS_IN_WEEK = 1000 * 60 * 60 * 24 * 7;\r\n    Constants.DAYS_IN_WEEK = 7;\r\n    Constants.MONTHS_IN_YEAR = 12;\r\n    Constants.HOURS_IN_DAY = 24;\r\n    Constants.MONTH_MIN = 0;\r\n    Constants.MONTH_MAX = 11;\r\n    Constants.DAY_MIN = 1;\r\n    Constants.DAY_MAX = 31;\r\n    Constants.HOUR_MIN = 0;\r\n    Constants.HOUR_MAX = 23;\r\n    Constants.MINUTE_MIN = 0;\r\n    Constants.MINUTE_MAX = 59;\r\n    Constants.SECOND_MIN = 0;\r\n    Constants.SECOND_MAX = 59;\r\n    Constants.MILLIS_MIN = 0;\r\n    Constants.MILLIS_MAX = 999;\r\n    Constants.WEEKDAY_MIN = 0;\r\n    Constants.WEEKDAY_MAX = 6;\r\n    Constants.START_NONE = 0;\r\n    Constants.END_NONE = 0;\r\n    Constants.DURATION_NONE = 0;\r\n    Constants.DURATION_DEFAULT_UNIT = 'minutes';\r\n    Constants.MAX_EVENTS_PER_DAY = 24;\r\n    Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY = 4; // Thursday by default\r\n    return Constants;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Op.ts\n\r\nvar Op;\r\n(function (Op) {\r\n    Op[Op[\"NONE\"] = 0] = \"NONE\";\r\n    Op[Op[\"FLOOR\"] = 1] = \"FLOOR\";\r\n    Op[Op[\"CEIL\"] = 2] = \"CEIL\";\r\n    Op[Op[\"ROUND\"] = 3] = \"ROUND\";\r\n    Op[Op[\"TRUNCATE\"] = 4] = \"TRUNCATE\";\r\n    Op[Op[\"UP\"] = 5] = \"UP\";\r\n    Op[Op[\"DOWN\"] = 6] = \"DOWN\";\r\n})(Op = Op || (Op = {}));\r\nfunction operate(value, op, absolute) {\r\n    if (absolute === void 0) { absolute = false; }\r\n    if (isFinite(value)) {\r\n        if (absolute) {\r\n            value = Math.abs(value);\r\n        }\r\n        switch (op) {\r\n            case Op.NONE:\r\n                return value;\r\n            case Op.FLOOR:\r\n                return Math.floor(value);\r\n            case Op.CEIL:\r\n                return Math.ceil(value);\r\n            case Op.ROUND:\r\n                return Math.round(value);\r\n            case Op.TRUNCATE:\r\n            case Op.DOWN:\r\n                return value < 0 ? Math.ceil(value) : Math.floor(value);\r\n            case Op.UP:\r\n                return value < 0 ? Math.floor(value) : Math.ceil(value);\r\n        }\r\n    }\r\n    return value;\r\n}\r\n\n// CONCATENATED MODULE: ./src/Units.ts\n\r\nvar Units;\r\n(function (Units) {\r\n    Units[Units[\"DAY\"] = 0] = \"DAY\";\r\n    Units[Units[\"WEEK\"] = 1] = \"WEEK\";\r\n    Units[Units[\"MONTH\"] = 2] = \"MONTH\";\r\n    Units[Units[\"YEAR\"] = 3] = \"YEAR\";\r\n})(Units = Units || (Units = {}));\r\n\n// CONCATENATED MODULE: ./src/DaySpan.ts\n\r\n\r\n\r\n\r\nvar DaySpan_DaySpan = (function () {\r\n    function DaySpan(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    Object.defineProperty(DaySpan.prototype, \"isPoint\", {\r\n        get: function () {\r\n            return this.start.time === this.end.time;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DaySpan.prototype.contains = function (day) {\r\n        return day.time >= this.start.time && day.time <= this.end.time;\r\n    };\r\n    DaySpan.prototype.matchesDay = function (day) {\r\n        return this.contains(day) || day.sameDay(this.start) || day.sameDay(this.end);\r\n    };\r\n    DaySpan.prototype.matchesWeek = function (day) {\r\n        return this.contains(day) || day.sameWeek(this.start) || day.sameWeek(this.end);\r\n    };\r\n    DaySpan.prototype.matchesMonth = function (day) {\r\n        return this.contains(day) || day.sameMonth(this.start) || day.sameMonth(this.end);\r\n    };\r\n    DaySpan.prototype.matchesYear = function (day) {\r\n        return this.contains(day) || day.sameYear(this.start) || day.sameYear(this.end);\r\n    };\r\n    DaySpan.prototype.millis = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.millisBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.seconds = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.secondsBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.minutes = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.minutesBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.hours = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.hoursBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.days = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.daysBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.weeks = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.weeksBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.months = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.monthsBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.years = function (op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return this.start.yearsBetween(this.end, op, absolute);\r\n    };\r\n    DaySpan.prototype.summary = function (type, dayOfWeek, short, repeat, contextual, delimiter) {\r\n        if (dayOfWeek === void 0) { dayOfWeek = true; }\r\n        if (short === void 0) { short = false; }\r\n        if (repeat === void 0) { repeat = false; }\r\n        if (contextual === void 0) { contextual = true; }\r\n        if (delimiter === void 0) { delimiter = ' - '; }\r\n        var formats = DaySpan.SUMMARY_FORMATS[type];\r\n        var today = Day_Day.today();\r\n        var showStartYear = !contextual || !this.start.sameYear(today);\r\n        var showEndYear = !contextual || !this.end.sameYear(today);\r\n        var start = this.start.format(formats(short, dayOfWeek, showStartYear));\r\n        var end = this.end.format(formats(short, dayOfWeek, showEndYear));\r\n        var summary = start;\r\n        if (start !== end) {\r\n            if (!repeat) {\r\n                summary = this.start.format(formats(short, dayOfWeek, !this.start.sameYear(this.end)));\r\n            }\r\n            summary += delimiter;\r\n            summary += end;\r\n        }\r\n        else {\r\n            summary = start;\r\n        }\r\n        return summary;\r\n    };\r\n    DaySpan.prototype.intersects = function (span) {\r\n        return !(this.end.time < span.start.time ||\r\n            this.start.time > span.end.time);\r\n    };\r\n    DaySpan.prototype.intersection = function (span) {\r\n        var start = Math.max(this.start.time, span.start.time);\r\n        var end = Math.min(this.end.time, span.end.time);\r\n        return start >= end ? null : new DaySpan(Day_Day.unix(start), Day_Day.unix(end));\r\n    };\r\n    DaySpan.point = function (day) {\r\n        return new DaySpan(day, day);\r\n    };\r\n    DaySpan.SUMMARY_FORMATS = (DaySpan__a = {},\r\n        DaySpan__a[Units.DAY] = function (short, dayOfWeek, year) {\r\n            return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\r\n        },\r\n        DaySpan__a[Units.WEEK] = function (short, dayOfWeek, year) {\r\n            return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\r\n        },\r\n        DaySpan__a[Units.MONTH] = function (short, dayOfWeek, year) {\r\n            return (short ? 'MMM' : 'MMMM') + (year ? ' YYYY' : '');\r\n        },\r\n        DaySpan__a[Units.YEAR] = function (short, dayOfWeek, year) {\r\n            return (year ? 'YYYY' : '');\r\n        },\r\n        DaySpan__a);\r\n    return DaySpan;\r\n}());\r\n\r\nvar DaySpan__a;\r\n\n// CONCATENATED MODULE: ./src/Schedule.ts\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment__);\n\r\n\r\n\r\n\r\n\r\n\r\n// @ts-ignore\r\n\r\nvar Schedule_Schedule = (function () {\r\n    function Schedule(input) {\r\n        if (Functions.isDefined(input)) {\r\n            this.set(input);\r\n        }\r\n    }\r\n    Object.defineProperty(Schedule.prototype, \"lastTime\", {\r\n        get: function () {\r\n            return this.times[this.times.length - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Schedule.prototype.set = function (input) {\r\n        Parse_Parse.schedule(input, this);\r\n        return this;\r\n    };\r\n    Schedule.prototype.updateDurationInDays = function () {\r\n        this.durationInDays = !this.lastTime ? 0 : Math.max(0, Math.ceil(__WEBPACK_IMPORTED_MODULE_5_moment__[\"duration\"](this.lastTime.toMilliseconds(), 'milliseconds')\r\n            .add(this.duration, this.durationUnit)\r\n            .subtract(1, 'day')\r\n            .asDays()));\r\n        return this;\r\n    };\r\n    Schedule.prototype.matchesSpan = function (day) {\r\n        return (this.start === null || day.isSameOrAfter(this.start)) &&\r\n            (this.end === null || day.isBefore(this.endWithDuration));\r\n    };\r\n    Schedule.prototype.matchesRange = function (start, end) {\r\n        return (this.start === null || start.isSameOrBefore(this.start)) &&\r\n            (this.end === null || end.isBefore(this.endWithDuration));\r\n    };\r\n    Schedule.prototype.isExcluded = function (day) {\r\n        return !!this.exclude[day.dayIdentifier];\r\n    };\r\n    Schedule.prototype.isIncluded = function (day) {\r\n        return !this.exclude[day.dayIdentifier];\r\n    };\r\n    Schedule.prototype.matchesDay = function (day) {\r\n        return this.isIncluded(day) &&\r\n            this.matchesSpan(day) &&\r\n            this.dayOfWeek(day.dayOfWeek) &&\r\n            this.dayOfMonth(day.dayOfMonth) &&\r\n            this.dayOfYear(day.dayOfYear) &&\r\n            this.year(day.year) &&\r\n            this.month(day.month) &&\r\n            this.week(day.week) &&\r\n            this.weekOfYear(day.weekOfYear) &&\r\n            this.weekspanOfYear(day.weekspanOfYear) &&\r\n            this.fullWeekOfYear(day.fullWeekOfYear) &&\r\n            this.weekOfMonth(day.weekOfMonth) &&\r\n            this.weekspanOfMonth(day.weekspanOfMonth) &&\r\n            this.fullWeekOfMonth(day.fullWeekOfMonth);\r\n    };\r\n    /**\r\n     * Determines if the given day is covered by this schedule. A schedule can\r\n     * specify events that span multiple days - so even though the day does not\r\n     * match the starting day of a span - it can be a day that is within the\r\n     * schedule.\r\n     *\r\n     * @param day The day to test.\r\n     * @param\r\n     */\r\n    Schedule.prototype.coversDay = function (day) {\r\n        var before = this.durationInDays;\r\n        while (before >= 0) {\r\n            if (this.matchesDay(day)) {\r\n                return true;\r\n            }\r\n            day = day.prev();\r\n            before--;\r\n        }\r\n        return false;\r\n    };\r\n    Schedule.prototype.nextDay = function (day, lookAhead) {\r\n        if (lookAhead === void 0) { lookAhead = 366; }\r\n        for (var days = 0; days < lookAhead; days++) {\r\n            day = day.next();\r\n            if (this.matchesDay(day)) {\r\n                return day;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Schedule.prototype.prevDay = function (day, lookBack) {\r\n        if (lookBack === void 0) { lookBack = 366; }\r\n        for (var days = 0; days < lookBack; days++) {\r\n            day = day.prev();\r\n            if (this.matchesDay(day)) {\r\n                return day;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Schedule.prototype.matchesTime = function (day) {\r\n        if (!this.matchesDay(day)) {\r\n            return false;\r\n        }\r\n        for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n            var time = _a[_i];\r\n            if (day.sameTime(time)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Schedule.prototype.isFullDay = function () {\r\n        return this.times.length === 0 || this.duration === Constants.DURATION_NONE;\r\n    };\r\n    Schedule.prototype.getSpansOver = function (day) {\r\n        var spans = [];\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            if (this.matchesDay(day)) {\r\n                spans.push(DaySpan_DaySpan.point(start));\r\n            }\r\n        }\r\n        else {\r\n            var behind = this.durationInDays;\r\n            while (behind >= 0) {\r\n                if (this.matchesDay(day)) {\r\n                    for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n                        var time = _a[_i];\r\n                        var hourStart = day.withTime(time);\r\n                        var hourEnd = hourStart.add(this.duration, this.durationUnit);\r\n                        var hourSpan = new DaySpan_DaySpan(hourStart, hourEnd);\r\n                        if (hourSpan.matchesDay(start)) {\r\n                            spans.push(hourSpan);\r\n                        }\r\n                    }\r\n                }\r\n                day = day.prev();\r\n                behind--;\r\n            }\r\n        }\r\n        return spans;\r\n    };\r\n    Schedule.prototype.getSpanOver = function (day) {\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            return DaySpan_DaySpan.point(start);\r\n        }\r\n        else {\r\n            var behind = this.durationInDays;\r\n            while (behind >= 0) {\r\n                if (this.matchesDay(day)) {\r\n                    return DaySpan_DaySpan.point(day);\r\n                }\r\n                day = day.prev();\r\n                behind--;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Schedule.prototype.getSpansOn = function (day, check) {\r\n        if (check === void 0) { check = false; }\r\n        var spans = [];\r\n        if (check && !this.matchesDay(day)) {\r\n            return spans;\r\n        }\r\n        var start = day.start();\r\n        if (this.isFullDay()) {\r\n            spans.push(DaySpan_DaySpan.point(start));\r\n        }\r\n        else {\r\n            for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n                var time = _a[_i];\r\n                var hourStart = day.withTime(time);\r\n                var hourEnd = hourStart.add(this.duration, this.durationUnit);\r\n                var hourSpan = new DaySpan_DaySpan(hourStart, hourEnd);\r\n                spans.push(hourSpan);\r\n            }\r\n        }\r\n        return spans;\r\n    };\r\n    Schedule.prototype.toInput = function (returnDays) {\r\n        if (returnDays === void 0) { returnDays = false; }\r\n        var out = {};\r\n        var exclusions = [];\r\n        var times = [];\r\n        for (var dayIdentifierKey in this.exclude) {\r\n            var dayIdentifier = parseInt(dayIdentifierKey);\r\n            exclusions.push(returnDays ? Day_Day.fromDayIdentifier(dayIdentifier) : dayIdentifier);\r\n        }\r\n        for (var _i = 0, _a = this.times; _i < _a.length; _i++) {\r\n            var time = _a[_i];\r\n            times.push(time.toString());\r\n        }\r\n        if (this.start)\r\n            out.start = returnDays ? this.start : this.start.time;\r\n        if (this.end)\r\n            out.end = returnDays ? this.end : this.end.time;\r\n        if (this.duration !== Constants.DURATION_NONE)\r\n            out.duration = this.duration;\r\n        if (this.durationUnit !== Constants.DURATION_DEFAULT_UNIT)\r\n            out.durationUnit = this.durationUnit;\r\n        if (this.dayOfWeek.input)\r\n            out.dayOfWeek = this.dayOfWeek.input;\r\n        if (this.dayOfMonth.input)\r\n            out.dayOfMonth = this.dayOfMonth.input;\r\n        if (this.dayOfYear.input)\r\n            out.dayOfYear = this.dayOfYear.input;\r\n        if (this.month.input)\r\n            out.month = this.month.input;\r\n        if (this.week.input)\r\n            out.week = this.week.input;\r\n        if (this.weekOfYear.input)\r\n            out.weekOfYear = this.weekOfYear.input;\r\n        if (this.weekspanOfYear.input)\r\n            out.weekspanOfYear = this.weekspanOfYear.input;\r\n        if (this.fullWeekOfYear.input)\r\n            out.fullWeekOfYear = this.fullWeekOfYear.input;\r\n        if (this.weekOfMonth.input)\r\n            out.weekOfMonth = this.weekOfMonth.input;\r\n        if (this.weekspanOfMonth.input)\r\n            out.weekspanOfMonth = this.weekspanOfMonth.input;\r\n        if (this.fullWeekOfMonth.input)\r\n            out.fullWeekOfMonth = this.fullWeekOfMonth.input;\r\n        if (this.year.input)\r\n            out.year = this.year.input;\r\n        if (times.length)\r\n            out.times = times;\r\n        if (exclusions.length)\r\n            out.exclude = exclusions;\r\n        return out;\r\n    };\r\n    return Schedule;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Time.ts\n\r\n\r\n\r\n\r\nvar Time_Time = (function () {\r\n    function Time(hour, minute, second, millisecond) {\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        this.hour = hour;\r\n        this.minute = minute;\r\n        this.second = second;\r\n        this.millisecond = millisecond;\r\n    }\r\n    Time.prototype.format = function (format) {\r\n        var formatterEntries = Time.FORMATTERS;\r\n        var out = '';\r\n        for (var i = 0; i < format.length; i++) {\r\n            var handled = false;\r\n            for (var k = 0; k < formatterEntries.length && !handled; k++) {\r\n                var entry = formatterEntries[k];\r\n                var part = format.substring(i, i + entry.size);\r\n                if (part.length === entry.size) {\r\n                    var formatter = entry.formats[part];\r\n                    if (formatter) {\r\n                        out += formatter(this);\r\n                        i += entry.size - 1;\r\n                        handled = true;\r\n                    }\r\n                }\r\n            }\r\n            if (!handled) {\r\n                out += format.charAt(i);\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    Time.prototype.toMilliseconds = function () {\r\n        return this.hour * Constants.MILLIS_IN_HOUR +\r\n            this.minute * Constants.MILLIS_IN_MINUTE +\r\n            this.second * Constants.MILLIS_IN_SECOND +\r\n            this.millisecond;\r\n    };\r\n    Time.prototype.toString = function () {\r\n        if (this.millisecond)\r\n            return this.format('HH:mm:ss.SSS');\r\n        if (this.second)\r\n            return this.format('HH:mm:ss');\r\n        if (this.minute)\r\n            return this.format('HH:mm');\r\n        return this.format('HH');\r\n    };\r\n    Time.prototype.toIdentifer = function () {\r\n        return this.hour +\r\n            this.minute * 100 +\r\n            this.second * 10000 +\r\n            this.millisecond * 10000000;\r\n    };\r\n    Time.prototype.toObject = function () {\r\n        var out = {\r\n            hour: this.hour\r\n        };\r\n        if (this.minute)\r\n            out.minute = this.minute;\r\n        if (this.second)\r\n            out.second = this.second;\r\n        if (this.millisecond)\r\n            out.millisecond = this.millisecond;\r\n        return out;\r\n    };\r\n    Time.parse = function (input) {\r\n        return Parse_Parse.time(input);\r\n    };\r\n    Time.fromString = function (time) {\r\n        var matches = this.REGEX.exec(time);\r\n        if (!matches) {\r\n            return null;\r\n        }\r\n        var h = parseInt(matches[1]) || 0;\r\n        var m = parseInt(matches[2]) || 0;\r\n        var s = parseInt(matches[3]) || 0;\r\n        var l = parseInt(matches[4]) || 0;\r\n        return this.build(h, m, s, l);\r\n    };\r\n    Time.fromIdentifier = function (time) {\r\n        var h = time % 100;\r\n        var m = Math.floor(time / 100) % 100;\r\n        var s = Math.floor(time / 10000) % 100;\r\n        var l = Math.floor(time / 10000000) % 1000;\r\n        return this.build(h, m, s, l);\r\n    };\r\n    Time.build = function (hour, minute, second, millisecond) {\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        return new Time(hour, minute, second, millisecond);\r\n    };\r\n    Time.REGEX = /^(\\d\\d?):?(\\d\\d)?:?(\\d\\d)?\\.?(\\d\\d\\d)?$/;\r\n    Time.FORMATTERS = [\r\n        {\r\n            size: 3,\r\n            formats: {\r\n                SSS: function (t) { return Functions.padNumber(t.millisecond, 3); }\r\n            }\r\n        },\r\n        {\r\n            size: 2,\r\n            formats: {\r\n                HH: function (t) { return Functions.padNumber(t.hour, 2); },\r\n                hh: function (t) { return Functions.padNumber((t.hour % 12) || 12, 2); },\r\n                kk: function (t) { return Functions.padNumber(t.hour + 1, 2); },\r\n                mm: function (t) { return Functions.padNumber(t.minute, 2); },\r\n                ss: function (t) { return Functions.padNumber(t.second, 2); },\r\n                SS: function (t) { return Functions.padNumber(t.millisecond, 3, 2); }\r\n            }\r\n        },\r\n        {\r\n            size: 1,\r\n            formats: {\r\n                A: function (t) { return t.hour < 12 ? 'AM' : 'PM'; },\r\n                a: function (t) { return t.hour < 12 ? 'am' : 'pm'; },\r\n                H: function (t) { return t.hour + ''; },\r\n                h: function (t) { return ((t.hour % 12) || 12) + ''; },\r\n                k: function (t) { return (t.hour + 1) + ''; },\r\n                m: function (t) { return t.minute + ''; },\r\n                s: function (t) { return t.second + ''; },\r\n                S: function (t) { return Functions.padNumber(t.millisecond, 3, 1); }\r\n            }\r\n        }\r\n    ];\r\n    return Time;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Parse.ts\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The class which takes user input and parses it to specific structures.\r\n */\r\nvar Parse_Parse = (function () {\r\n    function Parse() {\r\n    }\r\n    Parse.frequency = function (input, otherwiseEvery, otherwiseOffset) {\r\n        if (otherwiseEvery === void 0) { otherwiseEvery = 1; }\r\n        if (otherwiseOffset === void 0) { otherwiseOffset = 0; }\r\n        var check = function (value) {\r\n            return value % otherwiseEvery === otherwiseOffset;\r\n        };\r\n        if (Functions.isFrequencyValueEvery(input)) {\r\n            var offset_1 = input.offset || 0;\r\n            var every_1 = input.every;\r\n            check = function (value) {\r\n                return value % every_1 === offset_1;\r\n            };\r\n        }\r\n        if (Functions.isFrequencyValueOneOf(input)) {\r\n            var map_1 = {};\r\n            for (var i = 0; i < input.length; i++) {\r\n                map_1[input[i]] = true;\r\n            }\r\n            check = function (value) {\r\n                return !!map_1[value];\r\n            };\r\n        }\r\n        check.input = input;\r\n        return check;\r\n    };\r\n    Parse.utc = function (input, otherwise) {\r\n        if (Functions.isNumber(input)) {\r\n            return input;\r\n        }\r\n        if (input instanceof Day_Day) {\r\n            return input.time;\r\n        }\r\n        return otherwise;\r\n    };\r\n    Parse.day = function (input) {\r\n        if (Functions.isNumber(input)) {\r\n            return Day_Day.unix(input);\r\n        }\r\n        else if (Functions.isString(input)) {\r\n            return Day_Day.parse(input);\r\n        }\r\n        else if (input instanceof Day_Day) {\r\n            return input;\r\n        }\r\n        else if (Functions.isArray(input)) {\r\n            return Day_Day.fromArray(input);\r\n        }\r\n        else if (Functions.isObject(input)) {\r\n            return Day_Day.fromObject(input);\r\n        }\r\n        else if (input === true) {\r\n            return Day_Day.today();\r\n        }\r\n        return null;\r\n    };\r\n    Parse.time = function (input) {\r\n        if (Functions.isNumber(input)) {\r\n            return Time_Time.fromIdentifier(input);\r\n        }\r\n        if (Functions.isString(input)) {\r\n            return Time_Time.fromString(input);\r\n        }\r\n        if (Functions.isObject(input) && Functions.isNumber(input.hour)) {\r\n            return new Time_Time(input.hour, input.minute, input.second, input.millisecond);\r\n        }\r\n        return null;\r\n    };\r\n    Parse.times = function (input) {\r\n        var times = [];\r\n        if (Functions.isArray(input)) {\r\n            for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {\r\n                var timeInput = input_1[_i];\r\n                var time = this.time(timeInput);\r\n                if (time) {\r\n                    times.push(time);\r\n                }\r\n            }\r\n        }\r\n        return times;\r\n    };\r\n    Parse.exclusions = function (input) {\r\n        var exclusions = {};\r\n        if (Functions.isArray(input)) {\r\n            for (var _i = 0, input_2 = input; _i < input_2.length; _i++) {\r\n                var dayIdentifier = input_2[_i];\r\n                if (Functions.isNumber(dayIdentifier)) {\r\n                    exclusions[dayIdentifier] = true;\r\n                }\r\n                else {\r\n                    var day = this.day(dayIdentifier);\r\n                    if (day) {\r\n                        exclusions[day.dayIdentifier] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return exclusions;\r\n    };\r\n    Parse.schedule = function (input, out) {\r\n        if (out === void 0) { out = new Schedule_Schedule(); }\r\n        var on = this.day(input.on);\r\n        if (on) {\r\n            input.start = on.start();\r\n            input.end = on.end();\r\n            input.year = [on.year];\r\n            input.month = [on.month];\r\n            input.dayOfMonth = [on.dayOfMonth];\r\n        }\r\n        out.duration = Functions.coalesce(input.duration, Constants.DURATION_NONE);\r\n        out.durationUnit = Functions.coalesce(input.durationUnit, Constants.DURATION_DEFAULT_UNIT);\r\n        out.start = this.day(input.start);\r\n        out.end = this.day(input.end);\r\n        out.endWithDuration = out.end ? out.end.add(out.duration, out.durationUnit) : null;\r\n        out.dayOfWeek = this.frequency(input.dayOfWeek);\r\n        out.dayOfMonth = this.frequency(input.dayOfMonth);\r\n        out.dayOfYear = this.frequency(input.dayOfYear);\r\n        out.month = this.frequency(input.month);\r\n        out.week = this.frequency(input.week);\r\n        out.weekOfYear = this.frequency(input.weekOfYear);\r\n        out.weekspanOfYear = this.frequency(input.weekspanOfYear);\r\n        out.fullWeekOfYear = this.frequency(input.fullWeekOfYear);\r\n        out.weekOfMonth = this.frequency(input.weekOfMonth);\r\n        out.weekspanOfMonth = this.frequency(input.weekspanOfMonth);\r\n        out.fullWeekOfMonth = this.frequency(input.fullWeekOfMonth);\r\n        out.year = this.frequency(input.year);\r\n        out.times = this.times(input.times);\r\n        out.exclude = this.exclusions(input.exclude);\r\n        out.updateDurationInDays();\r\n        return out;\r\n    };\r\n    Parse.calendarSchedule = function (input) {\r\n        if (input.schedule instanceof Schedule_Schedule) {\r\n            return input;\r\n        }\r\n        return {\r\n            schedule: this.schedule(input.schedule),\r\n            event: input.event\r\n        };\r\n    };\r\n    Parse.cron = function (pattern, out) {\r\n        if (out === void 0) { out = new Schedule_Schedule(); }\r\n        return out;\r\n    };\r\n    return Parse;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Day.ts\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);\n\r\n\r\n\r\n\r\n// @ts-ignore\r\n\r\nvar Day_Day = (function () {\r\n    function Day(date) {\r\n        this.date = date;\r\n        this.time = date.unix();\r\n        this.millis = date.millisecond();\r\n        this.seconds = date.second();\r\n        this.minute = date.minute();\r\n        this.hour = date.hour();\r\n        this.month = date.month();\r\n        this.year = date.year();\r\n        this.quarter = date.quarter();\r\n        this.dayOfWeek = date.day();\r\n        this.dayOfMonth = date.date();\r\n        this.dayOfYear = date.dayOfYear();\r\n        this.week = date.week();\r\n        this.weekOfYear = Day.getWeekOfYear(date);\r\n        this.weekspanOfYear = Day.getWeekspanOfYear(date);\r\n        this.fullWeekOfYear = Day.getFullWeekOfYear(date);\r\n        this.weekOfMonth = Day.getWeekOfMonth(date);\r\n        this.weekspanOfMonth = Day.getWeekspanOfMonth(date);\r\n        this.fullWeekOfMonth = Day.getFullWeekOfMonth(date);\r\n        this.dayIdentifier = Day.getDayIdentifier(date);\r\n        this.weekIdentifier = Day.getWeekIdentifier(date);\r\n        this.monthIdentifier = Day.getMonthIdentifier(date);\r\n        this.quarterIdentifier = Day.getQuarterIdentifier(date);\r\n    }\r\n    // Same\r\n    Day.prototype.sameDay = function (day) {\r\n        return this.dayIdentifier === day.dayIdentifier;\r\n    };\r\n    Day.prototype.sameMonth = function (day) {\r\n        return this.monthIdentifier === day.monthIdentifier;\r\n    };\r\n    Day.prototype.sameWeek = function (day) {\r\n        return this.weekIdentifier === day.weekIdentifier;\r\n    };\r\n    Day.prototype.sameYear = function (day) {\r\n        return this.year === day.year;\r\n    };\r\n    Day.prototype.sameQuarter = function (day) {\r\n        return this.quarterIdentifier === day.quarterIdentifier;\r\n    };\r\n    Day.prototype.sameHour = function (day) {\r\n        return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour;\r\n    };\r\n    Day.prototype.sameMinute = function (day) {\r\n        return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour && this.minute === day.minute;\r\n    };\r\n    Day.prototype.sameTime = function (time) {\r\n        return this.hour === time.hour && this.minute === time.minute && this.seconds === time.second && this.millis === time.millisecond;\r\n    };\r\n    // Comparison\r\n    Day.prototype.isBefore = function (day, precision) {\r\n        return this.date.isBefore(day.date, precision);\r\n    };\r\n    Day.prototype.isSameOrBefore = function (day, precision) {\r\n        return this.date.isSameOrBefore(day.date, precision);\r\n    };\r\n    Day.prototype.isAfter = function (day, precision) {\r\n        return this.date.isAfter(day.date, precision);\r\n    };\r\n    Day.prototype.isSameOrAfter = function (day, precision) {\r\n        return this.date.isSameOrAfter(day.date, precision);\r\n    };\r\n    Day.prototype.max = function (day) {\r\n        return this.date.isAfter(day.date) ? this : day;\r\n    };\r\n    Day.prototype.min = function (day) {\r\n        return this.date.isBefore(day.date) ? this : day;\r\n    };\r\n    // Between\r\n    Day.prototype.millisBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'milliseconds', true), op, absolute);\r\n    };\r\n    Day.prototype.secondsBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'seconds', true), op, absolute);\r\n    };\r\n    Day.prototype.minutesBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'minutes', true), op, absolute);\r\n    };\r\n    Day.prototype.hoursBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'hours', true), op, absolute);\r\n    };\r\n    Day.prototype.daysBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'days', true), op, absolute);\r\n    };\r\n    Day.prototype.weeksBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'weeks', true), op, absolute);\r\n    };\r\n    Day.prototype.monthsBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'months', true), op, absolute);\r\n    };\r\n    Day.prototype.yearsBetween = function (day, op, absolute) {\r\n        if (op === void 0) { op = Op.DOWN; }\r\n        if (absolute === void 0) { absolute = true; }\r\n        return operate(this.date.diff(day.date, 'years', true), op, absolute);\r\n    };\r\n    Day.prototype.isBetween = function (start, end, inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return this.date.isBetween(start.date, end.date, null, inclusive ? '[]' : '[)');\r\n    };\r\n    Day.prototype.mutate = function (mutator) {\r\n        var d = this.toMoment();\r\n        mutator(d);\r\n        return new Day(d);\r\n    };\r\n    Day.prototype.add = function (amount, unit) {\r\n        return this.mutate(function (d) { return d.add(amount, unit); });\r\n    };\r\n    Day.prototype.relative = function (millis) {\r\n        return this.mutate(function (d) { return d.add(millis, 'milliseconds'); });\r\n    };\r\n    // Days\r\n    Day.prototype.relativeDays = function (days) {\r\n        return this.mutate(function (d) { return d.add(days, 'days'); });\r\n    };\r\n    Day.prototype.prev = function (days) {\r\n        if (days === void 0) { days = 1; }\r\n        return this.relativeDays(-days);\r\n    };\r\n    Day.prototype.next = function (days) {\r\n        if (days === void 0) { days = 1; }\r\n        return this.relativeDays(days);\r\n    };\r\n    Day.prototype.withDayOfMonth = function (day) {\r\n        return this.mutate(function (d) { return d.date(day); });\r\n    };\r\n    Day.prototype.withDayOfWeek = function (dayOfWeek) {\r\n        return this.mutate(function (d) { return d.day(dayOfWeek); });\r\n    };\r\n    Day.prototype.withDayOfYear = function (dayOfYear) {\r\n        return this.mutate(function (d) { return d.dayOfYear(dayOfYear); });\r\n    };\r\n    // Month\r\n    Day.prototype.withMonth = function (month) {\r\n        return this.mutate(function (d) { return d.month(month); });\r\n    };\r\n    Day.prototype.relativeMonths = function (months) {\r\n        return this.mutate(function (d) { return d.add(months, 'months'); });\r\n    };\r\n    Day.prototype.prevMonth = function (months) {\r\n        if (months === void 0) { months = 1; }\r\n        return this.relativeMonths(-months);\r\n    };\r\n    Day.prototype.nextMonth = function (months) {\r\n        if (months === void 0) { months = 1; }\r\n        return this.relativeMonths(months);\r\n    };\r\n    // Week Of Year\r\n    Day.prototype.withWeek = function (week, relativeWeek) {\r\n        if (relativeWeek === void 0) { relativeWeek = this.week; }\r\n        return this.mutate(function (d) { return d.add((week - relativeWeek) * Constants.DAYS_IN_WEEK, 'days'); });\r\n    };\r\n    Day.prototype.withWeekOfYear = function (week) {\r\n        return this.withWeek(week, this.weekOfYear);\r\n    };\r\n    Day.prototype.withFullWeekOfYear = function (week) {\r\n        return this.withWeek(week, this.fullWeekOfYear);\r\n    };\r\n    Day.prototype.withWeekspanOfYear = function (week) {\r\n        return this.withWeek(week, this.weekspanOfYear);\r\n    };\r\n    Day.prototype.withWeekOfMonth = function (week) {\r\n        return this.withWeek(week, this.weekOfMonth);\r\n    };\r\n    Day.prototype.withWeekspanOfMonth = function (week) {\r\n        return this.withWeek(week, this.weekspanOfMonth);\r\n    };\r\n    Day.prototype.withFullWeekOfMonth = function (week) {\r\n        return this.withWeek(week, this.fullWeekOfMonth);\r\n    };\r\n    Day.prototype.relativeWeeks = function (weeks) {\r\n        return this.mutate(function (d) { return d.add(weeks, 'weeks'); });\r\n    };\r\n    Day.prototype.prevWeek = function (weeks) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        return this.relativeWeeks(-weeks);\r\n    };\r\n    Day.prototype.nextWeek = function (weeks) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        return this.relativeWeeks(weeks);\r\n    };\r\n    // Year\r\n    Day.prototype.withYear = function (year) {\r\n        return this.mutate(function (d) { return d.year(year); });\r\n    };\r\n    Day.prototype.relativeYears = function (years) {\r\n        return this.mutate(function (d) { return d.add(years, 'year'); });\r\n    };\r\n    Day.prototype.prevYear = function (years) {\r\n        if (years === void 0) { years = 1; }\r\n        return this.relativeYears(-years);\r\n    };\r\n    Day.prototype.nextYear = function (years) {\r\n        if (years === void 0) { years = 1; }\r\n        return this.relativeYears(years);\r\n    };\r\n    // Hour\r\n    Day.prototype.withHour = function (hour) {\r\n        return this.mutate(function (d) { return d.hour(hour); });\r\n    };\r\n    Day.prototype.relativeHours = function (hours) {\r\n        return this.mutate(function (d) { return d.add(hours, 'hours'); });\r\n    };\r\n    Day.prototype.prevHour = function (hours) {\r\n        if (hours === void 0) { hours = 1; }\r\n        return this.relativeHours(-hours);\r\n    };\r\n    Day.prototype.nextHour = function (hours) {\r\n        if (hours === void 0) { hours = 1; }\r\n        return this.relativeHours(hours);\r\n    };\r\n    // Time\r\n    Day.prototype.withTimes = function (hour, minute, second, millisecond) {\r\n        if (hour === void 0) { hour = Constants.HOUR_MIN; }\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        return this.mutate(function (d) { return d.set({ hour: hour, minute: minute, second: second, millisecond: millisecond }); });\r\n    };\r\n    Day.prototype.withTime = function (time) {\r\n        return this.withTimes(time.hour, time.minute, time.second, time.millisecond);\r\n    };\r\n    // Start & End\r\n    // Time\r\n    Day.prototype.start = function () {\r\n        return this.mutate(function (d) { return d.startOf('day'); });\r\n    };\r\n    Day.prototype.isStart = function () {\r\n        return this.hour === Constants.HOUR_MIN &&\r\n            this.minute === Constants.MINUTE_MIN &&\r\n            this.seconds === Constants.SECOND_MIN &&\r\n            this.millis === Constants.MILLIS_MIN;\r\n    };\r\n    Day.prototype.end = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('day'); }) :\r\n            this.mutate(function (d) { return d.startOf('day').add(1, 'day'); });\r\n    };\r\n    Day.prototype.isEnd = function () {\r\n        return this.hour === Constants.HOUR_MAX &&\r\n            this.minute === Constants.MINUTE_MAX &&\r\n            this.seconds === Constants.SECOND_MAX &&\r\n            this.millis === Constants.MILLIS_MAX;\r\n    };\r\n    // Hour\r\n    Day.prototype.startOfHour = function () {\r\n        return this.mutate(function (d) { return d.startOf('hour'); });\r\n    };\r\n    Day.prototype.isStartOfHour = function () {\r\n        return this.minute === Constants.MINUTE_MIN &&\r\n            this.seconds === Constants.SECOND_MIN &&\r\n            this.millis === Constants.MILLIS_MIN;\r\n    };\r\n    Day.prototype.endOfHour = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('hour'); }) :\r\n            this.mutate(function (d) { return d.startOf('hour').add(1, 'hour'); });\r\n    };\r\n    Day.prototype.isEndOfHour = function () {\r\n        return this.minute === Constants.MINUTE_MAX &&\r\n            this.seconds === Constants.SECOND_MAX &&\r\n            this.millis === Constants.MILLIS_MAX;\r\n    };\r\n    // Week\r\n    Day.prototype.startOfWeek = function () {\r\n        return this.mutate(function (d) { return d.startOf('week'); });\r\n    };\r\n    Day.prototype.isStartOfWeek = function () {\r\n        return this.dayOfWeek === Constants.WEEKDAY_MIN;\r\n    };\r\n    Day.prototype.endOfWeek = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('week'); }) :\r\n            this.mutate(function (d) { return d.startOf('week').add(1, 'week'); });\r\n    };\r\n    Day.prototype.isEndOfWeek = function () {\r\n        return this.dayOfWeek === Constants.WEEKDAY_MAX;\r\n    };\r\n    // Month\r\n    Day.prototype.startOfMonth = function () {\r\n        return this.mutate(function (d) { return d.startOf('month'); });\r\n    };\r\n    Day.prototype.isStartOfMonth = function () {\r\n        return this.dayOfMonth === Constants.DAY_MIN;\r\n    };\r\n    Day.prototype.endOfMonth = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('month'); }) :\r\n            this.mutate(function (d) { return d.startOf('month').add(1, 'month'); });\r\n    };\r\n    Day.prototype.isEndOfMonth = function () {\r\n        return this.dayOfMonth === this.daysInMonth();\r\n    };\r\n    // Year\r\n    Day.prototype.startOfYear = function () {\r\n        return this.mutate(function (d) { return d.startOf('year'); });\r\n    };\r\n    Day.prototype.isStartOfYear = function () {\r\n        return this.month === Constants.MONTH_MIN && this.dayOfMonth === Constants.DAY_MIN;\r\n    };\r\n    Day.prototype.endOfYear = function (inclusive) {\r\n        if (inclusive === void 0) { inclusive = true; }\r\n        return inclusive ?\r\n            this.mutate(function (d) { return d.endOf('year'); }) :\r\n            this.mutate(function (d) { return d.startOf('year').add(1, 'year'); });\r\n    };\r\n    Day.prototype.isEndOfYear = function () {\r\n        return this.month === Constants.MONTH_MAX && this.dayOfMonth === Constants.DAY_MAX;\r\n    };\r\n    // Days In X\r\n    Day.prototype.daysInMonth = function () {\r\n        return this.date.daysInMonth();\r\n    };\r\n    Day.prototype.daysInYear = function () {\r\n        return this.endOfYear().dayOfYear;\r\n    };\r\n    Day.prototype.weeksInYear = function () {\r\n        return this.date.weeksInYear();\r\n    };\r\n    // Display\r\n    Day.prototype.format = function (format) {\r\n        return this.date.format(format);\r\n    };\r\n    Day.prototype.utc = function (keepLocalTime) {\r\n        return this.mutate(function (d) { return d.utc(keepLocalTime); });\r\n    };\r\n    Day.prototype.toMoment = function () {\r\n        return this.date.clone();\r\n    };\r\n    Day.prototype.toDate = function () {\r\n        return this.date.toDate();\r\n    };\r\n    Day.prototype.toArray = function () {\r\n        return this.date.toArray();\r\n    };\r\n    Day.prototype.toJSON = function () {\r\n        return this.date.toJSON();\r\n    };\r\n    Day.prototype.toISOString = function (keepOffset) {\r\n        if (keepOffset === void 0) { keepOffset = false; }\r\n        return this.date.toISOString(keepOffset);\r\n    };\r\n    Day.prototype.toObject = function () {\r\n        return this.date.toObject();\r\n    };\r\n    Day.prototype.toString = function () {\r\n        return this.date.toString();\r\n    };\r\n    // State\r\n    Day.prototype.isDST = function () {\r\n        return this.date.isDST();\r\n    };\r\n    Day.prototype.isLeapYear = function () {\r\n        return this.date.isLeapYear();\r\n    };\r\n    // Instances\r\n    Day.now = function () {\r\n        return new Day(__WEBPACK_IMPORTED_MODULE_3_moment__());\r\n    };\r\n    Day.today = function () {\r\n        return this.now().start();\r\n    };\r\n    Day.tomorrow = function () {\r\n        return this.today().next();\r\n    };\r\n    Day.fromMoment = function (moment) {\r\n        return moment && moment.isValid() ? new Day(moment) : null;\r\n    };\r\n    Day.unix = function (millis) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(millis));\r\n    };\r\n    Day.parse = function (input) {\r\n        return Parse_Parse.day(input);\r\n    };\r\n    Day.fromString = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromFormat = function (input, formats) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input, formats));\r\n    };\r\n    Day.fromObject = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromDate = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromArray = function (input) {\r\n        return this.fromMoment(__WEBPACK_IMPORTED_MODULE_3_moment__(input));\r\n    };\r\n    Day.fromDayIdentifier = function (id) {\r\n        var date = id % 100;\r\n        var month = (Math.floor(id / 100) % 100) - 1;\r\n        var year = Math.floor(id / 10000);\r\n        return this.build(year, month, date);\r\n    };\r\n    Day.build = function (year, month, date, hour, minute, second, millisecond) {\r\n        if (date === void 0) { date = Constants.DAY_MIN; }\r\n        if (hour === void 0) { hour = Constants.HOUR_MIN; }\r\n        if (minute === void 0) { minute = Constants.MINUTE_MIN; }\r\n        if (second === void 0) { second = Constants.SECOND_MIN; }\r\n        if (millisecond === void 0) { millisecond = Constants.MILLIS_MIN; }\r\n        return new Day(__WEBPACK_IMPORTED_MODULE_3_moment__({ year: year, month: month, date: date, hour: hour, minute: minute, second: second, millisecond: millisecond }));\r\n    };\r\n    Day.getWeekspanOfYear = function (date) {\r\n        return Math.floor((date.dayOfYear() - 1) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getWeekOfYear = function (date) {\r\n        var firstOfYear = date.clone().startOf('year');\r\n        var weeks = date.week();\r\n        return firstOfYear.day() > Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY ? weeks - 1 : weeks;\r\n    };\r\n    Day.getFullWeekOfYear = function (date) {\r\n        var firstOfYear = date.clone().startOf('year');\r\n        var weeks = date.week();\r\n        return firstOfYear.day() === Constants.WEEKDAY_MIN ? weeks : weeks - 1;\r\n    };\r\n    Day.getWeekspanOfMonth = function (date) {\r\n        return Math.floor((date.date() - 1) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getFullWeekOfMonth = function (date) {\r\n        return Math.floor((date.date() - 1 - date.day() + Constants.DAYS_IN_WEEK) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getWeekOfMonth = function (date) {\r\n        var dom = date.date();\r\n        var dow = date.day();\r\n        var sundayDate = dom - dow;\r\n        return Math.floor((sundayDate + Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY + 5) / Constants.DAYS_IN_WEEK);\r\n    };\r\n    Day.getWeekIdentifier = function (date) {\r\n        return date.week() + date.year() * 100;\r\n    };\r\n    Day.getMonthIdentifier = function (date) {\r\n        return (date.month() + 1) + date.year() * 100;\r\n    };\r\n    Day.getDayIdentifier = function (date) {\r\n        return date.date() + (date.month() + 1) * 100 + date.year() * 10000;\r\n    };\r\n    Day.getQuarterIdentifier = function (date) {\r\n        return date.quarter() + date.year() * 10;\r\n    };\r\n    Day.LOAD_TIME = Day.now();\r\n    return Day;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Calendar.ts\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Calendar_CalendarDay = (function (_super) {\r\n    __extends(CalendarDay, _super);\r\n    function CalendarDay() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.currentDay = false;\r\n        _this.currentWeek = false;\r\n        _this.currentMonth = false;\r\n        _this.currentYear = false;\r\n        _this.currentOffset = 0;\r\n        _this.selectedDay = false;\r\n        _this.selectedWeek = false;\r\n        _this.selectedMonth = false;\r\n        _this.selectedYear = false;\r\n        _this.inCalendar = false;\r\n        _this.events = [];\r\n        return _this;\r\n    }\r\n    CalendarDay.prototype.updateCurrent = function (current) {\r\n        this.currentDay = this.sameDay(current);\r\n        this.currentWeek = this.sameWeek(current);\r\n        this.currentMonth = this.sameMonth(current);\r\n        this.currentYear = this.sameYear(current);\r\n        this.currentOffset = this.daysBetween(current, Op.DOWN, false);\r\n        return this;\r\n    };\r\n    CalendarDay.prototype.updateSelected = function (selected) {\r\n        this.selectedDay = selected.matchesDay(this);\r\n        this.selectedWeek = selected.matchesWeek(this);\r\n        this.selectedMonth = selected.matchesMonth(this);\r\n        this.selectedYear = selected.matchesYear(this);\r\n        return this;\r\n    };\r\n    CalendarDay.prototype.clearSelected = function () {\r\n        this.selectedDay = this.selectedWeek = this.selectedMonth = this.selectedYear = false;\r\n        return this;\r\n    };\r\n    return CalendarDay;\r\n}(Day_Day));\r\n\r\nvar Calendar_CalendarEvent = (function () {\r\n    function CalendarEvent(id, event, schedule, time, actualDay) {\r\n        this.event = event;\r\n        this.schedule = schedule;\r\n        this.time = time;\r\n        this.fullDay = time.isPoint;\r\n        this.starting = time.start.sameDay(actualDay);\r\n    }\r\n    Object.defineProperty(CalendarEvent.prototype, \"scheduleId\", {\r\n        get: function () {\r\n            return Math.floor(this.id / Constants.MAX_EVENTS_PER_DAY);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CalendarEvent;\r\n}());\r\n\r\nvar Calendar_Calendar = (function () {\r\n    function Calendar(start, end, type, size, moveStart, moveEnd, input) {\r\n        this.fill = false;\r\n        this.minimumSize = 0;\r\n        this.repeatCovers = true;\r\n        this.listTimes = false;\r\n        this.eventsOutside = false;\r\n        this.selection = null;\r\n        this.days = [];\r\n        this.schedules = [];\r\n        this.span = new DaySpan_DaySpan(start, end);\r\n        this.filled = new DaySpan_DaySpan(start, end);\r\n        this.type = type;\r\n        this.size = size;\r\n        this.moveStart = moveStart;\r\n        this.moveEnd = moveEnd;\r\n        if (Functions.isDefined(input)) {\r\n            this.withInput(input, false);\r\n        }\r\n        this.refresh();\r\n    }\r\n    Calendar.prototype.withInput = function (input, refresh) {\r\n        if (refresh === void 0) { refresh = true; }\r\n        this.fill = Functions.coalesce(input.fill, this.fill);\r\n        this.minimumSize = Functions.coalesce(input.minimumSize, this.minimumSize);\r\n        this.repeatCovers = Functions.coalesce(input.repeatCovers, this.repeatCovers);\r\n        this.listTimes = Functions.coalesce(input.listTimes, this.listTimes);\r\n        this.eventsOutside = Functions.coalesce(input.eventsOutside, this.eventsOutside);\r\n        if (Functions.isArray(input.schedules)) {\r\n            this.removeSchedules();\r\n            this.addSchedules(input.schedules, false, !refresh);\r\n        }\r\n        if (refresh) {\r\n            this.refresh();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.withMinimumSize = function (minimumSize) {\r\n        this.minimumSize = minimumSize;\r\n        this.refresh();\r\n        return this;\r\n    };\r\n    Calendar.prototype.withRepeatCovers = function (repeatCovers) {\r\n        this.repeatCovers = repeatCovers;\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Calendar.prototype.withListTimes = function (listTimes) {\r\n        this.listTimes = listTimes;\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Calendar.prototype.withEventsOutside = function (eventsOutside) {\r\n        this.eventsOutside = eventsOutside;\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Object.defineProperty(Calendar.prototype, \"start\", {\r\n        get: function () {\r\n            return this.span.start;\r\n        },\r\n        set: function (day) {\r\n            this.span.start = day;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Calendar.prototype, \"end\", {\r\n        get: function () {\r\n            return this.span.end;\r\n        },\r\n        set: function (day) {\r\n            this.span.end = day;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Calendar.prototype.summary = function (dayOfWeek, short, repeat, contextual, delimiter) {\r\n        if (dayOfWeek === void 0) { dayOfWeek = true; }\r\n        if (short === void 0) { short = false; }\r\n        if (repeat === void 0) { repeat = false; }\r\n        if (contextual === void 0) { contextual = true; }\r\n        if (delimiter === void 0) { delimiter = ' - '; }\r\n        return this.span.summary(this.type, dayOfWeek, short, repeat, contextual, delimiter);\r\n    };\r\n    Calendar.prototype.split = function (by) {\r\n        if (by === void 0) { by = 1; }\r\n        var split = [];\r\n        var start = this.start;\r\n        var end = this.moveEnd(this.end, by - this.size);\r\n        for (var i = 0; i < this.size; i++) {\r\n            split.push(new Calendar(start, end, this.type, by, this.moveStart, this.moveEnd, this));\r\n            start = this.moveStart(start, by);\r\n            end = this.moveEnd(end, by);\r\n        }\r\n        return split;\r\n    };\r\n    Calendar.prototype.refresh = function (today) {\r\n        if (today === void 0) { today = Day_Day.today(); }\r\n        this.length = this.span.days(Op.UP, true);\r\n        this.resetDays();\r\n        this.refreshCurrent(today);\r\n        this.refreshSelection();\r\n        this.refreshEvents();\r\n        return this;\r\n    };\r\n    Calendar.prototype.resetFilled = function () {\r\n        this.filled.start = this.fill ? this.start.startOfWeek() : this.start;\r\n        this.filled.end = this.fill ? this.end.endOfWeek() : this.end;\r\n        return this;\r\n    };\r\n    Calendar.prototype.resetDays = function () {\r\n        this.resetFilled();\r\n        var days = this.days;\r\n        var filled = this.filled;\r\n        var current = filled.start;\r\n        var daysBetween = filled.days(Op.UP);\r\n        var total = Math.max(this.minimumSize, daysBetween);\r\n        for (var i = 0; i < total; i++) {\r\n            var day = days[i];\r\n            if (!day || !day.sameDay(current)) {\r\n                day = new Calendar_CalendarDay(current.date);\r\n                if (i < days.length) {\r\n                    days.splice(i, 1, day);\r\n                }\r\n                else {\r\n                    days.push(day);\r\n                }\r\n            }\r\n            day.inCalendar = this.span.contains(day);\r\n            current = current.next();\r\n        }\r\n        if (days.length > total) {\r\n            days.splice(total, total - days.length);\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.refreshCurrent = function (today) {\r\n        if (today === void 0) { today = Day_Day.today(); }\r\n        return this.iterateDays(function (d) {\r\n            d.updateCurrent(today);\r\n        });\r\n    };\r\n    Calendar.prototype.refreshSelection = function () {\r\n        var _this = this;\r\n        return this.iterateDays(function (d) {\r\n            if (_this.selection) {\r\n                d.updateSelected(_this.selection);\r\n            }\r\n            else {\r\n                d.clearSelected();\r\n            }\r\n        });\r\n    };\r\n    Calendar.prototype.refreshEvents = function () {\r\n        var _this = this;\r\n        return this.iterateDays(function (d) {\r\n            if (d.inCalendar || _this.eventsOutside) {\r\n                d.events = _this.eventsForDay(d, _this.listTimes, _this.repeatCovers);\r\n            }\r\n        });\r\n    };\r\n    Calendar.prototype.iterateDays = function (iterator) {\r\n        var days = this.days;\r\n        for (var i = 0; i < days.length; i++) {\r\n            iterator(days[i]);\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.eventsForDay = function (day, getTimes, covers) {\r\n        if (getTimes === void 0) { getTimes = true; }\r\n        if (covers === void 0) { covers = true; }\r\n        var events = [];\r\n        var entries = this.schedules;\r\n        for (var entryIndex = 0; entryIndex < entries.length; entryIndex++) {\r\n            var entry = entries[entryIndex];\r\n            var schedule = entry.schedule;\r\n            var event_1 = entry.event;\r\n            var eventId = entryIndex * Constants.MAX_EVENTS_PER_DAY;\r\n            if ((covers && schedule.coversDay(day)) || (!covers && schedule.matchesDay(day))) {\r\n                if (getTimes) {\r\n                    var times = covers ?\r\n                        entry.schedule.getSpansOver(day) :\r\n                        entry.schedule.getSpansOn(day);\r\n                    for (var timeIndex = 0; timeIndex < times.length; timeIndex++) {\r\n                        events.push(new Calendar_CalendarEvent(eventId + timeIndex, event_1, schedule, times[timeIndex], day));\r\n                    }\r\n                }\r\n                else {\r\n                    var over = entry.schedule.getSpanOver(day);\r\n                    if (over) {\r\n                        events.push(new Calendar_CalendarEvent(eventId, event_1, schedule, over, day));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    Calendar.prototype.findSchedule = function (input) {\r\n        for (var _i = 0, _a = this.schedules; _i < _a.length; _i++) {\r\n            var schedule = _a[_i];\r\n            if (schedule === input || schedule.schedule === input || schedule.event === input) {\r\n                return schedule;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Calendar.prototype.removeSchedules = function (schedules, delayRefresh) {\r\n        if (schedules === void 0) { schedules = null; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        if (schedules) {\r\n            for (var _i = 0, schedules_1 = schedules; _i < schedules_1.length; _i++) {\r\n                var schedule = schedules_1[_i];\r\n                this.removeSchedule(schedule, true);\r\n            }\r\n        }\r\n        else {\r\n            this.schedules = [];\r\n        }\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.removeSchedule = function (schedule, delayRefresh) {\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        var found = this.findSchedule(schedule);\r\n        if (found) {\r\n            this.schedules.splice(this.schedules.indexOf(found), 1);\r\n            if (!delayRefresh) {\r\n                this.refreshEvents();\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.addSchedule = function (schedule, allowDuplicates, delayRefresh) {\r\n        if (allowDuplicates === void 0) { allowDuplicates = false; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        var parsed = Parse_Parse.calendarSchedule(schedule);\r\n        if (!allowDuplicates) {\r\n            var existing = this.findSchedule(parsed);\r\n            if (existing) {\r\n                return this;\r\n            }\r\n        }\r\n        this.schedules.push(parsed);\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.addSchedules = function (schedules, allowDuplicates, delayRefresh) {\r\n        if (allowDuplicates === void 0) { allowDuplicates = false; }\r\n        if (delayRefresh === void 0) { delayRefresh = false; }\r\n        for (var _i = 0, schedules_2 = schedules; _i < schedules_2.length; _i++) {\r\n            var schedule = schedules_2[_i];\r\n            this.addSchedule(schedule, allowDuplicates, true);\r\n        }\r\n        if (!delayRefresh) {\r\n            this.refreshEvents();\r\n        }\r\n        return this;\r\n    };\r\n    Calendar.prototype.select = function (start, end) {\r\n        this.selection = end ? new DaySpan_DaySpan(start, end) : DaySpan_DaySpan.point(start);\r\n        this.refreshSelection();\r\n        return this;\r\n    };\r\n    Calendar.prototype.unselect = function () {\r\n        this.selection = null;\r\n        this.refreshSelection();\r\n        return this;\r\n    };\r\n    Calendar.prototype.move = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        this.start = this.moveStart(this.start, jump);\r\n        this.end = this.moveEnd(this.end, jump);\r\n        this.refresh();\r\n        return this;\r\n    };\r\n    Calendar.prototype.next = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        return this.move(jump);\r\n    };\r\n    Calendar.prototype.prev = function (jump) {\r\n        if (jump === void 0) { jump = this.size; }\r\n        return this.move(-jump);\r\n    };\r\n    Calendar.days = function (days, around, focus, input) {\r\n        if (days === void 0) { days = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        var start = around.start().relativeDays(-Math.floor(days * focus));\r\n        var end = start.relativeDays(days - 1).end();\r\n        var mover = function (day, amount) { return day.relativeDays(amount); };\r\n        return new Calendar(start, end, Units.DAY, days, mover, mover, input);\r\n    };\r\n    Calendar.weeks = function (weeks, around, focus, input) {\r\n        if (weeks === void 0) { weeks = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        var start = around.start().startOfWeek().relativeWeeks(-Math.floor(weeks * focus));\r\n        var end = start.relativeWeeks(weeks - 1).endOfWeek();\r\n        var mover = function (day, amount) { return day.relativeWeeks(amount); };\r\n        return new Calendar(start, end, Units.WEEK, weeks, mover, mover, input);\r\n    };\r\n    Calendar.months = function (months, around, focus, input) {\r\n        if (months === void 0) { months = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        if (input === void 0) { input = { fill: true }; }\r\n        var start = around.start().startOfMonth().relativeMonths(-Math.floor(months * focus));\r\n        var end = start.relativeMonths(months - 1).endOfMonth();\r\n        var moveStart = function (day, amount) { return day.relativeMonths(amount); };\r\n        var moveEnd = function (day, amount) { return day.startOfMonth().relativeMonths(amount).endOfMonth(); };\r\n        return new Calendar(start, end, Units.MONTH, months, moveStart, moveEnd, input);\r\n    };\r\n    Calendar.years = function (years, around, focus, input) {\r\n        if (years === void 0) { years = 1; }\r\n        if (around === void 0) { around = Day_Day.today(); }\r\n        if (focus === void 0) { focus = 0.4999; }\r\n        if (input === void 0) { input = { fill: true }; }\r\n        var start = around.start().startOfMonth().relativeMonths(-Math.floor(years * focus));\r\n        var end = start.relativeMonths(years - 1).endOfYear();\r\n        var mover = function (day, amount) { return day.relativeYears(amount); };\r\n        return new Calendar(start, end, Units.YEAR, years, mover, mover, input);\r\n    };\r\n    return Calendar;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Month.ts\n\r\nvar Month = (function () {\r\n    function Month() {\r\n    }\r\n    Month.JANUARY = 0;\r\n    Month.FEBRUARY = 1;\r\n    Month.MARCH = 2;\r\n    Month.APRIL = 3;\r\n    Month.MAY = 4;\r\n    Month.JUNE = 5;\r\n    Month.JULY = 6;\r\n    Month.AUGUST = 7;\r\n    Month.SEPTEMBER = 8;\r\n    Month.OCTOBER = 9;\r\n    Month.NOVEMBER = 10;\r\n    Month.DECEMBER = 11;\r\n    return Month;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Suffix.ts\n\r\nvar Suffix = (function () {\r\n    function Suffix() {\r\n    }\r\n    Object.defineProperty(Suffix, \"CACHE\", {\r\n        get: function () {\r\n            if (!this._CACHE) {\r\n                this._CACHE = [];\r\n                for (var i = 0; i < this._CACHE_SIZE; i++) {\r\n                    this._CACHE[i] = this.determine(i);\r\n                }\r\n            }\r\n            return this._CACHE;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Suffix.determine = function (value) {\r\n        return value >= 11 && value <= 13 ? 'th' : this.MAP[value % this.MAP.length];\r\n    };\r\n    Suffix.get = function (value, append) {\r\n        if (append === void 0) { append = false; }\r\n        var suffix = this.determine(value);\r\n        return append ? value + suffix : suffix;\r\n    };\r\n    Suffix.MAP = [\r\n        'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'\r\n    ];\r\n    Suffix._CACHE_SIZE = 366;\r\n    return Suffix;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/Weekday.ts\n\r\nvar Weekday = (function () {\r\n    function Weekday() {\r\n    }\r\n    Weekday.SUNDAY = 0;\r\n    Weekday.MONDAY = 1;\r\n    Weekday.TUESDAY = 2;\r\n    Weekday.WEDNESDAY = 3;\r\n    Weekday.THURSDAY = 4;\r\n    Weekday.FRIDAY = 5;\r\n    Weekday.SATURDAY = 6;\r\n    return Weekday;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/index.ts\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"CalendarDay\", function() { return Calendar_CalendarDay; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"CalendarEvent\", function() { return Calendar_CalendarEvent; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Calendar\", function() { return Calendar_Calendar; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Constants\", function() { return Constants; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Day\", function() { return Day_Day; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"DaySpan\", function() { return DaySpan_DaySpan; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Functions\", function() { return Functions; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Month\", function() { return Month; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Op\", function() { return Op; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"operate\", function() { return operate; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Parse\", function() { return Parse_Parse; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Schedule\", function() { return Schedule_Schedule; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Suffix\", function() { return Suffix; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Time\", function() { return Time_Time; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Units\", function() { return Units; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Weekday\", function() { return Weekday; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// dayspan.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2cbcdb7ce3d5cccb2120","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"moment\",\"commonjs2\":\"moment\",\"amd\":\"moment\",\"root\":\"moment\"}\n// module id = 0\n// module chunks = 0","\nexport enum Op\n{\n  NONE,\n  FLOOR,\n  CEIL,\n  ROUND,\n  TRUNCATE,\n  UP,\n  DOWN\n}\n\nexport function operate(value: number, op: Op, absolute: boolean = false)\n{\n  if (isFinite(value))\n  {\n    if (absolute)\n    {\n      value = Math.abs( value );\n    }\n\n    switch (op)\n    {\n    case Op.NONE:\n      return value;\n    case Op.FLOOR:\n      return Math.floor( value );\n    case Op.CEIL:\n      return Math.ceil( value );\n    case Op.ROUND:\n      return Math.round( value );\n    case Op.TRUNCATE:\n    case Op.DOWN:\n      return value < 0 ? Math.ceil( value ) : Math.floor( value );\n    case Op.UP:\n      return value < 0 ? Math.floor( value ) : Math.ceil( value );\n    }\n  }\n\n  return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Op.ts","\n\n/**\n * The class which contains commonly used functions by the library. These\n * functions and variables exist in a class so they may be overridden if\n * desired.\n */\nexport class Functions\n{\n\n  /**\n   * Determines whether the given input is an array.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is an array, otherwise false.\n   */\n  public static isArray(input: any): boolean\n  {\n    return input instanceof Array;\n  }\n\n  /**\n   * Determines whether the given input is a string.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is a string, otherwise false.\n   */\n  public static isString(input: any): boolean\n  {\n    return typeof(input) === 'string';\n  }\n\n\n  public static isNumber(input: any): boolean\n  {\n    return isFinite(input);\n  }\n\n  public static isObject(input: any): boolean\n  {\n    return !this.isArray(input) && typeof(input) === 'object';\n  }\n\n  /**\n   * Determines whether the given input is defined.\n   *\n   * @param input The variable to test.\n   * @return True if the variable is defined, otherwise false.\n   */\n  public static isDefined(input: any): boolean\n  {\n    return typeof(input) !== 'undefined';\n  }\n\n  public static isFrequencyValueEvery(input: any): boolean\n  {\n    return this.isObject( input ) && this.isNumber( input.every );\n  }\n\n  public static isFrequencyValueOneOf(input: any): boolean\n  {\n    return this.isArray( input ) && input.length > 0;\n  }\n\n\n\n  /**\n   * Returns the first argument which is defined.\n   *\n   * @param a The first argument to look at.\n   * @param b The second argument to look at.\n   * @return The first defined argument.\n   * @see [[Functions.isDefined]]\n   */\n  public static coalesce(a: any, b: any, c?: any): any\n  {\n    return this.isDefined( a ) ? a : (this.isDefined( b ) ? b : c);\n  }\n\n  public static pad(x: string, length: number, padding: string, before: boolean): string\n  {\n    while (x.length < length)\n    {\n      before ? x = padding + x : x = x + padding;\n    }\n\n    return x;\n  }\n\n  public static padNumber(x: number, length: number, first: number = length)\n  {\n    return this.pad(x + '', length, '0', true).substring( 0, first );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Functions.ts","\n\nexport class Constants\n{\n  public static MILLIS_IN_SECOND: number = 1000;\n  public static MILLIS_IN_MINUTE: number = 1000 * 60;\n  public static MILLIS_IN_HOUR: number = 1000 * 60 * 60;\n  public static MILLIS_IN_DAY: number = 1000 * 60 * 60 * 24;\n  public static MILLIS_IN_WEEK: number = 1000 * 60 * 60 * 24 * 7;\n\n  public static DAYS_IN_WEEK: number = 7;\n  public static MONTHS_IN_YEAR: number = 12;\n  public static HOURS_IN_DAY: number = 24;\n\n  public static MONTH_MIN: number = 0;\n  public static MONTH_MAX: number = 11;\n  public static DAY_MIN: number = 1;\n  public static DAY_MAX: number = 31;\n  public static HOUR_MIN: number = 0;\n  public static HOUR_MAX: number = 23;\n  public static MINUTE_MIN: number = 0;\n  public static MINUTE_MAX: number = 59;\n  public static SECOND_MIN: number = 0;\n  public static SECOND_MAX: number = 59;\n  public static MILLIS_MIN: number = 0;\n  public static MILLIS_MAX: number = 999;\n  public static WEEKDAY_MIN: number = 0;\n  public static WEEKDAY_MAX: number = 6;\n\n  public static START_NONE: number = 0;\n  public static END_NONE: number = 0;\n  public static DURATION_NONE: number = 0;\n  public static DURATION_DEFAULT_UNIT: string = 'minutes';\n\n  public static MAX_EVENTS_PER_DAY: number = 24;\n\n  public static WEEK_OF_MONTH_MINIMUM_WEEKDAY: number = 4; // Thursday by default\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Constants.ts","\n\nexport enum Units\n{\n  DAY,\n  WEEK,\n  MONTH,\n  YEAR\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Units.ts","\nimport { Day } from './Day';\nimport { Op } from './Op';\nimport { Units } from './Units';\n\n\nexport class DaySpan {\n\n  public start: Day;\n  public end: Day;\n\n  public constructor(start: Day, end: Day) {\n    this.start = start;\n    this.end = end;\n  }\n\n  public get isPoint(): boolean {\n    return this.start.time === this.end.time;\n  }\n\n  public contains(day: Day): boolean {\n    return day.time >= this.start.time && day.time <= this.end.time;\n  }\n\n  public matchesDay(day: Day): boolean {\n    return this.contains( day ) || day.sameDay( this.start ) || day.sameDay( this.end );\n  }\n\n  public matchesWeek(day: Day): boolean {\n    return this.contains( day ) || day.sameWeek( this.start ) || day.sameWeek( this.end );\n  }\n\n  public matchesMonth(day: Day): boolean {\n    return this.contains( day ) || day.sameMonth( this.start ) || day.sameMonth( this.end );\n  }\n\n  public matchesYear(day: Day): boolean {\n    return this.contains( day ) || day.sameYear( this.start ) || day.sameYear( this.end );\n  }\n\n\n  public millis(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.millisBetween(this.end, op, absolute);\n  }\n\n  public seconds(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.secondsBetween(this.end, op, absolute);\n  }\n\n  public minutes(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.minutesBetween(this.end, op, absolute);\n  }\n\n  public hours(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.hoursBetween(this.end, op, absolute);\n  }\n\n  public days(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.daysBetween(this.end, op, absolute);\n  }\n\n  public weeks(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.weeksBetween(this.end, op, absolute);\n  }\n\n  public months(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.monthsBetween(this.end, op, absolute);\n  }\n\n  public years(op: Op = Op.DOWN, absolute: boolean = true): number {\n    return this.start.yearsBetween(this.end, op, absolute);\n  }\n\n  public summary(type: Units, dayOfWeek: boolean = true, short: boolean = false, repeat: boolean = false, contextual: boolean = true, delimiter: string = ' - '): string\n  {\n    let formats = DaySpan.SUMMARY_FORMATS[ type ];\n    let today: Day = Day.today();\n    let showStartYear: boolean = !contextual || !this.start.sameYear( today );\n    let showEndYear: boolean = !contextual || !this.end.sameYear( today );\n    let start: string = this.start.format( formats(short, dayOfWeek, showStartYear) );\n    let end: string = this.end.format( formats(short, dayOfWeek, showEndYear) );\n    let summary: string = start;\n\n    if (start !== end)\n    {\n      if (!repeat)\n      {\n        summary = this.start.format( formats(short, dayOfWeek, !this.start.sameYear(this.end)) );\n      }\n\n      summary += delimiter;\n      summary += end;\n    }\n    else\n    {\n      summary = start;\n    }\n\n    return summary;\n  }\n\n  public intersects(span: DaySpan): boolean {\n    return !(\n      this.end.time < span.start.time ||\n      this.start.time > span.end.time\n    );\n  }\n\n  public intersection(span: DaySpan): DaySpan {\n    let start: number = Math.max(this.start.time, span.start.time);\n    let end: number = Math.min(this.end.time, span.end.time);\n\n    return start >= end ? null : new DaySpan(Day.unix(start), Day.unix(end));\n  }\n\n  public static point(day: Day): DaySpan {\n    return new DaySpan( day, day );\n  }\n\n\n  public static SUMMARY_FORMATS =\n  {\n    [Units.DAY]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\n    },\n    [Units.WEEK]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (dayOfWeek ? (short ? 'ddd, ' : 'dddd, ') : '') + (short ? 'MMM ' : 'MMMM ') + 'Do' + (year ? ' YYYY' : '');\n    },\n    [Units.MONTH]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (short ? 'MMM' : 'MMMM') + (year ? ' YYYY' : '');\n    },\n    [Units.YEAR]: (short: boolean, dayOfWeek: boolean, year: boolean) => {\n      return (year ? 'YYYY' : '');\n    }\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DaySpan.ts","\nimport { Functions as fn } from './Functions';\nimport { FrequencyValue, FrequencyCheck } from './Types';\nimport { Day, DayInput, DurationInput } from './Day';\nimport { DaySpan } from './DaySpan';\nimport { Constants } from './Constants';\nimport { Parse } from './Parse';\nimport { Time, TimeInput } from './Time';\n// @ts-ignore\nimport * as moment from 'moment';\n\n\nexport interface ScheduleInput\n{\n  start?: DayInput;\n  end?: DayInput;\n  on?: DayInput;\n  duration?: number;\n  durationUnit?: DurationInput;\n  exclude?: DayInput[];\n  month?: FrequencyValue;\n  year?: FrequencyValue;\n  week?: FrequencyValue;\n  times?: TimeInput[];\n  dayOfWeek?: FrequencyValue;\n  dayOfMonth?: FrequencyValue;\n  dayOfYear?: FrequencyValue;\n  weekOfYear?: FrequencyValue;\n  weekspanOfYear?: FrequencyValue;\n  fullWeekOfYear?: FrequencyValue;\n  weekOfMonth?: FrequencyValue;\n  weekspanOfMonth?: FrequencyValue;\n  fullWeekOfMonth?: FrequencyValue;\n}\n\nexport type ScheduleExclusions = { [dayIdentifier: number]: boolean };\n\n\nexport class Schedule\n{\n\n  public start: Day;\n  public end: Day;\n  public endWithDuration: Day;\n  public duration: number;\n  public durationUnit: DurationInput;\n  public times: Time[];\n  public durationInDays: number;\n  public exclude: ScheduleExclusions;\n  public dayOfWeek: FrequencyCheck;\n  public dayOfMonth: FrequencyCheck;\n  public dayOfYear: FrequencyCheck;\n  public month: FrequencyCheck;\n  public week: FrequencyCheck;\n  public weekOfYear: FrequencyCheck;\n  public weekspanOfYear: FrequencyCheck;\n  public fullWeekOfYear: FrequencyCheck;\n  public weekOfMonth: FrequencyCheck;\n  public weekspanOfMonth: FrequencyCheck;\n  public fullWeekOfMonth: FrequencyCheck;\n  public year: FrequencyCheck;\n\n  public constructor(input?: ScheduleInput)\n  {\n    if (fn.isDefined(input))\n    {\n      this.set(input);\n    }\n  }\n\n  public get lastTime(): Time\n  {\n    return this.times[ this.times.length - 1 ];\n  }\n\n  public set(input: ScheduleInput): this\n  {\n    Parse.schedule(input, this);\n\n    return this;\n  }\n\n  public updateDurationInDays(): this\n  {\n    this.durationInDays = !this.lastTime ? 0 : Math.max(0,\n      Math.ceil(\n        moment.duration(this.lastTime.toMilliseconds(), 'milliseconds')\n          .add(this.duration, this.durationUnit)\n          .subtract(1, 'day')\n          .asDays()\n      )\n    );\n\n    return this;\n  }\n\n  public matchesSpan(day: Day): boolean\n  {\n    return (this.start === null || day.isSameOrAfter(this.start)) &&\n      (this.end === null || day.isBefore(this.endWithDuration));\n  }\n\n  public matchesRange(start: Day, end: Day): boolean\n  {\n    return (this.start === null || start.isSameOrBefore(this.start)) &&\n      (this.end === null || end.isBefore(this.endWithDuration));\n  }\n\n  public isExcluded(day: Day): boolean\n  {\n    return !!this.exclude[ day.dayIdentifier ];\n  }\n\n  public isIncluded(day: Day): boolean\n  {\n    return !this.exclude[ day.dayIdentifier ];\n  }\n\n  public matchesDay(day: Day): boolean\n  {\n    return this.isIncluded( day ) &&\n      this.matchesSpan( day ) &&\n      this.dayOfWeek( day.dayOfWeek ) &&\n      this.dayOfMonth( day.dayOfMonth ) &&\n      this.dayOfYear( day.dayOfYear ) &&\n      this.year( day.year ) &&\n      this.month( day.month ) &&\n      this.week( day.week ) &&\n      this.weekOfYear( day.weekOfYear ) &&\n      this.weekspanOfYear( day.weekspanOfYear ) &&\n      this.fullWeekOfYear( day.fullWeekOfYear ) &&\n      this.weekOfMonth( day.weekOfMonth ) &&\n      this.weekspanOfMonth( day.weekspanOfMonth ) &&\n      this.fullWeekOfMonth( day.fullWeekOfMonth );\n  }\n\n  /**\n   * Determines if the given day is covered by this schedule. A schedule can\n   * specify events that span multiple days - so even though the day does not\n   * match the starting day of a span - it can be a day that is within the\n   * schedule.\n   *\n   * @param day The day to test.\n   * @param\n   */\n  public coversDay(day: Day): boolean\n  {\n    let before: number = this.durationInDays;\n\n    while (before >= 0)\n    {\n      if (this.matchesDay(day))\n      {\n        return true;\n      }\n\n      day = day.prev();\n      before--;\n    }\n\n    return false;\n  }\n\n  public nextDay(day: Day, lookAhead: number = 366): Day\n  {\n    for (let days = 0; days < lookAhead; days++)\n    {\n      day = day.next();\n\n      if (this.matchesDay(day))\n      {\n        return day;\n      }\n    }\n\n    return null;\n  }\n\n  public prevDay(day: Day, lookBack: number = 366): Day\n  {\n    for (let days = 0; days < lookBack; days++)\n    {\n      day = day.prev();\n\n      if (this.matchesDay(day))\n      {\n        return day;\n      }\n    }\n\n    return null;\n  }\n\n  public matchesTime(day: Day): boolean\n  {\n    if (!this.matchesDay( day ))\n    {\n      return false;\n    }\n\n    for (let time of this.times)\n    {\n      if (day.sameTime(time))\n      {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public isFullDay(): boolean\n  {\n    return this.times.length === 0 || this.duration === Constants.DURATION_NONE;\n  }\n\n  public getSpansOver(day: Day): DaySpan[]\n  {\n    let spans: DaySpan[] = [];\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      if (this.matchesDay(day))\n      {\n        spans.push(DaySpan.point(start));\n      }\n    }\n    else\n    {\n      let behind: number = this.durationInDays;\n\n      while (behind >= 0)\n      {\n        if (this.matchesDay(day))\n        {\n          for (let time of this.times)\n          {\n            let hourStart: Day = day.withTime(time);\n            let hourEnd: Day = hourStart.add(this.duration, this.durationUnit);\n            let hourSpan: DaySpan = new DaySpan( hourStart, hourEnd );\n\n            if (hourSpan.matchesDay(start))\n            {\n              spans.push( hourSpan );\n            }\n          }\n        }\n\n        day = day.prev();\n        behind--;\n      }\n    }\n    return spans;\n  }\n\n  public getSpanOver(day: Day): DaySpan\n  {\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      return DaySpan.point(start);\n    }\n    else\n    {\n      let behind: number = this.durationInDays;\n\n      while (behind >= 0)\n      {\n        if (this.matchesDay(day))\n        {\n          return DaySpan.point(day);\n        }\n\n        day = day.prev();\n        behind--;\n      }\n    }\n\n    return null;\n  }\n\n  public getSpansOn(day: Day, check: boolean = false): DaySpan[]\n  {\n    let spans: DaySpan[] = [];\n\n    if (check && !this.matchesDay(day))\n    {\n      return spans;\n    }\n\n    let start: Day = day.start();\n\n    if (this.isFullDay())\n    {\n      spans.push(DaySpan.point(start));\n    }\n    else\n    {\n      for (let time of this.times)\n      {\n        let hourStart: Day = day.withTime(time);\n        let hourEnd: Day = hourStart.add(this.duration, this.durationUnit);\n        let hourSpan: DaySpan = new DaySpan( hourStart, hourEnd );\n\n        spans.push(hourSpan);\n      }\n    }\n\n    return spans;\n  }\n\n  public toInput(returnDays: boolean = false): ScheduleInput\n  {\n    let out: ScheduleInput = {};\n    let exclusions: DayInput[] = [];\n    let times: TimeInput[]  = [];\n\n    for (let dayIdentifierKey in this.exclude)\n    {\n      let dayIdentifier: number = parseInt(dayIdentifierKey);\n\n      exclusions.push( returnDays ? Day.fromDayIdentifier(dayIdentifier)  : dayIdentifier );\n    }\n\n    for (let time of this.times)\n    {\n      times.push( time.toString() );\n    }\n\n    if (this.start) out.start = returnDays ? this.start : this.start.time;\n    if (this.end) out.end = returnDays ? this.end : this.end.time;\n    if (this.duration !== Constants.DURATION_NONE) out.duration = this.duration;\n    if (this.durationUnit !== Constants.DURATION_DEFAULT_UNIT) out.durationUnit = this.durationUnit;\n    if (this.dayOfWeek.input) out.dayOfWeek = this.dayOfWeek.input;\n    if (this.dayOfMonth.input) out.dayOfMonth = this.dayOfMonth.input;\n    if (this.dayOfYear.input) out.dayOfYear = this.dayOfYear.input;\n    if (this.month.input) out.month = this.month.input;\n    if (this.week.input) out.week = this.week.input;\n    if (this.weekOfYear.input) out.weekOfYear = this.weekOfYear.input;\n    if (this.weekspanOfYear.input) out.weekspanOfYear = this.weekspanOfYear.input;\n    if (this.fullWeekOfYear.input) out.fullWeekOfYear = this.fullWeekOfYear.input;\n    if (this.weekOfMonth.input) out.weekOfMonth = this.weekOfMonth.input;\n    if (this.weekspanOfMonth.input) out.weekspanOfMonth = this.weekspanOfMonth.input;\n    if (this.fullWeekOfMonth.input) out.fullWeekOfMonth = this.fullWeekOfMonth.input;\n    if (this.year.input) out.year = this.year.input;\n    if (times.length) out.times = times;\n    if (exclusions.length) out.exclude = exclusions;\n\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Schedule.ts","\nimport { Functions as fn } from './Functions';\nimport { Constants } from './Constants';\nimport { Parse } from './Parse';\n\n\nexport type TimeInput = number | string | {hour: number, minute?: number, second?: number, millisecond?: number};\n\nexport class Time\n{\n\n  public static REGEX = /^(\\d\\d?):?(\\d\\d)?:?(\\d\\d)?\\.?(\\d\\d\\d)?$/;\n\n  public hour: number;\n  public minute: number;\n  public second: number;\n  public millisecond: number;\n\n  public constructor(hour: number, minute: number = Constants.MINUTE_MIN, second: number = Constants.SECOND_MIN, millisecond: number = Constants.MILLIS_MIN)\n  {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond;\n  }\n\n  public format(format: string): string\n  {\n    let formatterEntries = Time.FORMATTERS;\n    let out: string = '';\n\n    for (let i = 0; i < format.length; i++)\n    {\n      let handled: boolean = false;\n\n      for (let k = 0; k < formatterEntries.length && !handled; k++)\n      {\n        let entry = formatterEntries[ k ];\n        let part: string = format.substring( i, i + entry.size );\n\n        if (part.length === entry.size)\n        {\n          let formatter = entry.formats[ part ];\n\n          if (formatter)\n          {\n            out += formatter(this);\n            i += entry.size - 1;\n            handled = true;\n          }\n        }\n      }\n\n      if (!handled)\n      {\n        out += format.charAt(i);\n      }\n    }\n\n    return out;\n  }\n\n  public toMilliseconds(): number\n  {\n    return this.hour * Constants.MILLIS_IN_HOUR +\n      this.minute * Constants.MILLIS_IN_MINUTE +\n      this.second * Constants.MILLIS_IN_SECOND +\n      this.millisecond;\n  }\n\n  public toString(): string\n  {\n    if (this.millisecond) return this.format('HH:mm:ss.SSS');\n    if (this.second) return this.format('HH:mm:ss');\n    if (this.minute) return this.format('HH:mm');\n\n    return this.format('HH');\n  }\n\n  public toIdentifer(): number\n  {\n    return this.hour +\n      this.minute * 100 +\n      this.second * 10000 +\n      this.millisecond * 10000000;\n  }\n\n  public toObject(): TimeInput\n  {\n    let out: TimeInput = {\n      hour: this.hour\n    };\n\n    if (this.minute) out.minute = this.minute;\n    if (this.second) out.second = this.second;\n    if (this.millisecond) out.millisecond = this.millisecond;\n\n    return out;\n  }\n\n  public static parse(input: any): Time\n  {\n    return Parse.time(input);\n  }\n\n  public static fromString(time: string): Time\n  {\n    let matches: string[] = this.REGEX.exec( time );\n\n    if (!matches)\n    {\n      return null;\n    }\n\n    let h: number = parseInt(matches[1]) || 0;\n    let m: number = parseInt(matches[2]) || 0;\n    let s: number = parseInt(matches[3]) || 0;\n    let l: number = parseInt(matches[4]) || 0;\n\n    return this.build(h, m, s, l);\n  }\n\n  public static fromIdentifier(time: number): Time\n  {\n    let h: number = time % 100;\n    let m: number = Math.floor(time / 100) % 100;\n    let s: number = Math.floor(time / 10000) % 100;\n    let l: number = Math.floor(time / 10000000) % 1000;\n\n    return this.build(h, m, s, l);\n  }\n\n  public static build(hour: number, minute: number = Constants.MINUTE_MIN, second: number = Constants.SECOND_MIN, millisecond: number = Constants.MILLIS_MIN): Time\n  {\n    return new Time(hour, minute, second, millisecond)\n  }\n\n  public static FORMATTERS = [\n    {\n      size: 3,\n      formats: {\n        SSS: (t: Time) => fn.padNumber(t.millisecond, 3)\n      }\n    },\n    {\n      size: 2,\n      formats: {\n        HH: (t: Time) => fn.padNumber(t.hour, 2),\n        hh: (t: Time) => fn.padNumber((t.hour % 12) || 12, 2),\n        kk: (t: Time) => fn.padNumber(t.hour + 1, 2),\n        mm: (t: Time) => fn.padNumber(t.minute, 2),\n        ss: (t: Time) => fn.padNumber(t.second, 2),\n        SS: (t: Time) => fn.padNumber(t.millisecond, 3, 2)\n      }\n    },\n    {\n      size: 1,\n      formats: {\n        A: (t: Time) => t.hour < 12 ? 'AM' : 'PM',\n        a: (t: Time) => t.hour < 12 ? 'am' : 'pm',\n        H: (t: Time) => t.hour + '',\n        h: (t: Time) => ((t.hour % 12) || 12) + '',\n        k: (t: Time) => (t.hour + 1) + '',\n        m: (t: Time) => t.minute + '',\n        s: (t: Time) => t.second + '',\n        S: (t: Time) => fn.padNumber(t.millisecond, 3, 1)\n      }\n    }\n  ];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Time.ts","\nimport { Functions as fn } from './Functions';\nimport { FrequencyCheck } from './Types';\nimport { Schedule, ScheduleInput, ScheduleExclusions } from './Schedule';\nimport { Constants } from './Constants';\nimport { Day, DayInput, DurationInput } from './Day';\nimport { CalendarScheduleInput, CalendarSchedule } from './Calendar';\nimport { Time } from './Time';\n\n\n/**\n * The class which takes user input and parses it to specific structures.\n */\nexport class Parse\n{\n\n  public static frequency(input: any, otherwiseEvery: number = 1, otherwiseOffset: number = 0): FrequencyCheck\n  {\n    let check: FrequencyCheck = (value: number) => {\n      return value % otherwiseEvery === otherwiseOffset;\n    };\n\n    if (fn.isFrequencyValueEvery(input))\n    {\n      let offset: number = input.offset || 0;\n      let every: number = input.every;\n\n      check = (value: number) => {\n        return value % every === offset;\n      };\n    }\n\n    if (fn.isFrequencyValueOneOf(input))\n    {\n      let map: object = {};\n\n      for (let i = 0; i < input.length; i++) {\n        map[ input[ i ] ] = true;\n      }\n\n      check = (value: number) => {\n        return !!map[ value ];\n      };\n    }\n\n    check.input = input;\n\n    return check;\n  }\n\n  public static utc(input: any, otherwise: number): number\n  {\n    if (fn.isNumber(input))\n    {\n      return input;\n    }\n\n    if (input instanceof Day)\n    {\n      return input.time;\n    }\n\n    return otherwise;\n  }\n\n  public static day(input: DayInput): Day\n  {\n    if (fn.isNumber(input))\n    {\n      return Day.unix( <number>input );\n    }\n    else if (fn.isString(input))\n    {\n      return Day.parse( input );\n    }\n    else if (input instanceof Day)\n    {\n      return input;\n    }\n    else if (fn.isArray( input ))\n    {\n      return Day.fromArray( <number[]>input );\n    }\n    else if (fn.isObject( input ))\n    {\n      return Day.fromObject( <object>input );\n    }\n    else if (input === true)\n    {\n      return Day.today();\n    }\n\n    return null;\n  }\n\n  public static time(input: any): Time\n  {\n    if (fn.isNumber(input))\n    {\n      return Time.fromIdentifier( <number>input );\n    }\n    if (fn.isString(input))\n    {\n      return Time.fromString( <string>input );\n    }\n    if (fn.isObject(input) && fn.isNumber(input.hour))\n    {\n      return new Time(input.hour, input.minute, input.second, input.millisecond);\n    }\n\n    return null;\n  }\n\n  public static times(input: any): Time[]\n  {\n    let times: Time[] = [];\n\n    if (fn.isArray(input))\n    {\n      for (let timeInput of input)\n      {\n        let time = this.time( timeInput );\n\n        if (time)\n        {\n          times.push( time );\n        }\n      }\n    }\n\n    return times;\n  }\n\n  public static exclusions(input: any): ScheduleExclusions\n  {\n    let exclusions: ScheduleExclusions = {};\n\n    if (fn.isArray(input))\n    {\n      for (let dayIdentifier of input)\n      {\n        if (fn.isNumber(dayIdentifier))\n        {\n          exclusions[ dayIdentifier ] = true;\n        }\n        else\n        {\n          let day: Day = this.day( dayIdentifier );\n\n          if (day)\n          {\n            exclusions[ day.dayIdentifier ] = true;\n          }\n        }\n      }\n    }\n\n    return exclusions;\n  }\n\n  public static schedule(input: ScheduleInput, out: Schedule = new Schedule()): Schedule\n  {\n    let on = this.day( input.on );\n\n    if (on)\n    {\n      input.start = on.start();\n      input.end = on.end();\n      input.year = [on.year];\n      input.month = [on.month];\n      input.dayOfMonth = [on.dayOfMonth];\n    }\n\n    out.duration = fn.coalesce( input.duration, Constants.DURATION_NONE );\n    out.durationUnit = <DurationInput>fn.coalesce( input.durationUnit, Constants.DURATION_DEFAULT_UNIT );\n    out.start = this.day( input.start );\n    out.end = this.day( input.end );\n    out.endWithDuration = out.end ? out.end.add(out.duration, out.durationUnit) : null;\n    out.dayOfWeek = this.frequency( input.dayOfWeek );\n    out.dayOfMonth = this.frequency( input.dayOfMonth );\n    out.dayOfYear = this.frequency( input.dayOfYear );\n    out.month = this.frequency( input.month );\n    out.week = this.frequency( input.week );\n    out.weekOfYear = this.frequency( input.weekOfYear );\n    out.weekspanOfYear = this.frequency( input.weekspanOfYear );\n    out.fullWeekOfYear = this.frequency( input.fullWeekOfYear );\n    out.weekOfMonth = this.frequency( input.weekOfMonth );\n    out.weekspanOfMonth = this.frequency( input.weekspanOfMonth );\n    out.fullWeekOfMonth = this.frequency( input.fullWeekOfMonth );\n    out.year = this.frequency( input.year );\n    out.times = this.times( input.times );\n    out.exclude = this.exclusions( input.exclude );\n    out.updateDurationInDays();\n\n    return out;\n  }\n\n  public static calendarSchedule<T>(input: CalendarScheduleInput<T>): CalendarSchedule<T>\n  {\n    if (input.schedule instanceof Schedule)\n    {\n      return <CalendarSchedule<T>>input;\n    }\n\n    return {\n      schedule: this.schedule( input.schedule ),\n      event: input.event\n    };\n  }\n\n  public static cron(pattern: string, out: Schedule = new Schedule()): Schedule\n  {\n    return out;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Parse.ts","\nimport { Constants } from './Constants';\nimport { Op, operate } from './Op';\nimport { Parse } from './Parse';\nimport { Time } from './Time';\n// @ts-ignore\nimport * as moment from 'moment';\n\n\nexport type DurationInput = moment.unitOfTime.DurationConstructor;\n\nexport type DayInput = number | string | Day | number[] | object | true;\n\nexport class Day\n{\n\n  public static readonly LOAD_TIME: Day = Day.now();\n\n  public readonly date: moment.Moment;\n  public readonly time: number;\n  public readonly millis: number;\n  public readonly seconds: number;\n  public readonly minute: number;\n  public readonly hour: number;\n  public readonly month: number;\n  public readonly year: number;\n  public readonly quarter: number;\n\n  public readonly dayOfWeek: number;\n  public readonly dayOfMonth: number;\n  public readonly dayOfYear: number;\n\n  public readonly week: number;\n  public readonly weekOfYear: number;\n  public readonly weekspanOfYear: number;\n  public readonly fullWeekOfYear: number;\n\n  public readonly weekOfMonth: number;\n  public readonly weekspanOfMonth: number;\n  public readonly fullWeekOfMonth: number;\n\n  public readonly dayIdentifier: number;\n  public readonly weekIdentifier: number;\n  public readonly monthIdentifier: number;\n  public readonly quarterIdentifier: number;\n\n\n\n  public constructor(date: moment.Moment) {\n    this.date             = date;\n    this.time             = date.unix();\n    this.millis           = date.millisecond();\n    this.seconds          = date.second();\n    this.minute           = date.minute();\n    this.hour             = date.hour();\n    this.month            = date.month();\n    this.year             = date.year();\n    this.quarter          = date.quarter();\n    this.dayOfWeek        = date.day();\n    this.dayOfMonth       = date.date();\n    this.dayOfYear        = date.dayOfYear();\n    this.week             = date.week();\n\n    this.weekOfYear       = Day.getWeekOfYear( date );\n    this.weekspanOfYear   = Day.getWeekspanOfYear( date );\n    this.fullWeekOfYear   = Day.getFullWeekOfYear( date );\n    this.weekOfMonth      = Day.getWeekOfMonth( date );\n    this.weekspanOfMonth  = Day.getWeekspanOfMonth( date );\n    this.fullWeekOfMonth  = Day.getFullWeekOfMonth( date );\n\n    this.dayIdentifier    = Day.getDayIdentifier( date );\n    this.weekIdentifier   = Day.getWeekIdentifier( date );\n    this.monthIdentifier  = Day.getMonthIdentifier( date );\n    this.quarterIdentifier = Day.getQuarterIdentifier( date );\n  }\n\n  // Same\n\n  public sameDay(day: Day): boolean {\n    return this.dayIdentifier === day.dayIdentifier;\n  }\n\n  public sameMonth(day: Day): boolean {\n    return this.monthIdentifier === day.monthIdentifier;\n  }\n\n  public sameWeek(day: Day): boolean {\n    return this.weekIdentifier === day.weekIdentifier;\n  }\n\n  public sameYear(day: Day): boolean {\n    return this.year === day.year;\n  }\n\n  public sameQuarter(day: Day): boolean {\n    return this.quarterIdentifier === day.quarterIdentifier;\n  }\n\n  public sameHour(day: Day): boolean {\n    return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour;\n  }\n\n  public sameMinute(day: Day): boolean {\n    return this.dayIdentifier === day.dayIdentifier && this.hour === day.hour && this.minute === day.minute;\n  }\n\n  public sameTime(time: Time): boolean {\n    return this.hour === time.hour && this.minute === time.minute && this.seconds === time.second && this.millis === time.millisecond;\n  }\n\n  // Comparison\n\n  public isBefore(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isBefore( day.date, precision );\n  }\n\n  public isSameOrBefore(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isSameOrBefore( day.date, precision );\n  }\n\n  public isAfter(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isAfter( day.date, precision );\n  }\n\n  public isSameOrAfter(day: Day, precision?: moment.unitOfTime.StartOf): boolean {\n    return this.date.isSameOrAfter( day.date, precision );\n  }\n\n  public max(day: Day): Day {\n    return this.date.isAfter( day.date ) ? this : day;\n  }\n\n  public min(day: Day): Day {\n    return this.date.isBefore( day.date ) ? this : day;\n  }\n\n  // Between\n\n  public millisBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'milliseconds', true ), op, absolute );\n  }\n\n  public secondsBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'seconds', true ), op, absolute );\n  }\n\n  public minutesBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'minutes', true ), op, absolute );\n  }\n\n  public hoursBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'hours', true ), op, absolute );\n  }\n\n  public daysBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'days', true ), op, absolute );\n  }\n\n  public weeksBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'weeks', true ), op, absolute );\n  }\n\n  public monthsBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'months', true ), op, absolute );\n  }\n\n  public yearsBetween(day: Day, op: Op = Op.DOWN, absolute: boolean = true): number {\n    return operate( this.date.diff( day.date, 'years', true ), op, absolute );\n  }\n\n  public isBetween(start: Day, end: Day, inclusive: boolean = true): boolean {\n    return this.date.isBetween(start.date, end.date, null, inclusive ? '[]' : '[)');\n  }\n\n  public mutate(mutator: (date: moment.Moment) => void): Day {\n    var d = this.toMoment();\n    mutator( d );\n    return new Day( d );\n  }\n\n  public add(amount: number, unit: string): Day {\n    return this.mutate(d => d.add(amount, <DurationInput>unit));\n  }\n\n  public relative(millis: number): Day {\n    return this.mutate(d => d.add(millis, 'milliseconds'));\n  }\n\n  // Days\n\n  public relativeDays(days: number): Day {\n    return this.mutate(d => d.add(days, 'days'));\n  }\n\n  public prev(days: number = 1): Day {\n    return this.relativeDays( -days );\n  }\n\n  public next(days: number = 1): Day {\n    return this.relativeDays( days );\n  }\n\n  public withDayOfMonth(day: number): Day {\n    return this.mutate(d => d.date(day));\n  }\n\n  public withDayOfWeek(dayOfWeek: number): Day {\n    return this.mutate(d => d.day(dayOfWeek));\n  }\n\n  public withDayOfYear(dayOfYear: number): Day {\n    return this.mutate(d => d.dayOfYear(dayOfYear));\n  }\n\n  // Month\n\n  public withMonth(month: number): Day {\n    return this.mutate(d => d.month(month));\n  }\n\n  public relativeMonths(months: number): Day {\n    return this.mutate(d => d.add(months, 'months'));\n  }\n\n  public prevMonth(months: number = 1): Day {\n    return this.relativeMonths( -months );\n  }\n\n  public nextMonth(months: number = 1): Day {\n    return this.relativeMonths( months );\n  }\n\n  // Week Of Year\n\n  public withWeek(week: number, relativeWeek: number = this.week): Day {\n    return this.mutate(d => d.add((week - relativeWeek) * Constants.DAYS_IN_WEEK, 'days'));\n  }\n\n  public withWeekOfYear(week: number): Day {\n    return this.withWeek(week, this.weekOfYear);\n  }\n\n  public withFullWeekOfYear(week: number): Day {\n    return this.withWeek(week, this.fullWeekOfYear);\n  }\n\n  public withWeekspanOfYear(week: number): Day {\n    return this.withWeek(week, this.weekspanOfYear);\n  }\n\n  public withWeekOfMonth(week: number): Day {\n    return this.withWeek(week, this.weekOfMonth);\n  }\n\n  public withWeekspanOfMonth(week: number): Day {\n    return this.withWeek(week, this.weekspanOfMonth);\n  }\n\n  public withFullWeekOfMonth(week: number): Day {\n    return this.withWeek(week, this.fullWeekOfMonth);\n  }\n\n  public relativeWeeks(weeks: number): Day {\n    return this.mutate(d => d.add(weeks, 'weeks'));\n  }\n\n  public prevWeek(weeks: number = 1): Day {\n    return this.relativeWeeks( -weeks );\n  }\n\n  public nextWeek(weeks: number = 1): Day {\n    return this.relativeWeeks( weeks );\n  }\n\n  // Year\n\n  public withYear(year: number): Day {\n    return this.mutate(d => d.year(year));\n  }\n\n  public relativeYears(years: number): Day {\n    return this.mutate(d => d.add(years, 'year'));\n  }\n\n  public prevYear(years: number = 1): Day {\n    return this.relativeYears( -years );\n  }\n\n  public nextYear(years: number = 1): Day {\n    return this.relativeYears( years );\n  }\n\n  // Hour\n\n  public withHour(hour: number): Day {\n    return this.mutate(d => d.hour(hour));\n  }\n\n  public relativeHours(hours: number): Day {\n    return this.mutate(d => d.add(hours, 'hours'));\n  }\n\n  public prevHour(hours: number = 1): Day {\n    return this.relativeHours( -hours );\n  }\n\n  public nextHour(hours: number = 1): Day {\n    return this.relativeHours( hours );\n  }\n\n  // Time\n\n  public withTimes(\n      hour: number = Constants.HOUR_MIN,\n      minute: number = Constants.MINUTE_MIN,\n      second: number = Constants.SECOND_MIN,\n      millisecond: number = Constants.MILLIS_MIN): Day {\n    return this.mutate(d => d.set({hour, minute, second, millisecond}));\n  }\n\n  public withTime(time: Time): Day {\n    return this.withTimes(time.hour, time.minute, time.second, time.millisecond);\n  }\n\n  // Start & End\n\n  // Time\n\n  public start(): Day {\n    return this.mutate(d => d.startOf('day'));\n  }\n\n  public isStart(): boolean {\n    return this.hour === Constants.HOUR_MIN &&\n      this.minute === Constants.MINUTE_MIN &&\n      this.seconds === Constants.SECOND_MIN &&\n      this.millis === Constants.MILLIS_MIN;\n  }\n\n  public end(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('day')) :\n      this.mutate(d => d.startOf('day').add(1, 'day'));\n  }\n\n  public isEnd(): boolean {\n    return this.hour === Constants.HOUR_MAX &&\n      this.minute === Constants.MINUTE_MAX &&\n      this.seconds === Constants.SECOND_MAX &&\n      this.millis === Constants.MILLIS_MAX;\n  }\n\n  // Hour\n\n  public startOfHour(): Day {\n    return this.mutate(d => d.startOf('hour'));\n  }\n\n  public isStartOfHour(): boolean {\n    return this.minute === Constants.MINUTE_MIN &&\n      this.seconds === Constants.SECOND_MIN &&\n      this.millis === Constants.MILLIS_MIN;\n  }\n\n  public endOfHour(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('hour')) :\n      this.mutate(d => d.startOf('hour').add(1, 'hour'));\n  }\n\n  public isEndOfHour(): boolean {\n    return this.minute === Constants.MINUTE_MAX &&\n      this.seconds === Constants.SECOND_MAX &&\n      this.millis === Constants.MILLIS_MAX;\n  }\n\n  // Week\n\n  public startOfWeek(): Day {\n    return this.mutate(d => d.startOf('week'));\n  }\n\n  public isStartOfWeek(): boolean {\n    return this.dayOfWeek === Constants.WEEKDAY_MIN;\n  }\n\n  public endOfWeek(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('week')) :\n      this.mutate(d => d.startOf('week').add(1, 'week'));\n  }\n\n  public isEndOfWeek(): boolean {\n    return this.dayOfWeek === Constants.WEEKDAY_MAX;\n  }\n\n  // Month\n\n  public startOfMonth(): Day {\n    return this.mutate(d => d.startOf('month'));\n  }\n\n  public isStartOfMonth(): boolean {\n    return this.dayOfMonth === Constants.DAY_MIN;\n  }\n\n  public endOfMonth(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('month')) :\n      this.mutate(d => d.startOf('month').add(1, 'month'));\n  }\n\n  public isEndOfMonth(): boolean {\n    return this.dayOfMonth === this.daysInMonth();\n  }\n\n  // Year\n\n  public startOfYear(): Day {\n    return this.mutate(d => d.startOf('year'));\n  }\n\n  public isStartOfYear(): boolean {\n    return this.month === Constants.MONTH_MIN && this.dayOfMonth === Constants.DAY_MIN;\n  }\n\n  public endOfYear(inclusive: boolean = true): Day {\n    return inclusive ?\n      this.mutate(d => d.endOf('year')) :\n      this.mutate(d => d.startOf('year').add(1, 'year'));\n  }\n\n  public isEndOfYear(): boolean {\n    return this.month === Constants.MONTH_MAX && this.dayOfMonth === Constants.DAY_MAX;\n  }\n\n  // Days In X\n\n  public daysInMonth(): number {\n    return this.date.daysInMonth();\n  }\n\n  public daysInYear(): number {\n    return this.endOfYear().dayOfYear;\n  }\n\n  public weeksInYear(): number {\n    return this.date.weeksInYear();\n  }\n\n  // Display\n\n  public format(format: string): string {\n    return this.date.format( format );\n  }\n\n  public utc(keepLocalTime?: boolean): Day {\n    return this.mutate(d => d.utc(keepLocalTime));\n  }\n\n  public toMoment(): moment.Moment {\n    return this.date.clone();\n  }\n\n  public toDate(): Date {\n    return this.date.toDate();\n  }\n\n  public toArray(): number[] {\n    return this.date.toArray();\n  }\n\n  public toJSON(): string {\n    return this.date.toJSON();\n  }\n\n  public toISOString(keepOffset: boolean = false): string {\n    return this.date.toISOString( keepOffset );\n  }\n\n  public toObject(): object {\n    return this.date.toObject();\n  }\n\n  public toString(): string {\n    return this.date.toString();\n  }\n\n  // State\n\n  public isDST(): boolean {\n    return this.date.isDST();\n  }\n\n  public isLeapYear(): boolean {\n    return this.date.isLeapYear();\n  }\n\n  // Instances\n\n  public static now(): Day {\n    return new Day(moment());\n  }\n\n  public static today(): Day {\n    return this.now().start();\n  }\n\n  public static tomorrow(): Day {\n    return this.today().next();\n  }\n\n  public static fromMoment(moment: moment.Moment): Day {\n    return moment && moment.isValid() ? new Day( moment ) : null;\n  }\n\n  public static unix(millis: number): Day {\n    return this.fromMoment(moment(millis));\n  }\n\n  public static parse(input: DayInput): Day {\n    return Parse.day(input);\n  }\n\n  public static fromString(input: string): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromFormat(input: string, formats: string | string[]): Day {\n    return this.fromMoment(moment(input, formats));\n  }\n\n  public static fromObject(input: object): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromDate(input: Date): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromArray(input: number[]): Day {\n    return this.fromMoment(moment(input));\n  }\n\n  public static fromDayIdentifier(id: number): Day {\n    let date: number = id % 100;\n    let month: number = (Math.floor(id / 100) % 100) - 1;\n    let year: number = Math.floor(id / 10000);\n\n    return this.build(year, month, date);\n  }\n\n  public static build(year: number, month: number,\n    date: number = Constants.DAY_MIN,\n    hour: number = Constants.HOUR_MIN,\n    minute: number = Constants.MINUTE_MIN,\n    second: number = Constants.SECOND_MIN,\n    millisecond: number = Constants.MILLIS_MIN): Day\n  {\n    return new Day( moment({year, month, date, hour, minute, second, millisecond}) );\n  }\n\n\n\n\n\n\n\n\n  public static getWeekspanOfYear(date: moment.Moment): number\n  {\n    return Math.floor( (date.dayOfYear() - 1) / Constants.DAYS_IN_WEEK );\n  }\n\n  public static getWeekOfYear(date: moment.Moment): number\n  {\n    let firstOfYear = date.clone().startOf('year');\n    let weeks: number = date.week();\n\n    return firstOfYear.day() > Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY ? weeks - 1 : weeks;\n  }\n\n  public static getFullWeekOfYear(date: moment.Moment): number\n  {\n    let firstOfYear = date.clone().startOf('year');\n    let weeks: number = date.week();\n\n    return firstOfYear.day() === Constants.WEEKDAY_MIN ? weeks : weeks - 1;\n  }\n\n  public static getWeekspanOfMonth(date: moment.Moment): number\n  {\n    return Math.floor((date.date() - 1) / Constants.DAYS_IN_WEEK);\n  }\n\n  public static getFullWeekOfMonth(date: moment.Moment): number\n  {\n    return Math.floor((date.date() - 1 - date.day() + Constants.DAYS_IN_WEEK) / Constants.DAYS_IN_WEEK);\n  }\n\n  public static getWeekOfMonth(date: moment.Moment): number\n  {\n    let dom = date.date();\n    let dow = date.day();\n    let sundayDate = dom - dow;\n\n    return Math.floor( ( sundayDate + Constants.WEEK_OF_MONTH_MINIMUM_WEEKDAY + 5 ) / Constants.DAYS_IN_WEEK );\n  }\n\n  public static getWeekIdentifier(date: moment.Moment): number\n  {\n    return date.week() + date.year() * 100;\n  }\n\n  public static getMonthIdentifier(date: moment.Moment): number\n  {\n    return (date.month() + 1) + date.year() * 100;\n  }\n\n  public static getDayIdentifier(date: moment.Moment): number\n  {\n    return date.date() + (date.month() + 1) * 100 + date.year() * 10000;\n  }\n\n  public static getQuarterIdentifier(date: moment.Moment): number\n  {\n    return date.quarter() + date.year() * 10;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Day.ts","\nimport { Functions as fn } from './Functions';\nimport { Day } from './Day';\nimport { DaySpan } from './DaySpan';\nimport { Schedule, ScheduleInput } from './Schedule';\nimport { Op } from './Op';\nimport { Units } from './Units';\nimport { Parse } from './Parse';\nimport { Constants } from './Constants';\n\n\nexport type CalendarMover = (day: Day, amount: number) => Day;\n\nexport class CalendarDay<T> extends Day\n{\n\n  public currentDay: boolean = false;\n  public currentWeek: boolean = false;\n  public currentMonth: boolean = false;\n  public currentYear: boolean = false;\n  public currentOffset: number = 0;\n  public selectedDay: boolean = false;\n  public selectedWeek: boolean = false;\n  public selectedMonth: boolean = false;\n  public selectedYear: boolean = false;\n  public inCalendar: boolean = false;\n  public events: CalendarEvent<T>[] = [];\n\n  public updateCurrent(current: Day): this\n  {\n    this.currentDay = this.sameDay(current);\n    this.currentWeek = this.sameWeek(current);\n    this.currentMonth = this.sameMonth(current);\n    this.currentYear = this.sameYear(current);\n    this.currentOffset = this.daysBetween(current, Op.DOWN, false);\n\n    return this;\n  }\n\n  public updateSelected(selected: DaySpan): this\n  {\n    this.selectedDay = selected.matchesDay(this);\n    this.selectedWeek = selected.matchesWeek(this);\n    this.selectedMonth = selected.matchesMonth(this);\n    this.selectedYear = selected.matchesYear(this);\n\n    return this;\n  }\n\n  public clearSelected(): this\n  {\n    this.selectedDay = this.selectedWeek = this.selectedMonth = this.selectedYear = false;\n    return this;\n  }\n\n}\n\nexport class CalendarEvent<T>\n{\n\n  public id: number;\n  public event: T;\n  public schedule: Schedule;\n  public time: DaySpan;\n  public fullDay: boolean;\n  public starting: boolean;\n\n  public constructor(id: number, event: T, schedule: Schedule, time: DaySpan, actualDay: Day) {\n    this.event = event;\n    this.schedule = schedule;\n    this.time = time;\n    this.fullDay = time.isPoint;\n    this.starting = time.start.sameDay( actualDay );\n  }\n\n  public get scheduleId(): number {\n    return Math.floor( this.id / Constants.MAX_EVENTS_PER_DAY );\n  }\n\n}\n\nexport interface CalendarSchedule<T>\n{\n  schedule: Schedule;\n  event: T;\n}\n\nexport type CalendarScheduleIdentifier<T> = CalendarSchedule<T> | Schedule | T;\n\nexport type CalendarScheduleInput<T> = CalendarSchedule<T> | { schedule: ScheduleInput, event: T };\n\nexport interface CalendarInput<T>\n{\n  fill?: boolean;\n  minimumSize?: number;\n  repeatCovers?: boolean;\n  listTimes?: boolean;\n  eventsOutside?: boolean;\n  schedules?: CalendarSchedule<T>[];\n}\n\nexport class Calendar<T>\n{\n\n  public span: DaySpan;\n  public filled: DaySpan;\n  public length: number;\n  public type: Units;\n  public size: number;\n  public moveStart: CalendarMover;\n  public moveEnd: CalendarMover;\n\n  public fill: boolean = false;\n  public minimumSize: number = 0;\n  public repeatCovers: boolean = true;\n  public listTimes: boolean = false;\n  public eventsOutside: boolean = false;\n\n  public selection: DaySpan = null;\n  public days: CalendarDay<T>[] = [];\n  public schedules: CalendarSchedule<T>[] = [];\n\n  public constructor(start: Day, end: Day, type: Units, size: number, moveStart: CalendarMover, moveEnd: CalendarMover, input?: CalendarInput<T>)\n  {\n    this.span = new DaySpan(start, end);\n    this.filled = new DaySpan(start, end);\n    this.type = type;\n    this.size = size;\n    this.moveStart = moveStart;\n    this.moveEnd = moveEnd;\n\n    if (fn.isDefined(input))\n    {\n      this.withInput(input, false);\n    }\n\n    this.refresh();\n  }\n\n  public withInput(input: CalendarInput<T>, refresh: boolean = true): this\n  {\n    this.fill = fn.coalesce( input.fill, this.fill );\n    this.minimumSize = fn.coalesce( input.minimumSize, this.minimumSize );\n    this.repeatCovers = fn.coalesce( input.repeatCovers, this.repeatCovers );\n    this.listTimes = fn.coalesce( input.listTimes, this.listTimes );\n    this.eventsOutside = fn.coalesce( input.eventsOutside, this.eventsOutside );\n\n    if (fn.isArray(input.schedules))\n    {\n      this.removeSchedules();\n      this.addSchedules(input.schedules, false, !refresh);\n    }\n\n    if (refresh)\n    {\n      this.refresh();\n    }\n\n    return this;\n  }\n\n  public withMinimumSize(minimumSize: number): this\n  {\n    this.minimumSize = minimumSize;\n    this.refresh();\n\n    return this;\n  }\n\n  public withRepeatCovers(repeatCovers: boolean): this\n  {\n    this.repeatCovers = repeatCovers;\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public withListTimes(listTimes: boolean): this\n  {\n    this.listTimes = listTimes;\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public withEventsOutside(eventsOutside: boolean): this\n  {\n    this.eventsOutside = eventsOutside;\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public get start(): Day\n  {\n    return this.span.start;\n  }\n\n  public set start(day: Day)\n  {\n    this.span.start = day;\n  }\n\n  public get end(): Day\n  {\n    return this.span.end;\n  }\n\n  public set end(day: Day)\n  {\n    this.span.end = day;\n  }\n\n  public summary(dayOfWeek: boolean = true, short: boolean = false, repeat: boolean = false, contextual: boolean = true, delimiter: string = ' - '): string\n  {\n    return this.span.summary( this.type, dayOfWeek, short, repeat, contextual, delimiter );\n  }\n\n  public split(by: number = 1): Calendar<T>[]\n  {\n    let split: Calendar<T>[] = [];\n    let start: Day = this.start;\n    let end: Day = this.moveEnd( this.end, by - this.size );\n\n    for (let i = 0; i < this.size; i++)\n    {\n      split.push(new Calendar<T>(start, end, this.type, by, this.moveStart, this.moveEnd, this));\n      start = this.moveStart( start, by );\n      end = this.moveEnd( end, by );\n    }\n\n    return split;\n  }\n\n  public refresh(today: Day = Day.today()): this\n  {\n    this.length = this.span.days(Op.UP, true);\n    this.resetDays();\n    this.refreshCurrent(today);\n    this.refreshSelection();\n    this.refreshEvents();\n\n    return this;\n  }\n\n  public resetFilled(): this\n  {\n    this.filled.start = this.fill ? this.start.startOfWeek() : this.start;\n    this.filled.end = this.fill ? this.end.endOfWeek() : this.end;\n\n    return this;\n  }\n\n  public resetDays(): this\n  {\n    this.resetFilled();\n\n    let days: CalendarDay<T>[] = this.days;\n    let filled: DaySpan = this.filled;\n    let current: Day = filled.start;\n    let daysBetween: number = filled.days(Op.UP);\n    let total: number = Math.max( this.minimumSize, daysBetween );\n\n    for (let i = 0; i < total; i++)\n    {\n      let day: CalendarDay<T> = days[ i ];\n\n      if (!day || !day.sameDay( current ))\n      {\n        day = new CalendarDay<T>( current.date );\n\n        if (i < days.length)\n        {\n          days.splice( i, 1, day );\n        }\n        else\n        {\n          days.push( day );\n        }\n      }\n\n      day.inCalendar = this.span.contains( day );\n\n      current = current.next();\n    }\n\n    if (days.length > total)\n    {\n      days.splice( total, total - days.length );\n    }\n\n    return this;\n  }\n\n  public refreshCurrent(today: Day = Day.today()): this\n  {\n    return this.iterateDays(d =>\n    {\n      d.updateCurrent(today);\n    });\n  }\n\n  public refreshSelection(): this\n  {\n    return this.iterateDays(d =>\n    {\n      if (this.selection)\n      {\n        d.updateSelected( this.selection );\n      }\n      else\n      {\n        d.clearSelected();\n      }\n    });\n  }\n\n  public refreshEvents(): this\n  {\n    return this.iterateDays(d =>\n    {\n      if (d.inCalendar || this.eventsOutside)\n      {\n        d.events = this.eventsForDay(d, this.listTimes, this.repeatCovers);\n      }\n    });\n  }\n\n  public iterateDays(iterator: (day: CalendarDay<T>) => any): this\n  {\n    let days: CalendarDay<T>[] = this.days;\n\n    for (let i = 0; i < days.length; i++)\n    {\n      iterator( days[ i ] );\n    }\n\n    return this;\n  }\n\n  public eventsForDay(day: Day, getTimes: boolean = true, covers: boolean = true): CalendarEvent<T>[]\n  {\n    let events: CalendarEvent<T>[] = [];\n    let entries: CalendarSchedule<T>[] = this.schedules;\n\n    for (let entryIndex = 0; entryIndex < entries.length; entryIndex++)\n    {\n      let entry: CalendarSchedule<T> = entries[ entryIndex ];\n      let schedule: Schedule = entry.schedule;\n      let event: T = entry.event;\n      let eventId: number = entryIndex * Constants.MAX_EVENTS_PER_DAY;\n\n      if ((covers && schedule.coversDay(day)) || (!covers && schedule.matchesDay(day)))\n      {\n        if (getTimes)\n        {\n          let times: DaySpan[] = covers ?\n            entry.schedule.getSpansOver(day) :\n            entry.schedule.getSpansOn(day);\n\n          for (let timeIndex = 0; timeIndex < times.length; timeIndex++)\n          {\n            events.push(new CalendarEvent<T>(eventId + timeIndex, event, schedule, times[ timeIndex ], day));\n          }\n        }\n        else\n        {\n          let over: DaySpan = entry.schedule.getSpanOver(day);\n\n          if (over)\n          {\n            events.push(new CalendarEvent<T>(eventId, event, schedule, over, day));\n          }\n        }\n      }\n    }\n\n    return events\n  }\n\n  public findSchedule(input: CalendarScheduleIdentifier<T>): CalendarSchedule<T>\n  {\n    for (let schedule of this.schedules)\n    {\n      if (schedule === input || schedule.schedule === input || schedule.event === input)\n      {\n        return schedule;\n      }\n    }\n\n    return null;\n  }\n\n  public removeSchedules(schedules: CalendarScheduleIdentifier<T>[] = null, delayRefresh: boolean = false): this\n  {\n    if (schedules)\n    {\n      for (let schedule of schedules)\n      {\n        this.removeSchedule( schedule, true );\n      }\n    }\n    else\n    {\n      this.schedules = [];\n    }\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n    return this;\n  }\n\n  public removeSchedule(schedule: CalendarScheduleIdentifier<T>, delayRefresh: boolean = false): this\n  {\n    let found = this.findSchedule(schedule);\n\n    if (found)\n    {\n      this.schedules.splice( this.schedules.indexOf(found), 1 );\n\n      if (!delayRefresh)\n      {\n        this.refreshEvents();\n      }\n    }\n    return this;\n  }\n\n  public addSchedule(schedule: CalendarScheduleInput<T>, allowDuplicates: boolean = false, delayRefresh: boolean = false): this\n  {\n    let parsed = Parse.calendarSchedule(schedule);\n\n    if (!allowDuplicates)\n    {\n      let existing = this.findSchedule(parsed);\n\n      if (existing)\n      {\n        return this;\n      }\n    }\n\n    this.schedules.push(parsed);\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n\n    return this;\n  }\n\n  public addSchedules(schedules: CalendarScheduleInput<T>[], allowDuplicates: boolean = false, delayRefresh: boolean = false): this\n  {\n    for (let schedule of schedules)\n    {\n      this.addSchedule(schedule, allowDuplicates, true);\n    }\n\n    if (!delayRefresh)\n    {\n      this.refreshEvents();\n    }\n\n    return this;\n  }\n\n  public select(start: Day, end?: Day): this\n  {\n    this.selection = end ? new DaySpan( start, end ) : DaySpan.point( start );\n    this.refreshSelection();\n\n    return this;\n  }\n\n  public unselect(): this\n  {\n    this.selection = null;\n    this.refreshSelection();\n\n    return this;\n  }\n\n  public move(jump: number = this.size): this\n  {\n    this.start = this.moveStart( this.start, jump );\n    this.end = this.moveEnd( this.end, jump );\n    this.refresh();\n\n    return this;\n  }\n\n  public next(jump: number = this.size): this\n  {\n    return this.move( jump );\n  }\n\n  public prev(jump: number = this.size): this\n  {\n    return this.move( -jump );\n  }\n\n  public static days<T>(days: number = 1, around: Day = Day.today(), focus: number = 0.4999, input?: CalendarInput<T>): Calendar<T>\n  {\n    let start: Day = around.start().relativeDays( -Math.floor( days * focus ) );\n    let end: Day = start.relativeDays( days - 1 ).end();\n    let mover: CalendarMover = (day, amount) => day.relativeDays(amount);\n\n    return new Calendar(start, end, Units.DAY, days, mover, mover, input);\n  }\n\n  public static weeks<T>(weeks: number = 1, around: Day = Day.today(), focus: number = 0.4999, input?: CalendarInput<T>): Calendar<T>\n  {\n    let start: Day = around.start().startOfWeek().relativeWeeks( -Math.floor( weeks * focus ) );\n    let end: Day = start.relativeWeeks( weeks - 1 ).endOfWeek();\n    let mover: CalendarMover = (day, amount) => day.relativeWeeks(amount);\n\n    return new Calendar(start, end, Units.WEEK, weeks, mover, mover, input);\n  }\n\n  public static months<T>(months: number = 1, around: Day = Day.today(), focus: number = 0.4999, input: CalendarInput<T> = {fill: true}): Calendar<T>\n  {\n    let start: Day = around.start().startOfMonth().relativeMonths( -Math.floor( months * focus ) );\n    let end: Day = start.relativeMonths( months - 1 ).endOfMonth();\n    let moveStart: CalendarMover = (day, amount) => day.relativeMonths(amount);\n    let moveEnd: CalendarMover = (day, amount) => day.startOfMonth().relativeMonths(amount).endOfMonth();\n\n    return new Calendar(start, end, Units.MONTH, months, moveStart, moveEnd, input);\n  }\n\n  public static years<T>(years: number = 1, around: Day = Day.today(), focus: number = 0.4999, input: CalendarInput<T> = {fill: true}): Calendar<T>\n  {\n    let start: Day = around.start().startOfMonth().relativeMonths( -Math.floor( years * focus ) );\n    let end: Day = start.relativeMonths( years - 1 ).endOfYear();\n    let mover: CalendarMover = (day, amount) => day.relativeYears(amount);\n\n    return new Calendar(start, end, Units.YEAR, years, mover, mover, input);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Calendar.ts","\nexport class Month\n{\n\n  public static JANUARY: number = 0;\n  public static FEBRUARY: number = 1;\n  public static MARCH: number = 2;\n  public static APRIL: number = 3;\n  public static MAY: number = 4;\n  public static JUNE: number = 5;\n  public static JULY: number = 6;\n  public static AUGUST: number = 7;\n  public static SEPTEMBER: number = 8;\n  public static OCTOBER: number = 9;\n  public static NOVEMBER: number = 10;\n  public static DECEMBER: number = 11;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Month.ts","\nexport class Suffix\n{\n\n  public static MAP: string[] = [\n    'th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'\n  ];\n\n  private static _CACHE: string[];\n  \n  private static _CACHE_SIZE: number = 366;\n\n  public static get CACHE(): string[]\n  {\n    if (!this._CACHE)\n    {\n      this._CACHE = [];\n\n      for (let i = 0; i < this._CACHE_SIZE; i++)\n      {\n        this._CACHE[ i ] = this.determine(i);\n      }\n    }\n\n    return this._CACHE;\n  }\n\n  public static determine(value: number): string\n  {\n    return value >= 11 && value <= 13 ? 'th' : this.MAP[ value % this.MAP.length ];\n  }\n\n  public static get(value: number, append: boolean = false): string\n  {\n    let suffix: string = this.determine(value);\n    return append ? value + suffix : suffix;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Suffix.ts","\n\nexport class Weekday\n{\n\n  public static SUNDAY: number = 0;\n  public static MONDAY: number = 1;\n  public static TUESDAY: number = 2;\n  public static WEDNESDAY: number = 3;\n  public static THURSDAY: number = 4;\n  public static FRIDAY: number = 5;\n  public static SATURDAY: number = 6;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Weekday.ts"],"sourceRoot":""}